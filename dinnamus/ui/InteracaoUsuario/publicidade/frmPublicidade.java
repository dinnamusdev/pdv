/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dinnamus.ui.InteracaoUsuario.publicidade;

import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.ui.teclas.TeclasDeAtalho;
import br.manipulararquivos.ManipulacaoArquivo2;
import dinnamus.metodosnegocio.publicidade.Publicidade;
import br.com.ui.ImagemTratamento;
import java.awt.event.ActionEvent;
import static java.lang.Thread.sleep;
import java.sql.ResultSet;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ImageIcon;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;
import static java.lang.Thread.sleep;

/**
 *
 * @author Fernando
 */
public class frmPublicidade extends javax.swing.JDialog {

    /**
     * Creates new form frmPublicidade
     */
    private Thread ThreadTransicao = null;
    public static String TeclasLidas="";
    private Boolean Executa =true;        
    private int nImageAtual =0;
    private int PublicidadeTempoTransicaoMiliSegundo =3000;
    private static Float ImagemWidth=0f;
    private static Float ImagemHeight=0f;    
    private ResultSet rsImagens =null;
    private String PublicidadeDiretorio = "";            
    public frmPublicidade(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        MetodosUI_Auxiliares_1.MaximizarJanelaDeDialogo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        painelImagem = new javax.swing.JPanel();
        lblImagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        painelImagem.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelImagem.setLayout(new java.awt.GridBagLayout());

        lblImagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/sem imagem.jpg"))); // NOI18N
        lblImagem.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                lblImagemMouseMoved(evt);
            }
        });
        lblImagem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lblImagemKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        painelImagem.add(lblImagem, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here
        if(!IniciarUI()){
            dispose();
        }
        
        
    }//GEN-LAST:event_formWindowOpened

    private void lblImagemKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lblImagemKeyPressed
        // TODO add your handling code here:
         try {
            
            if(evt.getKeyChar()=='\n'){
                //MetodosUI_Auxiliares.MensagemAoUsuarioSimplesINFO(null, TeclasLidas,  "TeclaLidas");
                 
               InterromperPublicidade();
                
            }else{
                //Character Letra = new Character(evt.getKeyChar());
               if(Character.isLetterOrDigit(evt.getKeyChar())){                   
                 TeclasLidas+= new String( ((Character)evt.getKeyChar()).toString() );                 
               }                
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_lblImagemKeyPressed

    private void lblImagemMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImagemMouseMoved
        // TODO add your handling code here:
            //InterromperPublicidade();
    }//GEN-LAST:event_lblImagemMouseMoved

    /**
     * @param args the command line arguments
     */
    public boolean PreencherListDeImagens(){
        try {
          
            rsImagens = Publicidade.ListarDeImagens();
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    public boolean TransicaoDeImagem(){
        try {
            if(rsImagens.next()){
              //String cArquivo =  PublicidadeImagens.get(nImageAtual);
              byte[] imagempublicidade  = rsImagens.getBytes("imagem");
              if(imagempublicidade!=null){
                if(imagempublicidade.length>0){
                  PublicidadeTempoTransicaoMiliSegundo = rsImagens.getInt("tempovisivel")*1000;
                  ImageIcon ImagemPublicidade = new ImageIcon(imagempublicidade);              
                  painelImagem.update(painelImagem.getGraphics());
                  
                  if(ImagemHeight==0 || ImagemWidth==0){
                     ImagemWidth = (float) this.getWidth();
                     ImagemHeight =(float) this.getHeight();                     
                     ImagemWidth=ImagemWidth*0.99f;
                     ImagemHeight=ImagemHeight*0.99f;
                  }                  
                  //System.out.println("Height :"  + ImagemHeight );
                  
                  //System.out.println("Width :"  + ImagemWidth );
                  if(lblImagem!=null){
                    lblImagem.setIcon(ImagemTratamento.AjustarTamanho(ImagemPublicidade,ImagemWidth.intValue(), ImagemHeight.intValue()));
                    //lblImagem.update(lblImagem.getGraphics());             
                  }
                }
              }
            }else{
                //rsImagens.beforeFirst();
                rsImagens = Publicidade.ListarDeImagens();
            }
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    public boolean TarefaDeTransicao(){
        try {
            
            ThreadTransicao = new Thread("frmPublicidade_TarefaDeTransicao"){
                  public void run() {
                      //Date Agora = new Date();
                      //System.out.println("INICIANDO");
                      while(Executa){
                            try {                   
                                //System.out.println("EXECUTANDO...");

                                Long Agora = System.currentTimeMillis();    
                                TransicaoDeImagem();
                                while(Executa &&  (System.currentTimeMillis() - Agora) < PublicidadeTempoTransicaoMiliSegundo){                                
                                    try {
                                        if(!isInterrupted()){
                                            sleep(1);
                                        }
                                    } catch (InterruptedException ex) {
                                        LogDinnamus.Log(ex, true);
                                    }
                                }
                            } catch (Exception e) {
                                LogDinnamus.Log(e, true);
                                Executa=false;
                            }
                      }
                      //System.out.println("INTERROMPIDO");
                      //dispose();
                  }
                
            };
            
            ThreadTransicao.start();
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean InterromperPublicidade(){
        try {
            
            Executa=false;
            //while(!ThreadTransicao.isInterrupted()){}
            System.out.println("INTERROMPENDO....");
            dispose();
            
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean IniciarUI_TeclaAtalho(){
        try {
            Action[] acoes = new Action[1];   
            acoes[0]= new  AbstractAction() {
                @Override  
                public void actionPerformed(ActionEvent e) {
                       TeclasLidas=""; 
                       InterromperPublicidade();
                       
                }
            };                        
            String[] Teclas = new String[2];            
            Teclas[0] = "ESCAPE";            
               
            TeclasDeAtalho.DefinirFuncao_A_Tecla(painelImagem, acoes, Teclas);        
            
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    public boolean IniciarUI(){
        try {
                PublicidadeDiretorio=ManipulacaoArquivo2.DiretorioDeTrabalho() + 
                                          ManipulacaoArquivo2.getSeparadorDiretorio() +
                                          "Publicidade";

                PreencherListDeImagens();
                
                ImagemHeight =0f;
                ImagemWidth=0f;
                TeclasLidas="";
                
                             
                if(!ManipulacaoArquivo2.DiretorioExiste(PublicidadeDiretorio)){
                    ManipulacaoArquivo2.CriarDiretorio(PublicidadeDiretorio);                    
                }
                IniciarUI_TeclaAtalho();
                
                TarefaDeTransicao();
                
                lblImagem.requestFocus();
                
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblImagem;
    private javax.swing.JPanel painelImagem;
    // End of variables declaration//GEN-END:variables
}
