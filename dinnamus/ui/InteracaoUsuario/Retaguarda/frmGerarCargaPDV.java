/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmGerarCargaPDV.java
 *
 * Created on 19/07/2010, 12:39:10
 */

package dinnamus.ui.InteracaoUsuario.Retaguarda;

import br.com.log.LogDinnamus;
import br.manipulararquivos.ManipulacaoZIPUNZIP;
import dinnamus.infraestrutura.inicializacao.ArquivoCargaPDV;
import br.data.DataHora;
import br.manipulararquivos.ManipulacaoArquivo2;
import MetodosDeNegocio.Venda.pdvgerenciar;
import br.com.ui.MetodosUI_Auxiliares_1;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author dti
 */
public class frmGerarCargaPDV extends  javax.swing.JDialog {

    /** Creates new form frmGerarCargaPDV */

    private int nTabelaAtual=0;
    private boolean bExecutarThread=false;
    private Thread thProgress=null;
    private java.awt.Frame parent;
    public frmGerarCargaPDV( java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent=parent;
        initComponents();
        setLocationRelativeTo(null);
        if(!InicializarUI())
        {
            this.dispose();
            
        }
        

    }

    private boolean PrepararDiretorio(String cDiretorioCarga) {
        boolean bRet=false;
        bRet= ManipulacaoArquivo2.DiretorioExiste(cDiretorioCarga);
        if(!bRet){
            bRet = ManipulacaoArquivo2.CriarDiretorio(cDiretorioCarga);
        }
        return bRet;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        fcDiretorios = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtCaminho = new javax.swing.JTextField();
        btGerar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerar Carga PDV");

        jTabbedPane1.setMaximumSize(new java.awt.Dimension(571, 409));
        jTabbedPane1.setMinimumSize(new java.awt.Dimension(571, 409));

        fcDiretorios.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        fcDiretorios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcDiretoriosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(fcDiretorios, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fcDiretorios, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Local de Gravação", jPanel2);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Arquivo de Carga PDV", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        txtLog.setColumns(20);
        txtLog.setEditable(false);
        txtLog.setRows(5);
        jScrollPane1.setViewportView(txtLog);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Arquivo Gerado");

        txtCaminho.setEditable(false);

        btGerar.setText("Gerar");
        btGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Tabela");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 545, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtCaminho, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                                .addGap(2, 2, 2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btGerar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCaminho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btGerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btGerar, txtCaminho});

        jTabbedPane1.addTab("Log", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private boolean InicializarUI()
    {
        boolean bRet=false;
        String cDiretorioCarga="";
        ResultSet DadosPDV = pdvgerenciar.DadosPdv();
        try {
            if (DadosPDV.getString("DiretorioPadraoEnvio") == null) {
                cDiretorioCarga = ManipulacaoArquivo2.DiretorioDeTrabalho() + ManipulacaoArquivo2.getSeparadorDiretorio() + "EnviarPDV";
                bRet = PrepararDiretorio(cDiretorioCarga);
                bRet= pdvgerenciar.GravarDiretorioPadraoEnvio(cDiretorioCarga , DadosPDV.getInt("CodigoPDV"));
            } else {
                cDiretorioCarga = DadosPDV.getString("DiretorioPadraoEnvio");
                jTabbedPane1.setSelectedIndex(1);
                txtCaminho.setText(cDiretorioCarga);

            }
            if(cDiretorioCarga.length()>0)
            {
               fcDiretorios.setCurrentDirectory(ManipulacaoArquivo2.novaInstanciaFile(cDiretorioCarga));               
            }
            //thProgress = new Thread(new GerarArquivoPDV());
            //thProgress.setDaemon(true);
            //thProgress.start();
            
        } catch (SQLException ex) {
            Logger.getLogger(frmGerarCargaPDV.class.getName()).log(Level.SEVERE, null, ex);
        }
        return bRet;
    }
    @SuppressWarnings("static-access")
    private void fcDiretoriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcDiretoriosActionPerformed
        // TODO add your handling code here:

       if(evt.getActionCommand().equalsIgnoreCase("ApproveSelection"))
       {
            try {
                String cDiretorioSelecionado = fcDiretorios.getSelectedFile().toString();
                if (pdvgerenciar.GravarDiretorioPadraoEnvio(cDiretorioSelecionado, pdvgerenciar.DadosPdv().getInt("CodigoPDV"))) {
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(
                            (JFrame) parent, "Caminho definido com sucesso", "Arquivo de Carga", "INFO");
                    txtCaminho.setText(cDiretorioSelecionado);
                    jTabbedPane1.setSelectedIndex(1);
                }
                else
                {
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(
                            (JFrame) parent, "Nãi foi possivel definir o caminho", "Arquivo de Carga", "ERROR");
                }
            } catch (SQLException ex) {
                LogDinnamus.Log(ex);
            }

       }
       else if(evt.getActionCommand().equalsIgnoreCase("CancelSelection"))
       {
           this.dispose();
       }
    }//GEN-LAST:event_fcDiretoriosActionPerformed
    

    private void Log(String cTexto, boolean  bUsarDataHora)
    {
        txtLog.append( ( bUsarDataHora ? DataHora.getData()+ " " + DataHora.getHora() + " " : "" )+ cTexto);
        txtLog.update(txtLog.getGraphics());
    }

    
    private void btGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarActionPerformed
        // TODO add your handling code here:
          try {


            //bExecutarThread=true;
            boolean bFalha=false;
             String data = DataHora.getData("ddMMyyyy");
            String hora = DataHora.getHora("HHmmss");
            ArquivoCargaPDV.Iniciar(txtCaminho.getText(),data,hora);
            String cNomeTabela="";
            ArrayList<String> arTabela = ArquivoCargaPDV.ProcessarArquivo_ListaTabelas();
            //jProgressDinnamuS1.setArLista(arTabela);
            //jProgressDinnamuS.setArLista(arTabela);
            jProgressBar1.setStringPainted(true);
            jProgressBar1.setMinimum(1);
            jProgressBar1.setMaximum(arTabela.size());
            for (int i = 0; i < arTabela.size(); i++) {
                cNomeTabela = arTabela.get(i);
                
                

                
                jProgressBar1.setString("Processando Tabela " + cNomeTabela);
                jProgressBar1.setValue(i+1);
                
                Log("Processando Tabela ...." + cNomeTabela ,true);
                
                jProgressBar1.update(jProgressBar1.getGraphics());
                if(ArquivoCargaPDV.ProcessarTabela(cNomeTabela))
                   Log(" - OK\n" ,false);
                else
                {
                   Log(" - Falha\n" ,false);
                   bFalha=true;
                   break;
                }
            }
            if(!bFalha)
            {                
                String cNomeArquivoZIP=txtCaminho.getText() + ManipulacaoArquivo2.getSeparadorDiretorio() + "CargaPDV" +
                    DataHora.getCampoFormatado( DataHora.FormatDataPadrao.replaceAll("/",""),  new Date())+
                    DataHora.getCampoFormatado( DataHora.FormatHoraPadrao.replaceAll(":",""), new Date())+ 
                    ".zip";
                Log("Iniciando compactação do arquivo de carga "+ cNomeArquivoZIP  +"\n" ,true);
                ManipulacaoZIPUNZIP zIP=new ManipulacaoZIPUNZIP();
                if(zIP.CompactarArquivosDinnamuS(cNomeArquivoZIP, ArquivoCargaPDV.getArquivosCarga()))
                {
                    Log("Arquivo compactado com sucesso\n"  ,true);
                    Log("Removendo arquivos temporarios..."  ,true);
                    if(ManipulacaoArquivo2.ExcluirArquivo(ArquivoCargaPDV.getArquivosCarga()))
                    {
                        Log("OK\n"  ,false);
                        Log("Processo concluido com sucesso\n"  ,true);
                        jProgressBar1.setString("Processo concluido com sucesso");
                    }
                    else
                        Log("Falha\n"  ,false);
                }
                else
                    Log("Falha na compactação do arquivo\n"  ,true);
            }            
        } catch (Exception e) {
                LogDinnamus.Log(e);
        }

    }//GEN-LAST:event_btGerarActionPerformed

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGerar;
    private javax.swing.JFileChooser fcDiretorios;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txtCaminho;
    public javax.swing.JTextArea txtLog;
    // End of variables declaration//GEN-END:variables


}
