/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dinnamus.ui.InteracaoUsuario.prevenda;

import br.String.ManipulacaoString;
import br.diversos.ControlarDigitacao;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.data.ManipularData;
import br.ui.teclas.DefinirAtalhos2;
import br.ui.teclas.controleteclas;
import br.valor.formatar.FormatarNumero;
import com.toedter.calendar.JDateChooser;
import MetodosDeNegocio.Venda.PreVenda;
import MetodosDeNegocio.Venda.PreVendasSelecionadas;
import MetodosDeNegocio.Venda.ParametrosGlobais;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.TableCellRenderer;

/**
 *
 * @author Fernando
 */
public class frmPDV_ListarPrevenda extends javax.swing.JDialog {

    /**
     * Creates new form frmPDV_Simples_ImportarPrevenda
     */
    
    private boolean CarregouUI =false;
    private boolean MesclagemEmAndamento = false;
    private boolean ModificouMesclagem = false;
    public frmPDV_ListarPrevenda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        chkOperacaoConcomitante = new javax.swing.JCheckBox();
        PainelPrincipal = new javax.swing.JPanel();
        PainelTopo = new javax.swing.JPanel();
        btFechar2 = new javax.swing.JButton();
        lblNomeForma2 = new javax.swing.JLabel();
        PainelCorpo = new javax.swing.JPanel();
        PainelCorpoPreVendas = new javax.swing.JPanel();
        dbgPreVenda = new br.com.ui.JTableDinnamuS();
        PainelCampos = new javax.swing.JPanel();
        PainelCamposPesquisar = new javax.swing.JPanel();
        txtCodigoCotacao = new javax.swing.JTextField();
        txtCodigoOrcamento = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        PainelFiltro = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDataInicial = new JDateChooser("dd/MM/yyyy", "##/##/####", '_');
        txtDataFinal = new JDateChooser("dd/MM/yyyy", "##/##/####", '_');
        btEscolherPreVenda = new javax.swing.JButton();
        PainelCamposPesquisarCodigo = new javax.swing.JPanel();
        txtCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        chkOperacaoConcomitante.setBackground(new java.awt.Color(255, 255, 255));
        chkOperacaoConcomitante.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        chkOperacaoConcomitante.setMnemonic('O');
        chkOperacaoConcomitante.setText("CONCOMITANTE - [ F2 ]");
        chkOperacaoConcomitante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkOperacaoConcomitante.setOpaque(false);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 500));
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        PainelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelTopo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTopo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        PainelTopo.setLayout(new java.awt.GridBagLayout());

        btFechar2.setBackground(new java.awt.Color(0, 0, 0));
        btFechar2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btFechar2.setForeground(new java.awt.Color(255, 255, 255));
        btFechar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar2.setMnemonic('x');
        btFechar2.setText("FECHAR");
        btFechar2.setToolTipText("");
        btFechar2.setBorderPainted(false);
        btFechar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar2ActionPerformed(evt);
            }
        });
        btFechar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btFechar2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelTopo.add(btFechar2, gridBagConstraints);

        lblNomeForma2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblNomeForma2.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeForma2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeForma2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/impressora.png"))); // NOI18N
        lblNomeForma2.setText("PDV - CONSULTAR PRÉ-VENDA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        PainelTopo.add(lblNomeForma2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 4, 3);
        PainelPrincipal.add(PainelTopo, gridBagConstraints);

        PainelCorpo.setBackground(new java.awt.Color(0, 0, 0));
        PainelCorpo.setOpaque(false);
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelCorpoPreVendas.setBackground(new java.awt.Color(0, 0, 0));
        PainelCorpoPreVendas.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        PainelCorpoPreVendas.setOpaque(false);
        PainelCorpoPreVendas.setLayout(new java.awt.GridBagLayout());

        dbgPreVenda.setExibirBarra(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 6, 6, 8);
        PainelCorpoPreVendas.add(dbgPreVenda, gridBagConstraints);

        PainelCampos.setBackground(new java.awt.Color(0, 0, 0));
        PainelCampos.setLayout(new java.awt.GridBagLayout());

        PainelCamposPesquisar.setBackground(new java.awt.Color(0, 0, 0));
        PainelCamposPesquisar.setOpaque(false);
        PainelCamposPesquisar.setLayout(new java.awt.GridBagLayout());

        txtCodigoCotacao.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtCodigoCotacao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigoCotacao.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCodigoCotacao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoCotacaoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelCamposPesquisar.add(txtCodigoCotacao, gridBagConstraints);

        txtCodigoOrcamento.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtCodigoOrcamento.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCodigoOrcamento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoOrcamentoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelCamposPesquisar.add(txtCodigoOrcamento, gridBagConstraints);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SEQUÊNCIA ");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelCamposPesquisar.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 8);
        PainelCampos.add(PainelCamposPesquisar, gridBagConstraints);

        PainelFiltro.setBackground(new java.awt.Color(0, 0, 0));
        PainelFiltro.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        PainelFiltro.setLayout(new java.awt.GridBagLayout());

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PERÍODO");
        jLabel2.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        PainelFiltro.add(jLabel2, gridBagConstraints);

        txtDataInicial.setBackground(new java.awt.Color(0, 0, 0));
        txtDataInicial.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtDataInicial.getDateEditor().getUiComponent().addKeyListener(

            new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}

                @Override
                public void keyPressed(KeyEvent e) {
                    if(e.getKeyCode()==KeyEvent.VK_ENTER){
                        //txtDataFinal.requestFocus();
                    }
                }
                @Override
                public void keyReleased(KeyEvent e) {}

            }
        );
        txtDataInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataInicialFocusGained(evt);
            }
        });
        txtDataInicial.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDataInicialPropertyChange(evt);
            }
        });
        txtDataInicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataInicialKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelFiltro.add(txtDataInicial, gridBagConstraints);

        txtDataFinal.setBackground(new java.awt.Color(0, 0, 0));
        txtDataFinal.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        txtDataInicial.getDateEditor().getUiComponent().addKeyListener(

            new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}

                @Override
                public void keyPressed(KeyEvent e) {
                    if(e.getKeyCode()==KeyEvent.VK_ENTER){
                        //SwingUtilidade.RequestFocus(txtValorParcela);
                        // btPesquisar.requestFocus();
                    }
                }
                @Override
                public void keyReleased(KeyEvent e) {}

            }
        );
        txtDataFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDataFinalFocusGained(evt);
            }
        });
        txtDataFinal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDataFinalPropertyChange(evt);
            }
        });
        txtDataFinal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDataFinalKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelFiltro.add(txtDataFinal, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 6);
        PainelCampos.add(PainelFiltro, gridBagConstraints);

        btEscolherPreVenda.setBackground(new java.awt.Color(0, 0, 0));
        btEscolherPreVenda.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btEscolherPreVenda.setForeground(new java.awt.Color(255, 255, 255));
        btEscolherPreVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Yes.png"))); // NOI18N
        btEscolherPreVenda.setText("SELECIONAR - [F9]");
        btEscolherPreVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEscolherPreVendaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        PainelCampos.add(btEscolherPreVenda, gridBagConstraints);

        PainelCamposPesquisarCodigo.setBackground(new java.awt.Color(0, 0, 0));
        PainelCamposPesquisarCodigo.setOpaque(false);
        PainelCamposPesquisarCodigo.setLayout(new java.awt.GridBagLayout());

        txtCodigo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtCodigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelCamposPesquisarCodigo.add(txtCodigo, gridBagConstraints);

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CÓDIGO ");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        jLabel3.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelCamposPesquisarCodigo.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 8);
        PainelCampos.add(PainelCamposPesquisarCodigo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 6, 5);
        PainelCorpoPreVendas.add(PainelCampos, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.4;
        PainelCorpo.add(PainelCorpoPreVendas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelPrincipal.add(PainelCorpo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private boolean IniciarUI(){
        try {
           
            ModificouMesclagem=false;
            PainelFiltro.setVisible(true);
            txtDataInicial.setDate(ManipularData.DataAtual());
            txtDataFinal.setDate(ManipularData.DataAtual());
            
            if(!IniciarUI_DbgPrevenda()){
                return false;
            }
            if(!IniciarUI_TeclaAtalho()){
                return false;
            }
            //txtCodigoCotacao.setCaret(new BasicTextUI.BasicCaret().se);
            txtCodigoCotacao.setDocument(new ControlarDigitacao("NUMERICO"));
            txtCodigoOrcamento.setDocument(new ControlarDigitacao("NUMERICO"));
            
            dbgPreVenda.getjTable().requestFocus();
            if(Sistema.isOnline()){
            Long IndiceSeq =PreVenda.VerificarIndiceSequenciamento(Sistema.getLojaAtual());
                txtCodigoOrcamento.setText(IndiceSeq.toString());            
                txtCodigoCotacao.requestFocus();
            }else{
                txtCodigo.requestFocus();
            }
            
            if(dbgPreVenda.getTbDinnamuS().getRowCount()>0){
                dbgPreVenda.getjTable().setRowSelectionInterval(0, 0);
            }
            
            
           // IniciarUI_DbgMesclagem();
            
            if(PreVendasSelecionadas.getNotasSelecionadas().size()==0){               
               MesclagemEmAndamento=false;
            }else{
               MesclagemEmAndamento=true;
               btEscolherPreVenda.setVisible(false);
               //btMesclagem.setVisible(false);
            }
            
            //MetodosUI_Auxiliares.MaximizarJanelaDeDialogo(this);
           
            controleteclas.SetarTodosOsBotoes(PainelPrincipal);
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean IniciarUI_DbgPrevenda_Atualizar(){
            return IniciarUI_DbgPrevenda_Atualizar(null);
    }
    private boolean IniciarUI_DbgPrevenda_Atualizar(ResultSet rs){
        try {
            if(rs==null){
                //if(Sistema.isOnline()){
               //     rs = PreVenda.ListarPreVendas(Sistema.getLojaAtual(), txtDataInicial.getDate(), txtDataFinal.getDate());
               // }else{
                    rs = PreVenda.ListarPreVendas_Repositorio(Sistema.getLojaAtual(), txtDataInicial.getDate(), txtDataFinal.getDate());
                //}
            }
           
            
            dbgPreVenda.setRsDados( rs );
            
             
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
        
    }
     private boolean IniciarUI_DbgMesclagem_Atualizar(){
        try {
            
            String ListaPreVendasSelecionadas =   "" ;
            if(PreVendasSelecionadas.getNotasSelecionadas().size()==0){
               ListaPreVendasSelecionadas="'0'"; 
            }else {
                ListaPreVendasSelecionadas = ManipulacaoString.TransformarListEmStringDelimitada(PreVendasSelecionadas.getNotasSelecionadas(),false,"");
            }
            
            ResultSet rs=  PreVenda.ListarPreVendas(Sistema.getLojaAtual(), txtDataInicial.getDate(), txtDataFinal.getDate(),ListaPreVendasSelecionadas);
           
            //dbgMesclagem.setRsDados( rs );
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
        
    }
    
    private boolean IniciarUI_DbgPrevenda(){
        try {  
              
              //dbgPreVenda = new JTableDinnamuS();
              
              //dbgPreVenda.addClColunas("selecionada", "",30,false,true ,javax.swing.SwingConstants.CENTER,new JCheckBox(), "java.lang.Boolean");
              
              dbgPreVenda.addClColunas("cliente", "CLIENTE",30);              
              dbgPreVenda.addClColunas("data", "DATA",10);
              dbgPreVenda.addClColunas("vendedor", "VENDEDOR",20);
              dbgPreVenda.addClColunas("valor", "VALOR",10);
              dbgPreVenda.addClColunas("codigocotacao", "SEQ",10);
              dbgPreVenda.addClColunas("codigoorcamento", "ID",10);              
              dbgPreVenda.addClColunas("codigo", "CÓDIGO",10);              
              dbgPreVenda.addAlinhamentos("valor", SwingConstants.RIGHT);              
              dbgPreVenda.addAlinhamentos("data", SwingConstants.CENTER);              
              dbgPreVenda.addDateFormat("data");
              dbgPreVenda.addNumberFormat("valor");             
              dbgPreVenda.getTbDinnamuS().setModeloUsandoColecao(true);              
              dbgPreVenda.getjTable().setRowHeight(dbgPreVenda.getjTable().getRowHeight()+20);
              dbgPreVenda.setAjustaColunaAoPainel(true);
              dbgPreVenda.setColunaComTamanhosEmPercentual(true);              
              
              IniciarUI_DbgPrevenda_Atualizar();
              
              
              //dbgPreVenda.getjTable().getColumnModel().getColumn(0).setHeaderRenderer(new MyTableHeaderRenderer() );
              dbgPreVenda.getjTable().addKeyListener( new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}
                @Override
                public void keyPressed(KeyEvent e) {
                        if(e.getKeyCode()==KeyEvent.VK_ENTER){
                            e.consume();
                            btEscolherPreVendaActionPerformed(null);
                        }else if(e.getKeyCode()==KeyEvent.VK_F2){
                            e.consume();
                            chkOperacaoConcomitante.setSelected(!chkOperacaoConcomitante.isSelected());
                         }else if(e.getKeyCode()==KeyEvent.VK_SPACE){
                             int Linha = dbgPreVenda.getjTable().getSelectedRow();
                             if(Linha>=0){
                                if(dbgPreVenda.getjTable().getSelectedColumn()>0){ 
                                    Boolean ValorColuna = (Boolean) dbgPreVenda.getTbDinnamuS().getValueAt(Linha, 0);
                                    dbgPreVenda.getTbDinnamuS().setValueAt(!ValorColuna, Linha,0);
                                }
                             }
                         }
                }
                @Override
                public void keyReleased(KeyEvent e) {}
                }
              );              
              return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    
    class MyTableHeaderRenderer extends JComboBox implements TableCellRenderer {
         public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int rowIndex, int vColIndex) {
            addItem("item 1");
            addItem("item 2");
            addItem("item 3");
            return this;
          }
      }        
    private void btFechar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar2ActionPerformed
        try {
            if(!MesclagemEmAndamento){
                PreVendasSelecionadas.LimparNotasSelecionadas();
                ParametrosGlobais.setPreVenda_Codigo(new ArrayList<Long>());
            }else{
                if(ModificouMesclagem){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "AS NOTAS ENVOLVIDAS NA MESCLAGEM \nFORAM MODIFICADAS. CONFIRME OU CANCELE A OPERAÇÃO", "MESCLAGEM EM ANDAMENTO");
                    return;
                }else{
                    ParametrosGlobais.setPreVenda_Codigo(PreVendasSelecionadas.getNotasSelecionadas());
                    ParametrosGlobais.setMesclagem_Alterada(ModificouMesclagem);                    
                }
            }
            dispose();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }

    }//GEN-LAST:event_btFechar2ActionPerformed
    private boolean ValidarCampos(){
        try {
                Long CodigoCotacao =  FormatarNumero.FormatarNumeroLong(txtCodigoCotacao.getText());                
                Long CodigoOrcamento =  FormatarNumero.FormatarNumeroLong(txtCodigoOrcamento.getText());
                if(CodigoCotacao==null){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "SEQUENCIA INVÁLIDA", "PRÉ - VENDA");
                    return false;
                }
                
                if(CodigoOrcamento==null){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "IDENTIFICADOR INVÁLIDO", "PRÉ - VENDA");
                    return false;
                }   
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
            
        
    private void btFechar2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btFechar2KeyPressed
        // TODO add your handling code here:
       

    }//GEN-LAST:event_btFechar2KeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CarregouUI=IniciarUI();
        if(!CarregouUI){
            dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    private void txtDataInicialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataInicialFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataInicialFocusGained

    private void txtDataInicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataInicialKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_txtDataInicialKeyPressed

    private void txtDataFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDataFinalFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataFinalFocusGained

    private void txtDataFinalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDataFinalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataFinalKeyPressed
    private void Filtrar(){
        try {
            
            if(txtDataInicial.getDate()==null){
               // MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "DATA INICIAL INVÁLIDA", "PESQUISAR PRÉ-VENDA");
                return;
            }
            
            if(txtDataFinal.getDate()==null){
                //MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(null, "DATA FINAL INVÁLIDA", "PESQUISAR PRÉ-VENDA");
                return;
            }
            
            IniciarUI_DbgPrevenda_Atualizar();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }       
    private void Funcoes(String Tecla){
        try {
            if(Tecla.equalsIgnoreCase("ESCAPE")){
                btFechar2ActionPerformed(null);
            }else  if(Tecla.equalsIgnoreCase("F10")){                
                
            }else  if(Tecla.equalsIgnoreCase("F9")){    
                if(btEscolherPreVenda.isVisible()){
                    btEscolherPreVendaActionPerformed(null);
                }else{
                
                }
            }else  if(Tecla.equalsIgnoreCase("F4")){
                
            }else  if(Tecla.equalsIgnoreCase("F5")){
                
            }else  if(Tecla.equalsIgnoreCase("F3")){
                
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }
     private boolean IniciarUI_TeclaAtalho(){
        try {
            
           
            
            AbstractAction TeclaAtalhos  = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                        String Tecla = e.getSource().toString();                
                        Funcoes(Tecla);
                }
            };    
            String Teclas[] ={"F3","F4","F5","F9","F10","ESCAPE"};            
            DefinirAtalhos2.Definir(PainelPrincipal, Teclas, TeclaAtalhos);            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }    
    private void PesquisarPorCodigo(){
            try {         
               if(ValidarCampos()){
                   Long CodigoOnline = 0l;
                   Long CodigoCotacao =  FormatarNumero.FormatarNumeroLong(txtCodigoCotacao.getText());                
                   Long CodigoOrcamento =  FormatarNumero.FormatarNumeroLong(txtCodigoOrcamento.getText());
                   ResultSet rs = PreVenda.LocalizarPreVendas(CodigoCotacao, CodigoOrcamento, Sistema.getLojaAtual());
                   if(rs.next()){
                       CodigoOnline = rs.getLong("codigo");
                   }
                   IniciarUI_DbgPrevenda_Atualizar(rs);
                   
                   if(dbgPreVenda.getTbDinnamuS().getRowCount()>0){
                       
                       btEscolherPreVenda.requestFocus();
                       
                   }else{
                       MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "INFORMAÇÃO NÃO LOCALIZADA", "LOCALIZAR PRÉ-VENDA");
                       txtCodigoCotacao.requestFocus();
                   }               
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            
        }
    }
    private void txtDataInicialPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDataInicialPropertyChange
        // TODO add your handling code here:
        if(evt.getPropertyName().equalsIgnoreCase("date")&& this.CarregouUI){
           // btPesquisarActionPerformed(null);
         
                Filtrar();
             
        }
        
    }//GEN-LAST:event_txtDataInicialPropertyChange

    private void txtDataFinalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDataFinalPropertyChange
        // TODO add your handling code here:
        if(evt.getPropertyName().equalsIgnoreCase("date") && this.CarregouUI){
            //btPesquisarActionPerformed(null);
            Filtrar();
        }
    }//GEN-LAST:event_txtDataFinalPropertyChange
    
    private void btEscolherPreVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEscolherPreVendaActionPerformed
        // TODO add your handling code here:
        try {
            int LinhaAtual = dbgPreVenda.getjTable().getSelectedRow();
            if(LinhaAtual>=0){                
                Long CodigoVenda = Long.valueOf(dbgPreVenda.getTbDinnamuS().getValorCelulaLong("codigo",LinhaAtual).toString());
                ParametrosGlobais.getPreVenda_Codigo().add(CodigoVenda);               
                ParametrosGlobais.setPreVenda_Concomitante(chkOperacaoConcomitante.isSelected());
                PreVendasSelecionadas.getNotasSelecionadas().add(CodigoVenda);
                dispose();
            }

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btEscolherPreVendaActionPerformed

    private void txtCodigoOrcamentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoOrcamentoKeyPressed
        // TODO add your handling code here:
        try {
            if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                PesquisarPorCodigo();
            }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
                dbgPreVenda.getjTable().requestFocus();
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_txtCodigoOrcamentoKeyPressed

    private void txtCodigoCotacaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoCotacaoKeyPressed
        // TODO add your handling code here:
        try {
            if(evt.getKeyCode()==KeyEvent.VK_ENTER){
                PesquisarPorCodigo();
            }else if(evt.getKeyCode()==KeyEvent.VK_DOWN){
                dbgPreVenda.getjTable().requestFocus();
                if(dbgPreVenda.getTbDinnamuS().getRowCount()>0){
                    dbgPreVenda.getjTable().setRowSelectionInterval(0, 0);
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_txtCodigoCotacaoKeyPressed

    private void txtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoKeyPressed

    /**
     * @param args the command line arguments
     */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelCampos;
    private javax.swing.JPanel PainelCamposPesquisar;
    private javax.swing.JPanel PainelCamposPesquisarCodigo;
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelCorpoPreVendas;
    private javax.swing.JPanel PainelFiltro;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelTopo;
    private javax.swing.JButton btEscolherPreVenda;
    private javax.swing.JButton btFechar2;
    private javax.swing.JCheckBox chkOperacaoConcomitante;
    private br.com.ui.JTableDinnamuS dbgPreVenda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel lblNomeForma2;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoCotacao;
    private javax.swing.JTextField txtCodigoOrcamento;
    private com.toedter.calendar.JDateChooser txtDataFinal;
    private com.toedter.calendar.JDateChooser txtDataInicial;
    // End of variables declaration//GEN-END:variables
}
