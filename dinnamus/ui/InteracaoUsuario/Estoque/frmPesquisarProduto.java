/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmPesquisarProduto.java
 *
 * Created on 30/03/2011, 18:41:16
 */

package dinnamus.ui.InteracaoUsuario.Estoque;

import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.valor.formatar.FormatarNumero;
import MetodosDeNegocio.Fachada.cadproduto;
import br.com.ui.SwingUtilidade;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.util.HashMap;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;

/**
 *
 * @author Administrador
 */
public class frmPesquisarProduto extends javax.swing.JDialog {

    /** Creates new form frmPesquisarProduto */
    private String CodigoProduto="";
    private Integer Filial =0;
    public String PesquisarTexto ="";
    public Float nPreco =0f;
    public frmPesquisarProduto(java.awt.Frame parent, boolean modal, Integer nFilial) {
        super(parent, modal);
        initComponents();
        MetodosDoConstrutor(nFilial,"",false);
    }
    public frmPesquisarProduto(java.awt.Frame parent, boolean modal, Integer nFilial,String cPesquisarTexto) {
        super(parent, modal);
        initComponents();
        MetodosDoConstrutor(nFilial,cPesquisarTexto,false);
        
        
    }
    public frmPesquisarProduto(java.awt.Frame parent, boolean modal, Integer nFilial,String cPesquisarTexto,boolean AbrirForm) {
        super(parent, modal);
        initComponents();
        MetodosDoConstrutor(nFilial,cPesquisarTexto,AbrirForm);
        
        
    }
    public void MetodosDoConstrutor(  Integer nFilial,String cPesquisarTexto,boolean AbrirForm){
        
        setFilial(nFilial);
        this.PesquisarTexto = cPesquisarTexto;
        if(!InicializarUI()){
           this.dispose();
        }else{
            
           MetodosUI_Auxiliares_1.MaximizarJanelaDeDialogo(this);
           this.setLocationRelativeTo(null);
           
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PainelCorpo = new javax.swing.JPanel();
        PainelDetalhamentoItem = new javax.swing.JPanel();
        dbgDetalhes = new br.com.ui.JTableDinnamuS();
        PainelOpcoesGrade = new javax.swing.JPanel();
        dbgOpcoesEstoque = new br.com.ui.JTableDinnamuS();
        PainelPreco = new javax.swing.JPanel();
        dbgPrecos = new br.com.ui.JTableDinnamuS();
        PainelEstoque = new javax.swing.JPanel();
        dbgLocaisEstoque = new br.com.ui.JTableDinnamuS();
        PainelTopo = new javax.swing.JPanel();
        btFechar4 = new javax.swing.JButton();
        lblNomeForma4 = new javax.swing.JLabel();
        txtProcurar = new javax.swing.JTextField();
        chkSomenteComEstoque = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PESQUISAR PRODUTO");
        setIconImage(null);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelCorpo.setBackground(new java.awt.Color(0, 0, 0));
        PainelCorpo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelDetalhamentoItem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalhamento do Item", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        PainelDetalhamentoItem.setOpaque(false);

        dbgDetalhes.setExibirBarra(false);

        javax.swing.GroupLayout PainelDetalhamentoItemLayout = new javax.swing.GroupLayout(PainelDetalhamentoItem);
        PainelDetalhamentoItem.setLayout(PainelDetalhamentoItemLayout);
        PainelDetalhamentoItemLayout.setHorizontalGroup(
            PainelDetalhamentoItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDetalhamentoItemLayout.createSequentialGroup()
                .addComponent(dbgDetalhes, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelDetalhamentoItemLayout.setVerticalGroup(
            PainelDetalhamentoItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelDetalhamentoItemLayout.createSequentialGroup()
                .addComponent(dbgDetalhes, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.3;
        PainelCorpo.add(PainelDetalhamentoItem, gridBagConstraints);

        PainelOpcoesGrade.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opções de Venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        PainelOpcoesGrade.setOpaque(false);

        dbgOpcoesEstoque.setExibirBarra(false);

        javax.swing.GroupLayout PainelOpcoesGradeLayout = new javax.swing.GroupLayout(PainelOpcoesGrade);
        PainelOpcoesGrade.setLayout(PainelOpcoesGradeLayout);
        PainelOpcoesGradeLayout.setHorizontalGroup(
            PainelOpcoesGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelOpcoesGradeLayout.createSequentialGroup()
                .addComponent(dbgOpcoesEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelOpcoesGradeLayout.setVerticalGroup(
            PainelOpcoesGradeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelOpcoesGradeLayout.createSequentialGroup()
                .addComponent(dbgOpcoesEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 232, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        PainelCorpo.add(PainelOpcoesGrade, gridBagConstraints);

        PainelPreco.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Preços", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        PainelPreco.setOpaque(false);

        dbgPrecos.setExibirBarra(false);

        javax.swing.GroupLayout PainelPrecoLayout = new javax.swing.GroupLayout(PainelPreco);
        PainelPreco.setLayout(PainelPrecoLayout);
        PainelPrecoLayout.setHorizontalGroup(
            PainelPrecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelPrecoLayout.createSequentialGroup()
                .addComponent(dbgPrecos, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelPrecoLayout.setVerticalGroup(
            PainelPrecoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbgPrecos, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        PainelCorpo.add(PainelPreco, gridBagConstraints);

        PainelEstoque.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estoque", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        PainelEstoque.setOpaque(false);

        dbgLocaisEstoque.setExibirBarra(false);

        javax.swing.GroupLayout PainelEstoqueLayout = new javax.swing.GroupLayout(PainelEstoque);
        PainelEstoque.setLayout(PainelEstoqueLayout);
        PainelEstoqueLayout.setHorizontalGroup(
            PainelEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbgLocaisEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );
        PainelEstoqueLayout.setVerticalGroup(
            PainelEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelEstoqueLayout.createSequentialGroup()
                .addComponent(dbgLocaisEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        PainelCorpo.add(PainelEstoque, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(PainelCorpo, gridBagConstraints);

        PainelTopo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTopo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));

        btFechar4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btFechar4.setForeground(new java.awt.Color(255, 255, 255));
        btFechar4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar4.setMnemonic('x');
        btFechar4.setToolTipText("");
        btFechar4.setBorder(null);
        btFechar4.setOpaque(false);
        btFechar4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar4ActionPerformed(evt);
            }
        });
        btFechar4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btFechar4KeyPressed(evt);
            }
        });

        lblNomeForma4.setBackground(new java.awt.Color(255, 255, 255));
        lblNomeForma4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblNomeForma4.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeForma4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeForma4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Find.png"))); // NOI18N
        lblNomeForma4.setText("PESQUISAR ");

        txtProcurar.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtProcurar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txtProcurar.setCursor(new java.awt.Cursor(java.awt.Cursor.MOVE_CURSOR));
        txtProcurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProcurarActionPerformed(evt);
            }
        });
        txtProcurar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtProcurarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtProcurarKeyReleased(evt);
            }
        });

        chkSomenteComEstoque.setBackground(new java.awt.Color(255, 255, 255));
        chkSomenteComEstoque.setForeground(new java.awt.Color(255, 255, 255));
        chkSomenteComEstoque.setText("Somente Com Estoque");
        chkSomenteComEstoque.setOpaque(false);

        javax.swing.GroupLayout PainelTopoLayout = new javax.swing.GroupLayout(PainelTopo);
        PainelTopo.setLayout(PainelTopoLayout);
        PainelTopoLayout.setHorizontalGroup(
            PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNomeForma4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkSomenteComEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtProcurar, javax.swing.GroupLayout.DEFAULT_SIZE, 563, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btFechar4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        PainelTopoLayout.setVerticalGroup(
            PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTopoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PainelTopoLayout.createSequentialGroup()
                        .addComponent(btFechar4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(PainelTopoLayout.createSequentialGroup()
                        .addGroup(PainelTopoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProcurar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PainelTopoLayout.createSequentialGroup()
                                .addComponent(lblNomeForma4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSomenteComEstoque)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        getContentPane().add(PainelTopo, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtProcurarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_DOWN){
            dbgDetalhes.getjTable().requestFocus();
        }else {
            String cTexto = txtProcurar.getText();
            if(cTexto.trim().length()>0){
               LocalizarProduto(cTexto.trim());
            }
        }
    }//GEN-LAST:event_txtProcurarKeyReleased
    private void Fechar(){
        this.dispose();
    }
    private void txtProcurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProcurarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProcurarActionPerformed

    private void txtProcurarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcurarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ESCAPE){
            this.dispose();
        }else if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            evt.consume();
            String cCodigoProduto= EscolherProduto();
            if(cCodigoProduto.length()>0){
                setCodigoProduto(cCodigoProduto);
                Fechar();
            }
        }
    }//GEN-LAST:event_txtProcurarKeyPressed

    private void btFechar4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btFechar4ActionPerformed

    private void btFechar4KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btFechar4KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btFechar4KeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        txtProcurar.requestFocus();
    }//GEN-LAST:event_formWindowOpened

    /**
    * @param args the command line arguments
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelDetalhamentoItem;
    private javax.swing.JPanel PainelEstoque;
    private javax.swing.JPanel PainelOpcoesGrade;
    private javax.swing.JPanel PainelPreco;
    private javax.swing.JPanel PainelTopo;
    private javax.swing.JButton btFechar4;
    private javax.swing.JCheckBox chkSomenteComEstoque;
    private br.com.ui.JTableDinnamuS dbgDetalhes;
    private br.com.ui.JTableDinnamuS dbgLocaisEstoque;
    private br.com.ui.JTableDinnamuS dbgOpcoesEstoque;
    private br.com.ui.JTableDinnamuS dbgPrecos;
    private javax.swing.JLabel lblNomeForma4;
    private javax.swing.JTextField txtProcurar;
    // End of variables declaration//GEN-END:variables
    private boolean LocalizarProduto(String cTexto){
        boolean bret=false;
        
       dbgDetalhes.setRsDados(cadproduto.LocalizarItem(cTexto, Sistema.getCodigoLojaMatriz(), !chkSomenteComEstoque.isSelected() ,getFilial()));
       if(dbgDetalhes.getjTable().getRowCount()>0){
           dbgDetalhes.getjTable().setRowSelectionInterval(0, 0);
           /*AtualizarGridOpcoes(0);
           if(dbgOpcoesEstoque.getjTable().getRowCount()>0){
               dbgOpcoesEstoque.getjTable().setRowSelectionInterval(0, 0);
           }*/
       }else{
           AtualizarGridOpcoes(-1l);
           AtualizarGridPrecos(-1l);
       }
       
       return bret;
    }
    private boolean InicializarUI(){
        boolean bRet=false;
        if(InicializarUI_dbgDetalhes()){
           if(InicializarUI_dbgOpcoes()){
               if(InicializarUI_dbgPrecos()){
                   if(InicializarUI_dbgLocaisEstoque()){
                      if(this.PesquisarTexto!=""){
                          LocalizarProduto(this.PesquisarTexto);
                          txtProcurar.setText(this.PesquisarTexto);
                          this.PesquisarTexto="";
                          txtProcurar.requestFocus();
                      }
                      bRet=true;
                      
                   }
               }
            }
        }
        return bRet;

    }
     private boolean InicializarUI_dbgOpcoes(){
        boolean bRet=false;
        try {
            dbgOpcoesEstoque.setAjustaColunaAoPainel(true);
            dbgOpcoesEstoque.getjTable().setFont(new Font("Arial", Font.BOLD, 18));
            dbgOpcoesEstoque.addClColunas("cor", "COR", 100, true);
            dbgOpcoesEstoque.addClColunas("tamanho", "TAMANHO", 80, true);
            dbgOpcoesEstoque.addClColunas("referencia", "REFERENCIA",130, true);
            dbgOpcoesEstoque.addClColunas("codbarra", "codbarra",130, true);
            
            dbgOpcoesEstoque.getjTable().addKeyListener( new KeyListener() {
                public void keyTyped(KeyEvent e) {e.consume();}
                public void keyPressed(KeyEvent e) {TratarTecla(e);}
                public void keyReleased(KeyEvent e) {e.consume();}
            });
            dbgOpcoesEstoque.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                       AtualizarGridPrecos(0l);
                    }
            });

            bRet=true;

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;

    }   
    private boolean TratarTecla(KeyEvent e){
        boolean bRet=false;
        try {
           
           char cTecla = e.getKeyChar();
           
           if(Character.isLetterOrDigit(cTecla)){
              txtProcurar.setText(txtProcurar.getText() + String.valueOf(cTecla));
              txtProcurar.requestFocus();
           }else if(e.getKeyCode()==KeyEvent.VK_BACK_SPACE){
               txtProcurar.requestFocus();
           }else if(e.getKeyCode()==KeyEvent.VK_ESCAPE){
               txtProcurar.requestFocus();
           }else if(e.getKeyCode()==KeyEvent.VK_ENTER){
                  //e.consume(); 
                  setCodigoProduto(EscolherProduto());
                  Fechar();
           }
           

        } catch (Exception ex) {
            LogDinnamus.Log(ex);
        }
        return bRet;
    }
    private boolean InicializarUI_dbgDetalhes(){
        boolean bRet=false;
        try {

            dbgDetalhes.getjTable().setFont(new Font("Arial", Font.BOLD, 18));
            HashMap<String, NumberFormat> fmtColunaDesconto = new HashMap<String, NumberFormat>();
            fmtColunaDesconto.put("DESCONTO", FormatarNumero.getNf().getCurrencyInstance());            
            dbgDetalhes.setAjustaColunaAoPainel(true);
            dbgDetalhes.addClColunas("codigo", "COD", 50, true);
            dbgDetalhes.addClColunas("nome", "NOME", 300, true);
            dbgDetalhes.addClColunas("unidade", "UND", 50, true);
            dbgDetalhes.addClColunas("localizacao", "LOCAL",100, true);
            dbgDetalhes.addClColunas("desconto", "DESC.",100, true);
            dbgDetalhes.setNumberFormat(fmtColunaDesconto);
            dbgDetalhes.getjTable().addKeyListener(new KeyListener() {
                public void keyTyped(KeyEvent e) {e.consume();}
                public void keyPressed(KeyEvent e) {
                    TratarTecla(e);
                }
                public void keyReleased(KeyEvent e) {e.consume();}
            });

            dbgDetalhes.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                    public void valueChanged(ListSelectionEvent e) {
                       AtualizarGridOpcoes(0l);
                    }
            });

            bRet=true;



        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;

    }
    private String EscolherProduto(){
        String cRetorno="";
        try {

            int nLinha = dbgOpcoesEstoque.getjTable().getSelectedRow();
            String cCodigo="";
            if(nLinha>=0){
                cCodigo= dbgOpcoesEstoque.getTbDinnamuS().getValorCelulaString("codbarraint", nLinha);
            }
            cRetorno= cCodigo;
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return cRetorno;

    }
    private boolean InicializarUI_dbgPrecos(){
        boolean bRet=false;
        try {

            dbgPrecos.AumentaAlturaLinhas(1.2f);
            dbgPrecos.getjTable().setRowSelectionAllowed(false);
            dbgPrecos.setAjustaColunaAoPainel(true);
            dbgPrecos.addClColunas("tabela", "TABELA", 120, true);
            dbgPrecos.addClColunas("preco", "PREÇO", 150, true );
            dbgPrecos.getjTable().setFont(new Font("Arial", Font.BOLD, 22));
            dbgPrecos.addNumberFormatMoeda("preco");
            

            bRet=true;

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;

    }
    private boolean InicializarUI_dbgLocaisEstoque(){
        boolean bRet=false;
        try {           
            dbgLocaisEstoque.AumentaAlturaLinhas(1.2f);
            dbgLocaisEstoque.getjTable().setRowSelectionAllowed(false);
            dbgLocaisEstoque.setAjustaColunaAoPainel(true);
            dbgLocaisEstoque.DefinirFonte("Arial", Font.BOLD, 22);
            dbgLocaisEstoque.addClColunas("local", "LOCAL", 120, true);
            dbgLocaisEstoque.addClColunas("estoque", "ESTOQUE", 150, true);
            dbgLocaisEstoque.addNumberFormat("estoque");
            bRet=true;

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;
    }
    private boolean AtualizarGridOpcoes(Long nCodigoProduto){
        boolean bRet=false;
        try {
            ResultSet rs=null;
            if(nCodigoProduto==0){
                int nLinha = dbgDetalhes.getjTable().getSelectedRow();
                Long nCodigo=0l;
                if(nLinha>=0){
                   // TableModel tm = dbgDetalhes.getjTable().getModel();
                    nCodigo= dbgDetalhes.getTbDinnamuS().getValorCelulaLong("chaveunica", nLinha); //Integer.valueOf( tm.getValueAt(nLinha[0], 0).toString());                    
                }
                rs= cadproduto.PreencheGridOpcoes(0l,nCodigo, Sistema.getCodigoLojaMatriz(), !chkSomenteComEstoque.isSelected(),0l);
            }else{
                 rs= cadproduto.PreencheGridOpcoes(nCodigoProduto, 0l, Sistema.getCodigoLojaMatriz(), !chkSomenteComEstoque.isSelected(),0l);
            }
            dbgOpcoesEstoque.setRsDados(rs);
            if(dbgOpcoesEstoque.getjTable().getRowCount()>0){
                dbgOpcoesEstoque.getjTable().setRowSelectionInterval(0, 0);
            }
            bRet=true;
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;
    }
    private boolean AtualizarGridPrecos(Long nCodigoProduto){
        boolean bRet=false;
        try {
            ResultSet rs=null;
            ResultSet rs2=null;
            if(nCodigoProduto==0){
                int nLinha = dbgOpcoesEstoque.getjTable().getSelectedRow();
                Long nCodigo=0l;
                if(nLinha>=0){
                     nCodigo = dbgOpcoesEstoque.getTbDinnamuS().getValorCelulaLong("chaveunica",nLinha);
                   // nCodigo= Integer.valueOf( tm.getValueAt(nLinha[0], 0).toString());
                    rs=cadproduto.PreencherGridPrecos(0,nCodigo);
                    rs2=cadproduto.PreencheGridEstoque(nCodigo, !chkSomenteComEstoque.isSelected());
                }else{
                    rs=cadproduto.PreencherGridPrecos(0,nCodigo);
                    rs2=cadproduto.PreencheGridEstoque(0l, !chkSomenteComEstoque.isSelected());
                }
            }else{
                rs=cadproduto.PreencherGridPrecos(0,nCodigoProduto);
                rs2=cadproduto.PreencheGridEstoque(0l, !chkSomenteComEstoque.isSelected());
            }

            dbgPrecos.setRsDados(rs);
            dbgLocaisEstoque.setRsDados(rs2);

            bRet=true;
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;
    }


    /**
     * @return the Filial
     */
    public Integer getFilial() {
        return Filial;
    }

    /**
     * @param Filial the Filial to set
     */
    public void setFilial(Integer Filial) {
        this.Filial = Filial;
    }

    /**
     * @return the CodigoProduto
     */
    public String getCodigoProduto() {
        return CodigoProduto;
    }

    /**
     * @param CodigoProduto the CodigoProduto to set
     */
    public void setCodigoProduto(String CodigoProduto) {
        this.CodigoProduto = CodigoProduto;
    }
}
