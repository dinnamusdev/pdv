/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmPreVenda.java
 *
 * Created on 29/05/2013, 03:44:08
 */
package dinnamus.ui.InteracaoUsuario.Venda;

import br.com.FormatarNumeros;
import br.com.ecf.ECFDinnamuS;
import br.com.repositorio.DAO_RepositorioLocal;
import br.com.generica.Dao_Generica;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.ItemLista;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.com.ui.ValidarCelula;
import br.com.ui.jtabledinnamus_ModelListener;
import com.toedter.calendar.JDateChooser;
import MetodosDeNegocio.Entidades.Dadosorc;
import MetodosDeNegocio.Entidades.Itensorc;
import br.data.DataHora;
import br.data.ManipularData;
import br.arredondar.NumeroArredondar;
import br.ui.teclas.controleteclas;
import MetodosDeNegocio.Fachada.cadproduto;
import MetodosDeNegocio.Fachada.vendedor;
import MetodosDeNegocio.Seguranca.UsuarioSistema;
import MetodosDeNegocio.Venda.pdvgerenciar;
import dinnamus.ui.InteracaoUsuario.Estoque.frmPesquisarProduto;
import dinnamus.ui.componentes.tabela.EditorTabela;
import dinnamus.ui.componentes.tabela.Tabela_RecursosAdicionais;
import MetodosDeNegocio.Venda.DadosorcRN;
import MetodosDeNegocio.Venda.ItensorcRN;
import br.com.ui.SwingUtilidade;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.KeyStroke;

/**
 *
 * @author Fernando
 */
public class frmPreVenda extends javax.swing.JFrame{

    /** Creates new form frmPreVenda */
    
    private static String ControleCX="";
    private static Dadosorc dadosorc=null;
    private static Itensorc itensorc=null;
    private static ArrayList<Itensorc> arItensorc=new ArrayList<Itensorc>();
    private static Integer nCodigoFilial=0;
    private static Integer nCodigoObjetoCaixa=0;
    private static ECFDinnamuS EcfDinnmus = new ECFDinnamuS();
    private static String NomeImpressoraComprovante="";
    private static boolean bParaThread =false;
    private static boolean bAtualizacaoPedente =false;
    private static String ColunasGrid ="";
    private static boolean GridIniciado =false;
            

    /**
     * @return the dadosorc
     */
    public static Dadosorc getDadosorc() {
        return dadosorc;
    }

    /**
     * @param aDadosorc the dadosorc to set
     */
    public static void setDadosorc(Dadosorc aDadosorc) {
        dadosorc = aDadosorc;
    }

    /**
     * @return the itensorc
     */
    public static Itensorc getItensorc() {
        return itensorc;
    }

    /**
     * @param aItensorc the itensorc to set
     */
    public static void setItensorc(Itensorc aItensorc) {
        itensorc = aItensorc;
    }

    /**
     * @return the arItensorc
     */
    public static ArrayList<Itensorc> getArItensorc() {
        return arItensorc;
    }

    /**
     * @param aArItensorc the arItensorc to set
     */
    public static void setArItensorc(ArrayList<Itensorc> aArItensorc) {
        arItensorc = aArItensorc;
    }

    public frmPreVenda() {
        //this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        initComponents();
        //this.setLocationRelativeTo(null);
        this.pack();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();  
        this.setSize((screenSize.width ), (screenSize.height ));  
        this.GridIniciado =false;  
        //this.dbgPrevenda_Itens.setjTable(new JTable());
        this.dbgPrevenda_Itens.getjTable().update(this.dbgPrevenda_Itens.getjTable().getGraphics());
        
        //this.setAlwaysOnTop(true);
        
  

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        PainelLogo = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        PainelLogo1 = new javax.swing.JPanel();
        PainelHora = new javax.swing.JPanel();
        lblHora = new javax.swing.JLabel();
        txtOperador = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        dbgPrevenda_Itens = new br.com.ui.JTableDinnamuS();
        PainelTotal = new javax.swing.JPanel();
        lblTotal = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        txtDescontoValor = new javax.swing.JTextField();
        lblTotal1 = new javax.swing.JLabel();
        txtDescontoPercentual = new javax.swing.JTextField();
        lblTotal2 = new javax.swing.JLabel();
        txtTotalLiquido = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        txtOperador6 = new javax.swing.JTextField();
        txtPrevenda_Codigo = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        btDeletarItem = new javax.swing.JButton();
        btNotaPrevenda = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        btFechar = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jPanel10 = new javax.swing.JPanel();
        cbPrevenda_Vendedor = new javax.swing.JComboBox();
        txtPrevenda_CodigoVendedor = new javax.swing.JTextField();
        PainelCliente = new javax.swing.JPanel();
        txtPrevenda_NomeCliente = new javax.swing.JTextField();
        btPrevenda_LocalizarCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txtPrevenda_Data = new JDateChooser("dd/MM/yyyy", "##/##/####", '_');
        txtOperador8 = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelLogo.setBackground(new java.awt.Color(255, 255, 255));

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/InteracaoUsuario/DinnamuSBarra.jpg"))); // NOI18N

        javax.swing.GroupLayout PainelLogoLayout = new javax.swing.GroupLayout(PainelLogo);
        PainelLogo.setLayout(PainelLogoLayout);
        PainelLogoLayout.setHorizontalGroup(
            PainelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelLogoLayout.createSequentialGroup()
                .addComponent(lblLogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PainelLogoLayout.setVerticalGroup(
            PainelLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(PainelLogo, gridBagConstraints);

        PainelLogo1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout PainelLogo1Layout = new javax.swing.GroupLayout(PainelLogo1);
        PainelLogo1.setLayout(PainelLogo1Layout);
        PainelLogo1Layout.setHorizontalGroup(
            PainelLogo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 421, Short.MAX_VALUE)
        );
        PainelLogo1Layout.setVerticalGroup(
            PainelLogo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 95, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(PainelLogo1, gridBagConstraints);

        PainelHora.setBackground(new java.awt.Color(255, 255, 255));

        lblHora.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblHora.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblHora.setText("HORA");

        txtOperador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/user.png"))); // NOI18N

        javax.swing.GroupLayout PainelHoraLayout = new javax.swing.GroupLayout(PainelHora);
        PainelHora.setLayout(PainelHoraLayout);
        PainelHoraLayout.setHorizontalGroup(
            PainelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelHoraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtOperador, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(lblHora, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addContainerGap())
        );
        PainelHoraLayout.setVerticalGroup(
            PainelHoraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelHoraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblHora, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOperador)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(PainelHora, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        dbgPrevenda_Itens.setExibirBarra(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbgPrevenda_Itens, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dbgPrevenda_Itens, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.3;
        getContentPane().add(jPanel7, gridBagConstraints);

        PainelTotal.setBackground(new java.awt.Color(255, 255, 255));
        PainelTotal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblTotal.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal.setText("SUB-TOTAL");
        lblTotal.setToolTipText("");

        txtTotal.setEditable(false);
        txtTotal.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotal.setText("0,00");
        txtTotal.setToolTipText("");

        txtDescontoValor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDescontoValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoValor.setText("0,00");
        txtDescontoValor.setToolTipText("");

        lblTotal1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal1.setText("DESCONTO");
        lblTotal1.setToolTipText("");

        txtDescontoPercentual.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDescontoPercentual.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoPercentual.setText("00,00");
        txtDescontoPercentual.setToolTipText("");
        txtDescontoPercentual.setAutoscrolls(false);

        lblTotal2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTotal2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTotal2.setText("TOTAL");
        lblTotal2.setToolTipText("");

        txtTotalLiquido.setEditable(false);
        txtTotalLiquido.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtTotalLiquido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalLiquido.setText("0,00");
        txtTotalLiquido.setToolTipText("");

        javax.swing.GroupLayout PainelTotalLayout = new javax.swing.GroupLayout(PainelTotal);
        PainelTotal.setLayout(PainelTotalLayout);
        PainelTotalLayout.setHorizontalGroup(
            PainelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelTotalLayout.createSequentialGroup()
                        .addComponent(txtDescontoPercentual, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDescontoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTotal)
                    .addComponent(lblTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotalLiquido)
                    .addComponent(lblTotal2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PainelTotalLayout.setVerticalGroup(
            PainelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelTotalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTotal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblTotal1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelTotalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescontoValor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescontoPercentual, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTotal2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 16;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(PainelTotal, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtOperador6.setEditable(false);
        txtOperador6.setBackground(new java.awt.Color(240, 240, 240));
        txtOperador6.setText("CODIGO");

        txtPrevenda_Codigo.setEditable(false);
        txtPrevenda_Codigo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(txtOperador6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrevenda_Codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtOperador6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(txtPrevenda_Codigo, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel11, gridBagConstraints);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btDeletarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/delete.png"))); // NOI18N
        btDeletarItem.setMnemonic('n');
        btDeletarItem.setText("[DEL] Deletar Item");
        btDeletarItem.setFocusable(false);
        btDeletarItem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDeletarItem.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btDeletarItem.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btDeletarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeletarItemActionPerformed(evt);
            }
        });
        jToolBar1.add(btDeletarItem);

        btNotaPrevenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/money_add.png"))); // NOI18N
        btNotaPrevenda.setMnemonic('n');
        btNotaPrevenda.setText("Nova Pré-Venda");
        btNotaPrevenda.setFocusable(false);
        btNotaPrevenda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btNotaPrevenda.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btNotaPrevenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNotaPrevendaActionPerformed(evt);
            }
        });
        jToolBar1.add(btNotaPrevenda);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_edit.png"))); // NOI18N
        jButton4.setText("Pesquisar Pré-Venda");
        jToolBar1.add(jButton4);

        btFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar.setMnemonic('f');
        btFechar.setFocusable(false);
        btFechar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btFechar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btFechar.setLabel("Fechar");
        btFechar.setMaximumSize(new java.awt.Dimension(85, 23));
        btFechar.setMinimumSize(new java.awt.Dimension(85, 23));
        btFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btFechar);

        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 17;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel8, gridBagConstraints);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cbPrevenda_Vendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbPrevenda_VendedorFocusLost(evt);
            }
        });

        txtPrevenda_CodigoVendedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrevenda_CodigoVendedorFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPrevenda_CodigoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbPrevenda_Vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtPrevenda_CodigoVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(cbPrevenda_Vendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel10, gridBagConstraints);

        PainelCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPrevenda_NomeCliente.setEditable(false);

        btPrevenda_LocalizarCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/user-group-new.png"))); // NOI18N
        btPrevenda_LocalizarCliente.setText("CLIENTE");
        btPrevenda_LocalizarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrevenda_LocalizarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelClienteLayout = new javax.swing.GroupLayout(PainelCliente);
        PainelCliente.setLayout(PainelClienteLayout);
        PainelClienteLayout.setHorizontalGroup(
            PainelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelClienteLayout.createSequentialGroup()
                .addComponent(btPrevenda_LocalizarCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrevenda_NomeCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelClienteLayout.setVerticalGroup(
            PainelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelClienteLayout.createSequentialGroup()
                .addGroup(PainelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPrevenda_LocalizarCliente)
                    .addComponent(txtPrevenda_NomeCliente))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(PainelCliente, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtPrevenda_Data.getDateEditor().getUiComponent().addKeyListener(

            new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}

                @Override
                public void keyPressed(KeyEvent e) {
                    if(e.getKeyCode()==KeyEvent.VK_ENTER){
                        // btIncluirForma.requestFocus();
                    }
                }
                @Override
                public void keyReleased(KeyEvent e) {}

            }
        );
        txtPrevenda_Data.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrevenda_DataKeyPressed(evt);
            }
        });

        txtOperador8.setEditable(false);
        txtOperador8.setBackground(new java.awt.Color(240, 240, 240));
        txtOperador8.setText("DATA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(txtOperador8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrevenda_Data, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPrevenda_Data, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(txtOperador8, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
// TODO add your handling code here:

}//GEN-LAST:event_formWindowActivated

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
            if(!UI_Carregar()){            
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível carrega a interface do usuário", "Pré-Venda", "AVISO");
                this.dispose();            
        }
}//GEN-LAST:event_formWindowOpened

private void btPrevenda_LocalizarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrevenda_LocalizarClienteActionPerformed
// TODO add your handling code here:
    
    try {
        frmClienteListagem formTabela =  new frmClienteListagem(null, true,false,false);
        
        formTabela.setVisible(true);
       
        Long CodigoCliente =formTabela.ClienteSelecionado;
        String NomeCliente=formTabela.ClienteSelecionadoNome;
        if(CodigoCliente>0l) {
            getDadosorc().setCodcliente(CodigoCliente.toString());
            getDadosorc().setCliente(NomeCliente);
            txtPrevenda_NomeCliente.setText(CodigoCliente + " - " + NomeCliente );                
        }else{
            getDadosorc().setCodcliente("0");
            getDadosorc().setCliente("** Consumidor **");
        }            
        
        
    } catch (Exception e) {
        LogDinnamus.Log(e,true);
    }
     
}//GEN-LAST:event_btPrevenda_LocalizarClienteActionPerformed

private void txtPrevenda_DataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrevenda_DataKeyPressed
    // TODO add your handling code here:
     
}//GEN-LAST:event_txtPrevenda_DataKeyPressed

private void btNotaPrevendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNotaPrevendaActionPerformed
// TODO add your handling code here:
    try {
        
        if(!IniciarVenda()){
           MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível iniciar uma a pré-venda", "Pré-Venda", "AVISO");           
        }
        
    } catch (Exception e) {
        LogDinnamus.Log(e, true);
    }
}//GEN-LAST:event_btNotaPrevendaActionPerformed

private void txtPrevenda_CodigoVendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrevenda_CodigoVendedorFocusLost
// TODO add your handling code here:
    
    try {
        
        if(txtPrevenda_CodigoVendedor.getText().length()>0){
            if(!MetodosUI_Auxiliares_1.SetarOpcaoCombo(cbPrevenda_Vendedor, txtPrevenda_CodigoVendedor.getText())){
                cbPrevenda_Vendedor.setSelectedIndex(-1);            
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Código do Vendedor não localizado", "Pré-Venda", "AVISO");
                txtPrevenda_CodigoVendedor.requestFocus();
            }
        }
        
    } catch (Exception e) {
        
        LogDinnamus.Log(e, true);
    }
    
}//GEN-LAST:event_txtPrevenda_CodigoVendedorFocusLost

private void cbPrevenda_VendedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbPrevenda_VendedorFocusLost
// TODO add your handling code here:
    try {
        
        ItemLista i = (ItemLista) cbPrevenda_Vendedor.getSelectedItem();
        if(i!=null){
            txtPrevenda_CodigoVendedor.setText(i.getIndice().toString());
        }else{
            txtPrevenda_CodigoVendedor.setText("");
        }
        
    } catch (Exception e) {
        
        LogDinnamus.Log(e, true);
    }
}//GEN-LAST:event_cbPrevenda_VendedorFocusLost

private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
// TODO add your handling code here:
    dbgPrevenda_Itens.setTbDinnamuS(null);
    dbgPrevenda_Itens.setjTable(null);    
    dbgPrevenda_Itens=null;
    controleteclas.TRocarEnterPorTab();
    this.dispose();
    System.gc();
    
}//GEN-LAST:event_btFecharActionPerformed

private void btDeletarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeletarItemActionPerformed
// TODO add your handling code here:
    Prevenda_UI_Processar_Tecla_DELETE();
}//GEN-LAST:event_btDeletarItemActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelCliente;
    private javax.swing.JPanel PainelHora;
    private javax.swing.JPanel PainelLogo;
    private javax.swing.JPanel PainelLogo1;
    private javax.swing.JPanel PainelTotal;
    private javax.swing.JButton btDeletarItem;
    private javax.swing.JButton btFechar;
    private javax.swing.JButton btNotaPrevenda;
    private javax.swing.JButton btPrevenda_LocalizarCliente;
    private javax.swing.JComboBox cbPrevenda_Vendedor;
    private br.com.ui.JTableDinnamuS dbgPrevenda_Itens;
    private javax.swing.JButton jButton4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lblHora;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotal1;
    private javax.swing.JLabel lblTotal2;
    private javax.swing.JTextField txtDescontoPercentual;
    private javax.swing.JTextField txtDescontoValor;
    private javax.swing.JLabel txtOperador;
    private javax.swing.JTextField txtOperador6;
    private javax.swing.JTextField txtOperador8;
    private javax.swing.JTextField txtPrevenda_Codigo;
    private javax.swing.JTextField txtPrevenda_CodigoVendedor;
    private com.toedter.calendar.JDateChooser txtPrevenda_Data;
    private javax.swing.JTextField txtPrevenda_NomeCliente;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtTotalLiquido;
    // End of variables declaration//GEN-END:variables
    private boolean UI_Carregar(){
        try {
            
            if (!UI_CarregarLogo()) {return false;}
            
            if (!UI_CarregarDadosLoja()) {return false;}
            
            if(!InicializarRelogio()) {return false;}
            
            if (!UI_CarregarDadosUsuario()) {return false;}
            
            if (!UI_CarregarCombo()){return false;}
                                   
            if (!IniciarVenda()){
                
                return false;            
            }
            //controleteclas.TRocarTabPorEnter();                
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e);
            return false;
        }
     
    }
    public boolean IniciarVenda(){
        try {
            
           setDadosorc(new Dadosorc());
            
           Long nCodigoVenda = RegistraItem_RegistrarEntidades_Dadosorc();
           
           if(nCodigoVenda==0){
              MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível iniciar uma nova prevenda", "Pré-Venda", "AVISO");    
              return false;           
           }
           
           if(!NovoItensorc_Vazio()) {
               MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível iniciar o item da prevenda", "Pré-Venda", "AVISO");    
              return false;           
           }
           
           getDadosorc().setCodigo(nCodigoVenda);
           
           if(!UI_CarregarDadosCliente()){return false;}
           
           txtPrevenda_Codigo.setText(nCodigoVenda.toString());
           
           txtPrevenda_Data.setDate(new Date());
           
           txtPrevenda_CodigoVendedor.setText("");
                      
          
                     
           txtDescontoPercentual.setText("0.00");
           txtDescontoValor.setText("0.00");           
           txtTotal.setText("0.00");           
           txtTotalLiquido.setText("0.00");
           if(!GridIniciado){
              UI_IniciarGridItens();            
              GridIniciado=true;
           }
           
           UI_IniciarGridItens_AtualizarGrid(true);
           
           //dbgPrevenda_Itens.getjTable().update(dbgPrevenda_Itens.getjTable().getGraphics());
           
           SwingUtilidade.RequestFocus(txtPrevenda_CodigoVendedor);
           return true;
           
        } catch (Exception e) {
            LogDinnamus.Log(e);
            return false;
        }
     
    }
    private static boolean  NovoItensorc_Vazio(){
            return NovoItensorc_Vazio(0l,1);
    }
    private static boolean  NovoItensorc_Vazio(Long nItensorc_Idunico, int nSeq){
        try {

            boolean bRegistroNovo = false;
            if(nItensorc_Idunico==0){
                nItensorc_Idunico = DAO_RepositorioLocal.NovoValorIdentidade("itensorc", Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV());
                bRegistroNovo=true;
            }
           
            Itensorc i = SetarItensorc(getDadosorc(),nSeq ,nItensorc_Idunico,0l,"","",0f,0f,0f,"","",0f,Sistema.getLojaAtual(),"", 0l,pdvgerenciar.CodigoPDV(),false,"","",bRegistroNovo);
            if(i!=null){
                return true;
            }else{
                return false;
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
           
    }
    public boolean  InicializarRelogio()
    {
        try {
            Thread clockThread = new Thread(new Relogio(), "Clock thread");
            clockThread.setDaemon(true);
            clockThread.start();
            return true;
        } catch (Exception e) {
                LogDinnamus.Log(e);
        }
        return false;

    }
    public boolean  UI_CarregarDadosUsuario()
    {
        try {
        
            txtOperador.setText(UsuarioSistema.getNomeUsuario());
            
            return true;
        } catch (Exception e) {
                LogDinnamus.Log(e);
        }
        return false;

    }
    public boolean  UI_CarregarDadosCliente()
    {
        try {
        
            txtPrevenda_NomeCliente.setText("** Consumidor **");
            
            return true;
        } catch (Exception e) {
                LogDinnamus.Log(e, true);
        }
        return false;

    }
    private boolean UI_CarregarLogo(){
        try {
            
             Image img=null;
             String cCaminhoLogo = Sistema.getDadosLojaAtualSistema().getString("caminhologo");
             
             if ( cCaminhoLogo !=null) {
                  Blob b=  Sistema.getDadosLojaAtualSistema().getBlob("logo");
                  if(b!=null){
                      byte[] bytes = b.getBytes(1, (int)b.length());

                      img = (new ImageIcon(bytes)).getImage();
                  }else{
                    img = Toolkit.getDefaultToolkit().getImage(
                        getClass().getResource(
                        "/dinnamus/ui/InteracaoUsuario/DinnamuS.jpg")
                        );
                    return true;
                  }
                  
                  
             }else{
                     img = Toolkit.getDefaultToolkit().getImage(
                        getClass().getResource(
                        "/dinnamus/ui/InteracaoUsuario/DinnamuS.jpg")
                        );
                
             }
             
             
              img=img.getScaledInstance((int) PainelLogo.getPreferredSize().getWidth(),
                         ((int)PainelLogo.getPreferredSize().getHeight()),  
                         Image.SCALE_DEFAULT);

             lblLogo.setIcon((new ImageIcon(img)));
             return true;

        } catch (Exception e) {
            LogDinnamus.Log(e);
            return false;
        }
    }
    private boolean UI_CarregarCombo(){
        if (!UI_CarregarComboVendedor()){ return false;}
        
        
        return true;
    }
    
    private boolean UI_CarregarComboVendedor(){
          try {
            
            Boolean bRet= MetodosUI_Auxiliares_1.PreencherCombo(cbPrevenda_Vendedor,vendedor.Listar(Sistema.getLojaAtual()),"Nome","Codigo",true);
            //MetodosUI_Auxiliares.SetarOpcaoCombo(cbVendedor, UsuarioSistema.getCodVendedorVinculadoAoCaixa());
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e );
            return false;
        }
    }
    
    private ResultSet UI_IniciarGridItens_DimensaoColunas(){
        try {
            
            String cSQL ="SELECT     d.* " +
                    "FROM         ConfiguradorLayout_Header H INNER JOIN " +
                      " ConfiguradorLayout_Detail_Grid d " +
            " ON h.CodigoLayout = d.IdLayout "+
            "where modulo=1 and componente=1 and loja=" + Sistema.getCodigoLojaMatriz() + " and idcomponente=1" +
             " and d.visivel=1 order by d.ordem"       ;
            ResultSet rs = Dao_Generica.Pesquisar(cSQL, Sistema.isOnline());
            
            return rs;
           
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return null;
        }
    
    }
    
    private boolean UI_IniciarGridItens_AtualizarGrid(boolean  bAjustaModelo ){
        try {
            Long nCodigoVenda =dadosorc.getCodigo();
            
            dbgPrevenda_Itens.setRsDados(ItensorcRN.Itensorc_Listar_2(nCodigoVenda));
            //dbgPrevenda_Itens.setEdicao_Query(ItensorcRN.Itensorc_Listar_2_Query(nCodigoVenda));
            
            //dbgPrevenda_Itens.getTbDinnamuS().fireTableStructureChanged();
            return true;
        } catch (Exception e) {
            
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean UI_IniciarGridItens(){
        try {
          

            
            dbgPrevenda_Itens.addClColunas("descricao", "Descrição", 50,true,true,dbgPrevenda_Itens.Alinhamento_Esqueda);
            dbgPrevenda_Itens.addClColunas("quantidade", "QT", 10,true,true,dbgPrevenda_Itens.Alinhamento_Direita);
            dbgPrevenda_Itens.addClColunas("preco", "P.Unit", 10,true,true,dbgPrevenda_Itens.Alinhamento_Direita);
            dbgPrevenda_Itens.addClColunas("descv", "$Desc", 10,true,true,dbgPrevenda_Itens.Alinhamento_Direita);
            dbgPrevenda_Itens.addClColunas("descp", "%Desc", 10,true,true,dbgPrevenda_Itens.Alinhamento_Direita);
            dbgPrevenda_Itens.addClColunas("total", "TOTAL", 20,true,true,dbgPrevenda_Itens.Alinhamento_Direita);
            dbgPrevenda_Itens.addNumberFormat("total");
            dbgPrevenda_Itens.addNumberFormat("preco");
            dbgPrevenda_Itens.addNumberFormat("descv");
            dbgPrevenda_Itens.addNumberFormat("descp");            
            dbgPrevenda_Itens.setEdicao_ChavePrimaria("idunico");
            dbgPrevenda_Itens.setEdicao_Tabela("itensorc");           ;            
            dbgPrevenda_Itens.setAjustaColunaAoPainel(true);            
            dbgPrevenda_Itens.getjTable().addKeyListener(new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {
                         if(e.getKeyChar()=='\n'){
                             e.consume();
                         } 
                }                         
                @Override
                public void keyPressed(KeyEvent e) {
                    //MetodosUI_Auxiliares.MensagemAoUsuarioSimples(null, "keypressed : " + String.valueOf(e.getKeyCode()), "Pré-Venda", "AVISO");    
                    if(e.getKeyCode()==KeyEvent.VK_DOWN){
                        Prevenda_UI_ProcessarTeclaDOWN();                       
                    }else if(e.getKeyCode()==KeyEvent.VK_DELETE){
                         e.consume();
                         Prevenda_UI_Processar_Tecla_DELETE();
                    }else{
                         if(e.getKeyChar()=='\n'){
                             //e.consume();
                         }else{ 
                            Tabela_RecursosAdicionais.TratarTeclaPressionada(e, dbgPrevenda_Itens);                                            
                        }
                    }
                }
                @Override
                public void keyReleased(KeyEvent e) {
                     //MetodosUI_Auxiliares.MensagemAoUsuarioSimples(null, "keyReleased : " + String.valueOf(e.getKeyCode()), "Pré-Venda", "AVISO");    
                    
                         int nCol = dbgPrevenda_Itens.getjTable().getSelectedColumn();
                         
                         if(e.getKeyChar()=='\n' ){
                             
                             Prevenda_UI_ProcessarTeclaEnter(nCol,e);
                             
                         }
               }
            });            
            
            
            UI_IniciarGridItens_AtualizarGrid(true);  
            dbgPrevenda_Itens.getjTable().setDefaultEditor(Object.class,  new EditorTabela(new Prevenda_Validacoes()));
            dbgPrevenda_Itens.getTbDinnamuS().addTableModelListener(new jtabledinnamus_ModelListener( dbgPrevenda_Itens.getjTable() ));            
            dbgPrevenda_Itens.getjTable().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),"selectNextColumnCell"); 
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
            
    }
    private boolean Prevenda_UI_Processar_Tecla_DELETE(){
        try {
            Long nCodprod = Long.parseLong( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("codprod").toString());                        
             if(dbgPrevenda_Itens.getjTable().getRowCount()>1 || nCodprod>0l){                         
                 if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao(null, "CONFIRMA A EXCLUSÃO DO ITEM ?", "Pré-Venda")==MetodosUI_Auxiliares_1.Sim()){
                      Long nIdUnico = Long.parseLong( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("idunico").toString());                 
                      int nTotalLinhas = dbgPrevenda_Itens.getjTable().getRowCount();
                      int nLinhaAtual = dbgPrevenda_Itens.getjTable().getSelectedRow();
                      int nSEQ = Integer.parseInt( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("seq").toString()); 
                      if(!Prevenda_Processar_Tecla_DELETE(getDadosorc().getCodigo(),nIdUnico,nSEQ)){
                          MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O ITEM NÃO PODE SER EXCLUIDO", "Pré-Venda", "AVISO"); 
                      }else{
                          //int nLinhaAtual = dbgPrevenda_Itens.getjTable
                          if(nTotalLinhas==1){
                              NovoItensorc_Vazio(); 
                              nLinhaAtual=0;
                          }else if(nTotalLinhas==nLinhaAtual+1) {
                              nLinhaAtual--;
                          }    
                          UI_IniciarGridItens_AtualizarGrid(true);                                      
                          dbgPrevenda_Itens.getTbDinnamuS().fireTableRowsDeleted(0, nLinhaAtual);
                          dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nLinhaAtual,nLinhaAtual);
                          dbgPrevenda_Itens.getjTable().setColumnSelectionInterval(1, 1); 
                      }
                 }  
             }
            return false;
        } catch (Exception e) {

            dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("codprod");
             LogDinnamus.Log(e, true);
             return false;
        }
    }
    private boolean Prevenda_Processar_Tecla_DELETE(Long nCodigoVenda , Long nIdunico, int nSeq){
        try {
                        
            if (ItensorcRN.Itensorc_Excluir(nIdunico,nCodigoVenda)){
                
                Prevenda_TotalizarItemPrevenda(nCodigoVenda,nSeq);
                Prevenda_UI_TotalizarVenda(nCodigoVenda);
                //UI_IniciarGridItens_AtualizarGrid(true);                     
            }
            
            return true;
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
            return false;
        }
    }
    private void Prevenda_UI_ProcessarTeclaEnter(int nCol, KeyEvent e){
        try {            
            if(nCol==2){       
                int nLinhaAtual = dbgPrevenda_Itens.getjTable().getSelectedRow();
                int nRet = Prevenda_ProcessarPesquisaGridItens(e);
                e.consume();
                if(nRet==0){
                    dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nLinhaAtual, nLinhaAtual);
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "PRODUTO NÃO LOCALIZADO", "Pré-Venda", "AVISO"); 
                    Long nIdUnico = Long.parseLong( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("idunico").toString());                 
                    int nSEQ = Integer.parseInt( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("seq").toString());                 
                    NovoItensorc_Vazio(nIdUnico,nSEQ);
                    nLinhaAtual = dbgPrevenda_Itens.getjTable().getSelectedRow();
                    UI_IniciarGridItens_AtualizarGrid(true);
                    dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nLinhaAtual, nLinhaAtual);
                    dbgPrevenda_Itens.getjTable().setColumnSelectionInterval(1, 1);                                      
                }else if(nRet ==-1){
                       dbgPrevenda_Itens.getjTable().setColumnSelectionInterval(1, 1);         
                }                               
             }else if(nCol>0 && nCol < dbgPrevenda_Itens.getTbDinnamuS().getColumnCount()-1){                   
                 
                
                String NomeColuna = dbgPrevenda_Itens.getTbDinnamuS().getColumnName(nCol-1);
                String UltimoCampoGrid = Sistema.getDadosLoja(Sistema.getLojaAtual(), true).getString("UltimoCampoGridCotOrcVenda");
                Long nCodProd =  Long.valueOf( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("codprod").toString());
                
                if(NomeColuna.equalsIgnoreCase(UltimoCampoGrid)&& nCodProd>0 ){
                    
                   int nTotalLinha = dbgPrevenda_Itens.getjTable().getRowCount(); 
                   int nLinhaAtual = dbgPrevenda_Itens.getjTable().getSelectedRow();
                   if(nTotalLinha == nLinhaAtual+1){
                       Prevenda_UI_ProcessarTeclaDOWN();
                   }
                   dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nLinhaAtual+1, nLinhaAtual+1);
                   dbgPrevenda_Itens.getjTable().setColumnSelectionInterval(1, 1);  
                     
                   
                }
                else{
                    Prevenda_ProcessarDemaisCamposGrid();                                
                }
             }
            
        } catch (Exception ex) {

            dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("idunico") ;
             LogDinnamus.Log(ex, true);
        }
        
    }
    private void Prevenda_UI_ProcessarTeclaDOWN(){
        try {
            
            Object[] ObjLinha =  dbgPrevenda_Itens.TratarLinhaSelecionada(dbgPrevenda_Itens.getjTable());
            if(ObjLinha!=null){
                int nSEQ = Integer.valueOf(ObjLinha[0].toString());
                ResultSet rsItens = ItensorcRN.Itensorc_Listar(getDadosorc().getCodigo(), nSEQ);
                try {
                    if(rsItens.next()){
                      int nTotalLinha = dbgPrevenda_Itens.getjTable().getRowCount(); 
                      int nLinhaAtual = dbgPrevenda_Itens.getjTable().getSelectedRow();
                      if(rsItens.getLong("codprod")>0 && nLinhaAtual+1 ==nTotalLinha){
                          NovoItensorc_Vazio();                                        
                          UI_IniciarGridItens_AtualizarGrid(true);
                          dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nTotalLinha-1, nTotalLinha-1);
                          dbgPrevenda_Itens.getjTable().setColumnSelectionInterval(1, 1);                                      
                      }                                     
                    }
                } catch (SQLException ex) {
                     LogDinnamus.Log(ex, true);
                }
            }
            
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
        }
    } 
    public class Prevenda_Validacoes implements ValidarCelula {

        public boolean Validar(String cColuna, Object obj) {
            try {
                if(!"DESCRICAO".equalsIgnoreCase(cColuna)){
                    Long Codprod = Long.parseLong( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("codprod").toString());
                    if(Codprod==0){
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "INFORME UM PRODUTO PARA COMEÇAR", "Pré-Venda", "AVISO"); 
                        return false;
                    }
                }
                
                if("DESCP".equalsIgnoreCase(cColuna)){
                    Float PercDesconto = Float.parseFloat(obj.toString());
                    
                    if(PercDesconto< 0f || PercDesconto>=100f){
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "DESCONTO DIGITADO ESTA FORA DA FAIXA PERMITIDA[1-99]%", "Pré-Venda", "AVISO"); 
                        return false;                    
                    }          
                    
                    Float nQT = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("quantidade").toString());
                    Float nPreco = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("preco").toString());
                    Float nDesconto  = NumeroArredondar.Arredondar2((nQT * nPreco) * (PercDesconto/100),2);
                    Float nSubTotalItem =  (nQT * nPreco)- nDesconto;
                    dbgPrevenda_Itens.getTbDinnamuS().setValorCelular("descv", nDesconto);
                    
                    
                            
                    
                }else if("DESCV".equalsIgnoreCase(cColuna)){
                       Float ValorDesconto = Float.parseFloat(obj.toString());
                       Float nQT = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("quantidade").toString());
                       Float nPreco = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("preco").toString());
                       Float nSubTotalItem = nQT * nPreco ; //Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("total").toString());
                       Float nPercDesconto =0f;
                       
                       
                       
                       if(ValorDesconto<0f){
                          MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O DESCONTO NÃO PODE SER NEGATIVO", "Pré-Venda", "AVISO"); 
                          return false;                    
                       }
                       
                       if(ValorDesconto>=nSubTotalItem){
                          MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O DESCONTO NÃO PODE SER MAIOR OU IGUAL AO VALOR DO ITEM", "Pré-Venda", "AVISO"); 
                          return false;                    
                       }                         
                       
                       nPercDesconto = NumeroArredondar.Arredondar2( ValorDesconto/nSubTotalItem,2)*100;
                       dbgPrevenda_Itens.getTbDinnamuS().setValorCelular("descp", nPercDesconto);
                       
                }else if("QUANTIDADE".equalsIgnoreCase(cColuna) || "PRECO".equalsIgnoreCase(cColuna) ){
                        Float nQuantidade =0f;
                        Float nPreco =0f;
                        if("QUANTIDADE".equalsIgnoreCase(cColuna)){
                            nQuantidade = Float.parseFloat(obj.toString());
                            Long nQtMaxima = Sistema.getDadosLoja(Sistema.getLojaAtual(),true).getLong("qtmaxima");
                            
                            nQtMaxima = (nQtMaxima==0 ? 99999l : nQtMaxima);
                            
                            if(nQuantidade>nQtMaxima){
                               MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "A QUANTIDADE INFORMADA EXCEDEU O LIMITE PERMITIDO["+ nQtMaxima +"]", "Pré-Venda", "AVISO");  
                               return false;
                            }

                            
                            nPreco = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("preco").toString());
                        }else{
                             nPreco = Float.parseFloat(obj.toString());
                             nQuantidade = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("quantidade").toString());
                        }
                        Float PercDesconto = Float.parseFloat( dbgPrevenda_Itens.getTbDinnamuS().getValorCelula("descp").toString());
                        Float nDesconto  = NumeroArredondar.Arredondar2((nQuantidade * nPreco) * (PercDesconto/100),2);
                        dbgPrevenda_Itens.getTbDinnamuS().setValorCelular("descv", nDesconto);
                }
               return true;
            } catch (Exception e) {
                 MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "INFORMAÇÃO DIGITADA INVÁLIDA", "Pré-Venda", "AVISO"); 
               
                 
                //JOptionPane.showMessageDialog(null, "INFORMAÇÃO DIGITADA INVÁLIDA", "Pré-Venda", JOptionPane.WARNING_MESSAGE);
                return false;
            }
        }
    
    }
           
    private boolean Prevenda_TotalizarItemPrevenda(Long nCodigoVenda, int nSEQ){
        try {
            Float nValorItem =0f, nQuantidade=0f, nDesconto=0f,nSubTotalItem=0f;
            
            ResultSet rsItens = ItensorcRN.Itensorc_Listar(nCodigoVenda);
            while(rsItens.next()){
                nSEQ = rsItens.getInt("seq");
                nValorItem = rsItens.getFloat("preco");
                nQuantidade = rsItens.getFloat("quantidade");
                nDesconto = rsItens.getFloat("descv");
                nSubTotalItem =  NumeroArredondar.Arredondar2(nValorItem*nQuantidade-nDesconto,2);
                
               // if(!ItensorcRN.Itensorc_AtualizaSubtotal(nCodigoVenda, nSEQ, nSubTotalItem)){
               //     return false;
                ///}
            }
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private void Prevenda_UI_TotalizarVenda(Long nCodigoVenda){
        try {
            
            
            
            Float nSubTotal = Prevenda_TotalizarPrevenda(nCodigoVenda);
            txtTotal.setText( FormatarNumeros.FormatarParaMoeda(nSubTotal));
            txtTotalLiquido.setText(FormatarNumeros.FormatarParaMoeda(nSubTotal));
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    
    }
    private Float Prevenda_TotalizarPrevenda(Long nCodigoVenda){
        try {
            Float nValorItem =0f, nQuantidade=0f, nDesconto=0f,nSubTotalItem=0f, nTotalVenda =0f;
            
            ResultSet rsItens = ItensorcRN.Itensorc_Listar(nCodigoVenda);
            while(rsItens.next()){
                nValorItem = rsItens.getFloat("preco");
                nQuantidade = rsItens.getFloat("quantidade");
                nDesconto = rsItens.getFloat("descv");
                nSubTotalItem =  NumeroArredondar.Arredondar2(nValorItem*nQuantidade-nDesconto,2);
                nTotalVenda+=nSubTotalItem;
              
            }
            return nTotalVenda;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return -1f;
        }
    }
    private boolean Prevenda_ProcessarDemaisCamposGrid(){
        try {
             Long nDadosOrc_Codigo =getDadosorc().getCodigo();             
             int nLinhaAtual = dbgPrevenda_Itens.LinhaAtualModel();
             Prevenda_UI_TotalizarVenda(nDadosOrc_Codigo);   
             dbgPrevenda_Itens.getTbDinnamuS().fireTableRowsUpdated(nLinhaAtual, nLinhaAtual);
                       
             return true;
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
             return false;
        }
    }
    private boolean Prevenda_ECodigoAlfaNumerico(String cCodigo){
        try {
            
            
            
            
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private int Prevenda_ProcessarPesquisaGridItens(KeyEvent e){
        try {
            
                                             
           int nColunaAtual = dbgPrevenda_Itens.getjTable().getSelectedColumn();
           int nLinhaAtual = dbgPrevenda_Itens.LinhaAtualModel();
                                                   
           if (nLinhaAtual>=0){
              String cTextoLocalizar = dbgPrevenda_Itens.getValorCelula("descricao").toString();
              int nSeq = Integer.valueOf(dbgPrevenda_Itens.getValorCelula("seq").toString());
              Long nDadosOrc_Codigo =getDadosorc().getCodigo();
              Long nItensOrc_Idunico =  Long.valueOf(dbgPrevenda_Itens.getValorCelula("idunico").toString());//arItensorc.get(nLinhaAtual).getIdunico();

              //int nTabelaPreco=0;
              if(cTextoLocalizar.trim().length()>0){
                 String cCodigoProduto ="";
                 cTextoLocalizar=cTextoLocalizar.trim();
                 ResultSet rsDadosProduto=null;
                 if(cTextoLocalizar.matches("[0-9]+")){
                      rsDadosProduto =  Prevenda_LocalizaProduto(cTextoLocalizar);
                      rsDadosProduto.beforeFirst();
                      if(!rsDadosProduto.next()){
                          return 0; // Codigo Não localizado
                      }
                 }else{                  
                     cCodigoProduto = (new frmPesquisarProduto(null, true, nCodigoFilial, cTextoLocalizar)).getCodigoProduto();
                     
                     if(cCodigoProduto.trim().length()>0){                             
                        rsDadosProduto =  Prevenda_LocalizaProduto(cCodigoProduto);
                     }else{
                        return -1;
                     }
                 }               
                    try {
                        rsDadosProduto.beforeFirst();
                        if(rsDadosProduto.next()){
                           if(Prevenda_IncluirProdutoVenda(nSeq,cCodigoProduto,nDadosOrc_Codigo ,nItensOrc_Idunico,rsDadosProduto,true)){
                               Prevenda_TotalizarItemPrevenda(nDadosOrc_Codigo,nSeq);
                               Prevenda_UI_TotalizarVenda(nDadosOrc_Codigo);
                               dbgPrevenda_Itens.setRsDados(ItensorcRN.Itensorc_Listar_2(nDadosOrc_Codigo),true);
                               dbgPrevenda_Itens.getjTable().setRowSelectionInterval(nLinhaAtual, nLinhaAtual);                              
                               Tabela_RecursosAdicionais.Grid_PosicionarCursor(dbgPrevenda_Itens,Tabela_RecursosAdicionais.Grid_UltimoCampoGridCotOrcVenda());                               
                               return 1;
                           }                                       
                        }else{
                            return -1; 
                        }
                    } catch (SQLException ex) {
                       LogDinnamus.Log(ex, true);
                       return -1;
                    }                
               }
           }                                  
            
        } catch (Exception ex) {
            LogDinnamus.Log(ex, true);
            return -1;
         
        }
        return -1;  
    }
    private ResultSet Prevenda_LocalizaProduto(String  cCodigoProduto){
        try {
            
              ResultSet rs = cadproduto.Pesquisar(cCodigoProduto, Sistema.getCodigoLojaMatriz(), true, 0, 0, 0, 0f, true, true, Sistema.CodigoDaFilial_LojaAtual());
            
              return rs;
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return null;
        }
    }
    private boolean Prevenda_IncluirProdutoVenda(int nSeq, String cCodigoProduto ,Long Dadosorc_Codigo, Long nItensOrc_Idunico, ResultSet rsDadosProduto,boolean bRegistroNovo){
        try {
            
            
            //Long nItensorc_Idunico = DAO_RepositorioLocal.NovoValorIdentidade("itensorc", Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV());

            Long IG_ChaveUnica= rsDadosProduto.getLong("IG_ChaveUnica");
            String cNome = rsDadosProduto.getString("CP_Nome");
            Float ITP_PrecoVenda = rsDadosProduto.getFloat("ITP_PrecoVenda");
            String cTributacaoIcms=(rsDadosProduto.getString("Tributaçãoicms")==null ? "1" : rsDadosProduto.getString("Tributaçãoicms")) ;
            String cAliquota=(  rsDadosProduto.getString("Codaliquota")==null ? "01"  : rsDadosProduto.getString("Codaliquota"));
            Float  nPercentualDeIcms= (rsDadosProduto.getFloat("Percentualdeicms")==0f ?  17f : rsDadosProduto.getFloat("Percentualdeicms"));
            String TP_Descricao = rsDadosProduto.getString("TP_Descricao");
            String Unidade = rsDadosProduto.getString("unidade");
            Boolean nFracionado = rsDadosProduto.getBoolean("francionado") ;

            
            Itensorc i = SetarItensorc(getDadosorc(),nSeq,nItensOrc_Idunico,IG_ChaveUnica,cCodigoProduto,cNome,1f,ITP_PrecoVenda,ITP_PrecoVenda,
                                cTributacaoIcms,
                                cAliquota,
                                nPercentualDeIcms,Sistema.getLojaAtual(),
                                TP_Descricao,-1l,pdvgerenciar.CodigoPDV(),nFracionado, "", Unidade,bRegistroNovo);

            i= ItensorcRN.Itensorc_Incluir(DAO_RepositorioLocal.getCnRepLocal(),i,Sistema.getLojaAtual(),0, false,true);
            if(i.getIdunico()==0l)
            {
                return false;
            }else{
                return true;
            } 
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean UI_CarregarDadosLoja(){
        try {
            
            ResultSet rs = Sistema.getDadosLojaAtualSistema();
            //if(rs.next()){
                //lblDadosEmpresa.setText(rs.getString("nome"));
            //}  
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e );
            return false;
        }
     
    }
      public Long RegistraItem_RegistrarEntidades_Dadosorc()
    {
        Long nRet=Long.valueOf(0);
        Date dDataAbertura;
        Integer nCodigoVendedor, nCodigoCliente,  nCodigoOperador;
        String cControleCX="";
        String cNomeVendedor,cNomeCliente,cNomeOperador;
        try {

            //DataHora.getStringToData(cControleCX)
            dDataAbertura=  ManipularData.DataAtual();
            nCodigoVendedor= Integer.parseInt(((ItemLista) cbPrevenda_Vendedor.getSelectedItem()).getIndice().toString());
            cNomeVendedor=((ItemLista) cbPrevenda_Vendedor.getSelectedItem()).getDescricao();
            nCodigoOperador=UsuarioSistema.getIdUsuarioLogado();
            cNomeOperador=txtOperador.getText();
            nCodigoCliente= 0;//Integer.valueOf(getDadosorc().getCodcliente()) ;
            cNomeCliente="";
            
            nRet=RegistraItem_RegistrarEntidades_Dadosorc_Persistencia( dDataAbertura, nCodigoVendedor,cNomeVendedor, nCodigoCliente, cNomeCliente, nCodigoOperador, cNomeOperador,Sistema.getLojaAtual(), UsuarioSistema.getIdUsuarioLogadoCaixa(),0, "", pdvgerenciar.CodigoPDV());
            
          

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return nRet;
    }
 
      
    public static Itensorc SetarItensorc( Dadosorc dDadosorc,int nSeq , Long nItensorc_Idunico ,Long nIG_ChaveUnica, String cCodigoProduto,String cNomeProduto, Float nQuantidade, Float nPreco, Float nSubTotal, String cSituacaoTributaria, String cAliquota, Float nPercentualIcms, int nCodigoLoja, String cTabela, Long nCodigoReexibicao, int nCodigoPDV, boolean  bFracionado, String cCodMov, String Unidade, boolean bRegistroNovo )
    {
        Itensorc i=null;
        try {
            i=new Itensorc();
            //i.setIdunico(DAO_RepositorioLocal.NovoValorIdentidade("itensorc", Sistema.getLojaAtual(),nCodigoPDV));
            if(!bRegistroNovo){
                i.setIdunico(nItensorc_Idunico);
                i.setSeq(nSeq);
            }
            i.setCodigo(dDadosorc);
            i.setCodprod(nIG_ChaveUnica);
            i.setRef(cCodigoProduto);
            i.setNomeImpresso(cNomeProduto);
            i.setDescricao(cNomeProduto);
            i.setCodaliquota(cAliquota);
            i.setIcms(nPercentualIcms.toString());
            i.setPreco(new BigDecimal(nPreco.toString()));
            i.setPrecooriginal(i.getPreco());
            i.setQuantidade(new BigDecimal(nQuantidade.toString()));
            i.setData(ManipularData.DataAtual());
            i.setTotal(new BigDecimal(nSubTotal.toString()));
            i.setLiquido(new BigDecimal(nSubTotal.toString()));
            i.setTabela(cTabela);
            i.setSt(cSituacaoTributaria);
            i.setLoja(nCodigoLoja);
            i.setFracionado(bFracionado);
            i.setCodmov(cCodMov);
            i.setUnidade(Unidade);
            if(nCodigoReexibicao==0){
               i=ItensorcRN.RegistraItem_RegistrarEntidades_Itensorc_Persistencia(i,nCodigoReexibicao,bRegistroNovo);
            }else{
                i.setSeq(nSeq);
                i.setIdunico(nItensorc_Idunico);
            }

            if(i.getIdunico()==0){
               return null;
            }

        } catch (Exception e) {
            i=null;
            LogDinnamus.Log(e);
        }
        return i;
    }  
    public Long RegistraItem_RegistrarEntidades_Dadosorc_Persistencia(Date dDataAbertura,Integer nCodigoVendedor,String cNomeVendedor, Integer nCodigoCliente, String cNomeCliente, Integer nCodigoOperador, String cNomeOperador, Integer nLoja, Integer nCodigoOpCaixa, Integer nCodigoObjetoCaixa, String cControleCX, int nCodigoPDV )
    {
        Long nRetorno=Long.valueOf(0);
        try {

            getDadosorc().setCodigo(DAO_RepositorioLocal.NovoValorIdentidade("dadosorc", Sistema.getLojaAtual(),nCodigoPDV));
            getDadosorc().setData(dDataAbertura);            
            getDadosorc().setHora(Timestamp.valueOf(DataHora.getDataHoraAtual()));
            getDadosorc().setLoja(nLoja);
            getDadosorc().setFilial(nCodigoFilial);
            getDadosorc().setCodoperador(nCodigoOperador.toString());
            getDadosorc().setOperador(cNomeOperador);
            getDadosorc().setVendedor(nCodigoVendedor.toString());
            getDadosorc().setCodvendedor(nCodigoVendedor.toString());
            getDadosorc().setControleCx("");
            getDadosorc().setObjetoCaixa(0);
            getDadosorc().setCodcaixa(0);
            getDadosorc().setRecebido("N");
            getDadosorc().setFeito("S");
            getDadosorc().setPdv(nCodigoPDV);
            getDadosorc().setNaosinc(true);
            nRetorno= DadosorcRN.Dadosorc_Incluir(DAO_RepositorioLocal.getCnRepLocal(), dadosorc, 0,true,true);

        } catch (Exception e) {

            LogDinnamus.Log(e);
        }
        return nRetorno;
    }
    private class Relogio implements Runnable {
        public void run() {
            try {
                while (true) {
                    lblHora.setText((new SimpleDateFormat("HH:mm:ss")).format(new Date()));
                    

                    Thread.sleep(1000);
                }
            }
            catch (InterruptedException e) {
                LogDinnamus.Log(e);
            }
        }
    }
}
