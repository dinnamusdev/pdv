/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormTabela.java
 *
 * Created on 16/06/2010, 11:35:24
 */

package dinnamus.ui.InteracaoUsuario.Venda;

import br.TratamentoNulo.TratamentoNulos;
import br.com.FormatarNumeros;
import br.com.generica.Dao_Generica;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.ui.teclas.DefinirAtalhos2;
import br.ui.teclas.controleteclas;
import br.valor.formatar.FormatarNumero;
import MetodosDeNegocio.Seguranca.UsuarioSistema;
import MetodosDeNegocio.Crediario.Crediario;
import MetodosDeNegocio.Crediario.entidade.BaixarConta;
import MetodosDeNegocio.Entidades.Dadosorc;
import MetodosDeNegocio.Venda.DadosorcRN;
import MetodosDeNegocio.Venda.ParametrosGlobais;
import MetodosDeNegocio.Venda.pdvgerenciar;
import UI.Seguranca.ValidarAcessoAoProcesso;
import br.arredondar.NumeroArredondar;
import br.com.ecf.ECFDinnamuS;
import br.com.ui.JTableDinnamuS;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.com.ui.SwingUtilidade;
import br.com.xml.XStream_Api;
import dinnamus.metodosnegocio.venda.caixa.PDVComprovante;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.TreeMap;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author dti
 */
public class frmClienteListagem extends javax.swing.JDialog {

    /** Creates new form FormTabela */

    //private JTableDinnamuS jTableDinnamuS=new JTableDinnamuS();
    public Long  ClienteSelecionado =0l;
    public String  ClienteSelecionadoNome ="";
    public void fechar(){this.setVisible(false);}
    //private int nCodigoClienteSelecionado =0;
    private String SenhaCliente ="";
    private boolean IniciouOK = false;
    private boolean ModoRecebimento = false;
    private boolean ModoVenda=false;
    private int CodigoUsuarioAutorizouJuros=0;
    private int CodigoUsuarioAutorizouDesconto=0;
    private double ValorJurosAutorizado =0d;
    
    
    private double ValorDescontoAutorizado =0d;
    
    public String Pagto_TipoComprovante ="";
    public boolean Pagto_ECFDisponivel = false;
    public String Pagto_ImpressoraComprovantes ="";
    public ECFDinnamuS Pagto_ecf = null;
    public Integer Pagto_nCodigoObjetoCaixa=0;
    
    
    public frmClienteListagem(java.awt.Frame parent, boolean modal, boolean SomenteConsulta, boolean ModoVenda) {
        super(parent, modal);
        initComponents();      
        this.ModoVenda = ModoVenda;
        IniciouOK = IniciarUI();        
        CodigoUsuarioAutorizouJuros=0;
        CodigoUsuarioAutorizouDesconto=0;
        ValorJurosAutorizado =0d;
        ValorDescontoAutorizado =0d;
        if(SomenteConsulta){
           btSelecionar.setVisible(false);
        }
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        btLimparJuros = new javax.swing.JButton();
        txtJurosReceber = new javax.swing.JFormattedTextField();
        PainelPrincipal = new javax.swing.JPanel();
        PainelTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        btFechar1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        PainelCorpo = new javax.swing.JPanel();
        PainelListagem = new javax.swing.JPanel();
        dbgClientes = new br.com.ui.JTableDinnamuS();
        PainelDuplicatas = new javax.swing.JPanel();
        tplDuplicatas = new javax.swing.JTabbedPane();
        PainelAberto = new javax.swing.JPanel();
        dbgContasEmAberto = new br.com.ui.JTableDinnamuS();
        PainelResumoValores = new javax.swing.JPanel();
        PainelDuplicatasSelecionado = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtValorSelecionado = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQTSelecionada = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtValorSelecionadoSemJuros = new javax.swing.JTextField();
        txtJurosSelecionada = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        PainelLimite = new javax.swing.JPanel();
        lblN = new javax.swing.JLabel();
        txtLimite = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDisponivel = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        PainelTotaisDuplicatas = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtTotalEmAberto = new javax.swing.JTextField();
        txtTotalVencido = new javax.swing.JTextField();
        txtTotalAVencer = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtQTAVencer = new javax.swing.JTextField();
        txtQTVencido = new javax.swing.JTextField();
        txtQTEmAberto = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtTotalJuros = new javax.swing.JTextField();
        PainelLegenda = new javax.swing.JPanel();
        PainelBotoes = new javax.swing.JPanel();
        btPendentes = new javax.swing.JButton();
        btAmortizado = new javax.swing.JButton();
        btVencidas = new javax.swing.JButton();
        btAvencer = new javax.swing.JButton();
        PainelBaixa = new javax.swing.JPanel();
        lblTituloRestante = new javax.swing.JLabel();
        lblTituloPainelBaixa = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtValorAReceber = new javax.swing.JFormattedTextField();
        btReceberPagamento = new javax.swing.JButton();
        txtValorRestante = new javax.swing.JFormattedTextField();
        jLabel25 = new javax.swing.JLabel();
        txtValorPrincipalReceber = new javax.swing.JFormattedTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtQTPagto = new javax.swing.JTextField();
        txtDescontoReceber = new javax.swing.JFormattedTextField();
        btDesconto = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        txtTotalDivida = new javax.swing.JFormattedTextField();
        PainelBotoesInferior = new javax.swing.JPanel();
        btSelecionarDuplicata = new javax.swing.JButton();
        btBaixarDuplicata = new javax.swing.JButton();
        btCancelarDuplicata = new javax.swing.JButton();
        btEncerrarDuplicata = new javax.swing.JButton();
        btImprimirExtrato = new javax.swing.JButton();
        PainelCanceladas = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        btDesfazarCancelamento = new javax.swing.JButton();
        dbgCanceladas = new br.com.ui.JTableDinnamuS();
        PainelPagas = new javax.swing.JPanel();
        painelBotaoPagas = new javax.swing.JPanel();
        btDesfazarCancelamento1 = new javax.swing.JButton();
        btReimprimir = new javax.swing.JButton();
        dbgPagas = new br.com.ui.JTableDinnamuS();
        dbgFormaPagto = new br.com.ui.JTableDinnamuS();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        PainelTopo1 = new javax.swing.JPanel();
        PaineTopo = new javax.swing.JPanel();
        cbOpcao = new javax.swing.JComboBox();
        txtBusca = new javax.swing.JTextField();
        btSelecionar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        btGravarSenha = new javax.swing.JButton();
        btFinanceiro = new javax.swing.JToggleButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        btLimparJuros.setBackground(new java.awt.Color(0, 0, 0));
        btLimparJuros.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btLimparJuros.setForeground(new java.awt.Color(255, 255, 255));
        btLimparJuros.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Add.png"))); // NOI18N
        btLimparJuros.setText("JUROS [F9]");
        btLimparJuros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparJurosActionPerformed(evt);
            }
        });

        txtJurosReceber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtJurosReceber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtJurosReceber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtJurosReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJurosReceberActionPerformed(evt);
            }
        });
        txtJurosReceber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtJurosReceberKeyPressed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Pesquisa de Clientes");
        setMinimumSize(new java.awt.Dimension(861, 560));
        setModal(true);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(861, 560));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        PainelPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelTitulo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTitulo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 204, 204), null));
        PainelTitulo.setLayout(new java.awt.GridBagLayout());

        lblTitulo.setBackground(new java.awt.Color(255, 255, 204));
        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/User group.png"))); // NOI18N
        lblTitulo.setText("PESQUISA DE CLIENTES");
        lblTitulo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PainelTitulo.add(lblTitulo, gridBagConstraints);

        btFechar1.setBackground(new java.awt.Color(0, 0, 0));
        btFechar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btFechar1.setForeground(new java.awt.Color(255, 255, 255));
        btFechar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar1.setMnemonic('F');
        btFechar1.setText("FECHAR");
        btFechar1.setBorderPainted(false);
        btFechar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 10);
        PainelTitulo.add(btFechar1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        PainelTitulo.add(jLabel5, gridBagConstraints);

        jLabel4.setBackground(new java.awt.Color(255, 255, 204));
        jLabel4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/barra logo dinnamus.JPG"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        PainelTitulo.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelTitulo, gridBagConstraints);

        PainelCorpo.setBackground(new java.awt.Color(255, 255, 204));
        PainelCorpo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelListagem.setBackground(new java.awt.Color(0, 0, 0));
        PainelListagem.setLayout(new java.awt.GridBagLayout());

        dbgClientes.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        PainelListagem.add(dbgClientes, gridBagConstraints);

        PainelDuplicatas.setBackground(new java.awt.Color(255, 255, 204));
        PainelDuplicatas.setLayout(new java.awt.GridBagLayout());

        tplDuplicatas.setBackground(new java.awt.Color(204, 204, 204));
        tplDuplicatas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tplDuplicatas.setOpaque(true);

        PainelAberto.setBackground(new java.awt.Color(204, 204, 204));
        PainelAberto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        PainelAberto.setLayout(new java.awt.GridBagLayout());

        dbgContasEmAberto.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.7;
        gridBagConstraints.insets = new java.awt.Insets(6, 6, 6, 6);
        PainelAberto.add(dbgContasEmAberto, gridBagConstraints);

        PainelResumoValores.setBackground(new java.awt.Color(0, 0, 0));
        PainelResumoValores.setOpaque(false);
        PainelResumoValores.setLayout(new java.awt.GridBagLayout());

        PainelDuplicatasSelecionado.setBackground(new java.awt.Color(255, 255, 255));
        PainelDuplicatasSelecionado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelDuplicatasSelecionado.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("JUROS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        PainelDuplicatasSelecionado.add(jLabel11, gridBagConstraints);

        txtValorSelecionado.setEditable(false);
        txtValorSelecionado.setBackground(new java.awt.Color(255, 255, 255));
        txtValorSelecionado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtValorSelecionado.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorSelecionado.setText("0,00");
        txtValorSelecionado.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelDuplicatasSelecionado.add(txtValorSelecionado, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("QTD");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 0.1;
        PainelDuplicatasSelecionado.add(jLabel9, gridBagConstraints);

        txtQTSelecionada.setEditable(false);
        txtQTSelecionada.setBackground(new java.awt.Color(255, 255, 255));
        txtQTSelecionada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQTSelecionada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQTSelecionada.setText("0");
        txtQTSelecionada.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelDuplicatasSelecionado.add(txtQTSelecionada, gridBagConstraints);

        jLabel13.setBackground(new java.awt.Color(0, 0, 0));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Yes.png"))); // NOI18N
        jLabel13.setText("CONTAS SELECIONADAS");
        jLabel13.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.2;
        PainelDuplicatasSelecionado.add(jLabel13, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 0.2;
        PainelDuplicatasSelecionado.add(jLabel14, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("TOTAL ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        PainelDuplicatasSelecionado.add(jLabel18, gridBagConstraints);

        txtValorSelecionadoSemJuros.setEditable(false);
        txtValorSelecionadoSemJuros.setBackground(new java.awt.Color(255, 255, 255));
        txtValorSelecionadoSemJuros.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtValorSelecionadoSemJuros.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorSelecionadoSemJuros.setText("0,00");
        txtValorSelecionadoSemJuros.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelDuplicatasSelecionado.add(txtValorSelecionadoSemJuros, gridBagConstraints);

        txtJurosSelecionada.setEditable(false);
        txtJurosSelecionada.setBackground(new java.awt.Color(255, 255, 255));
        txtJurosSelecionada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtJurosSelecionada.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtJurosSelecionada.setText("0,00");
        txtJurosSelecionada.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelDuplicatasSelecionado.add(txtJurosSelecionada, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("VALOR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        PainelDuplicatasSelecionado.add(jLabel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        PainelResumoValores.add(PainelDuplicatasSelecionado, gridBagConstraints);

        PainelLimite.setBackground(new java.awt.Color(255, 255, 255));
        PainelLimite.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelLimite.setLayout(new java.awt.GridBagLayout());

        lblN.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblN.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblN.setText("TOTAL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        PainelLimite.add(lblN, gridBagConstraints);

        txtLimite.setEditable(false);
        txtLimite.setBackground(new java.awt.Color(255, 255, 255));
        txtLimite.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtLimite.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtLimite.setText("0,00");
        txtLimite.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelLimite.add(txtLimite, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("DISPONIVEL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        PainelLimite.add(jLabel3, gridBagConstraints);

        txtDisponivel.setEditable(false);
        txtDisponivel.setBackground(new java.awt.Color(255, 255, 255));
        txtDisponivel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtDisponivel.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDisponivel.setText("10,00");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelLimite.add(txtDisponivel, gridBagConstraints);

        jLabel16.setBackground(new java.awt.Color(0, 0, 0));
        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Terminate.png"))); // NOI18N
        jLabel16.setText("LIMITE DE CRÉDITO");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel16.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        PainelLimite.add(jLabel16, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 0.2;
        PainelLimite.add(jLabel17, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        PainelResumoValores.add(PainelLimite, gridBagConstraints);

        PainelTotaisDuplicatas.setBackground(new java.awt.Color(255, 255, 255));
        PainelTotaisDuplicatas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelTotaisDuplicatas.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("(=)TOTAL ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(jLabel10, gridBagConstraints);

        txtTotalEmAberto.setEditable(false);
        txtTotalEmAberto.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalEmAberto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotalEmAberto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalEmAberto.setText("0,00");
        txtTotalEmAberto.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelTotaisDuplicatas.add(txtTotalEmAberto, gridBagConstraints);

        txtTotalVencido.setEditable(false);
        txtTotalVencido.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalVencido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotalVencido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalVencido.setText("0,00");
        txtTotalVencido.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelTotaisDuplicatas.add(txtTotalVencido, gridBagConstraints);

        txtTotalAVencer.setEditable(false);
        txtTotalAVencer.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalAVencer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotalAVencer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalAVencer.setText("0,00");
        txtTotalAVencer.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelTotaisDuplicatas.add(txtTotalAVencer, gridBagConstraints);

        jLabel15.setBackground(new java.awt.Color(0, 0, 0));
        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        jLabel15.setText("RESUMO");
        jLabel15.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        PainelTotaisDuplicatas.add(jLabel15, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("A VENCER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(jLabel20, gridBagConstraints);

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("JUROS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(jLabel22, gridBagConstraints);

        txtQTAVencer.setEditable(false);
        txtQTAVencer.setBackground(new java.awt.Color(255, 255, 255));
        txtQTAVencer.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQTAVencer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQTAVencer.setText("0");
        txtQTAVencer.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(txtQTAVencer, gridBagConstraints);

        txtQTVencido.setEditable(false);
        txtQTVencido.setBackground(new java.awt.Color(255, 255, 255));
        txtQTVencido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQTVencido.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQTVencido.setText("0");
        txtQTVencido.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(txtQTVencido, gridBagConstraints);

        txtQTEmAberto.setEditable(false);
        txtQTEmAberto.setBackground(new java.awt.Color(255, 255, 255));
        txtQTEmAberto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQTEmAberto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQTEmAberto.setText("0");
        txtQTEmAberto.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(txtQTEmAberto, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("VENCIDO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.weightx = 0.1;
        PainelTotaisDuplicatas.add(jLabel24, gridBagConstraints);

        txtTotalJuros.setEditable(false);
        txtTotalJuros.setBackground(new java.awt.Color(255, 255, 255));
        txtTotalJuros.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTotalJuros.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTotalJuros.setText("0,00");
        txtTotalJuros.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelTotaisDuplicatas.add(txtTotalJuros, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 0);
        PainelResumoValores.add(PainelTotaisDuplicatas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(9, 4, 7, 9);
        PainelAberto.add(PainelResumoValores, gridBagConstraints);

        PainelLegenda.setBackground(new java.awt.Color(0, 0, 0));
        PainelLegenda.setLayout(new java.awt.GridBagLayout());

        PainelBotoes.setBackground(new java.awt.Color(204, 204, 204));
        PainelBotoes.setLayout(new java.awt.GridBagLayout());

        btPendentes.setBackground(new java.awt.Color(0, 0, 0));
        btPendentes.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btPendentes.setForeground(new java.awt.Color(255, 255, 255));
        btPendentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_r.png"))); // NOI18N
        btPendentes.setMnemonic('e');
        btPendentes.setText(" PENDENTE - [ F7 ]");
        btPendentes.setBorderPainted(false);
        btPendentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPendentesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PainelBotoes.add(btPendentes, gridBagConstraints);

        btAmortizado.setBackground(new java.awt.Color(0, 0, 0));
        btAmortizado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAmortizado.setForeground(new java.awt.Color(255, 255, 255));
        btAmortizado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_rg.png"))); // NOI18N
        btAmortizado.setMnemonic('e');
        btAmortizado.setText("PARCIAL - [ F8 ]");
        btAmortizado.setBorderPainted(false);
        btAmortizado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAmortizadoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PainelBotoes.add(btAmortizado, gridBagConstraints);

        btVencidas.setBackground(new java.awt.Color(0, 0, 0));
        btVencidas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btVencidas.setForeground(new java.awt.Color(255, 255, 255));
        btVencidas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/clockred.png"))); // NOI18N
        btVencidas.setMnemonic('e');
        btVencidas.setText("VENCIDAS - [ F6 ]");
        btVencidas.setBorderPainted(false);
        btVencidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVencidasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PainelBotoes.add(btVencidas, gridBagConstraints);

        btAvencer.setBackground(new java.awt.Color(0, 0, 0));
        btAvencer.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAvencer.setForeground(new java.awt.Color(255, 255, 255));
        btAvencer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Clock.png"))); // NOI18N
        btAvencer.setMnemonic('e');
        btAvencer.setText(" A VENCER - [ F5 ]");
        btAvencer.setBorderPainted(false);
        btAvencer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAvencerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        PainelBotoes.add(btAvencer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        PainelLegenda.add(PainelBotoes, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        PainelAberto.add(PainelLegenda, gridBagConstraints);

        PainelBaixa.setBackground(new java.awt.Color(255, 255, 255));
        PainelBaixa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelBaixa.setLayout(new java.awt.GridBagLayout());

        lblTituloRestante.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTituloRestante.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblTituloRestante.setText("VALOR RESTANTE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.weightx = 0.1;
        PainelBaixa.add(lblTituloRestante, gridBagConstraints);

        lblTituloPainelBaixa.setBackground(new java.awt.Color(0, 0, 0));
        lblTituloPainelBaixa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTituloPainelBaixa.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloPainelBaixa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloPainelBaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Dollar.png"))); // NOI18N
        lblTituloPainelBaixa.setText("PAGAMENTO");
        lblTituloPainelBaixa.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        lblTituloPainelBaixa.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        PainelBaixa.add(lblTituloPainelBaixa, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weighty = 0.2;
        PainelBaixa.add(jLabel23, gridBagConstraints);

        txtValorAReceber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtValorAReceber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorAReceber.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtValorAReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorAReceberActionPerformed(evt);
            }
        });
        txtValorAReceber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorAReceberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtValorAReceberFocusLost(evt);
            }
        });
        txtValorAReceber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorAReceberKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtValorAReceber, gridBagConstraints);

        btReceberPagamento.setBackground(new java.awt.Color(0, 0, 0));
        btReceberPagamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btReceberPagamento.setForeground(new java.awt.Color(255, 255, 255));
        btReceberPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/money_add.png"))); // NOI18N
        btReceberPagamento.setMnemonic('p');
        btReceberPagamento.setText("Receber");
        btReceberPagamento.setBorderPainted(false);
        btReceberPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReceberPagamentoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 0);
        PainelBaixa.add(btReceberPagamento, gridBagConstraints);

        txtValorRestante.setEditable(false);
        txtValorRestante.setBackground(new java.awt.Color(204, 204, 204));
        txtValorRestante.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtValorRestante.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorRestante.setFocusable(false);
        txtValorRestante.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtValorRestante.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorRestanteKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtValorRestante, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("TOTAL DIVIDA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weightx = 0.1;
        PainelBaixa.add(jLabel25, gridBagConstraints);

        txtValorPrincipalReceber.setEditable(false);
        txtValorPrincipalReceber.setBackground(new java.awt.Color(204, 204, 204));
        txtValorPrincipalReceber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtValorPrincipalReceber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtValorPrincipalReceber.setFocusable(false);
        txtValorPrincipalReceber.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtValorPrincipalReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorPrincipalReceberActionPerformed(evt);
            }
        });
        txtValorPrincipalReceber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorPrincipalReceberKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtValorPrincipalReceber, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel26.setText("VALOR PRINCIPAL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.weightx = 0.1;
        PainelBaixa.add(jLabel26, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel27.setText("QTD");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 0.1;
        PainelBaixa.add(jLabel27, gridBagConstraints);

        txtQTPagto.setEditable(false);
        txtQTPagto.setBackground(new java.awt.Color(204, 204, 204));
        txtQTPagto.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtQTPagto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQTPagto.setText("0");
        txtQTPagto.setToolTipText("");
        txtQTPagto.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtQTPagto, gridBagConstraints);

        txtDescontoReceber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtDescontoReceber.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDescontoReceber.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtDescontoReceber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescontoReceberActionPerformed(evt);
            }
        });
        txtDescontoReceber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescontoReceberFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoReceberFocusLost(evt);
            }
        });
        txtDescontoReceber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescontoReceberKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtDescontoReceber, gridBagConstraints);

        btDesconto.setBackground(new java.awt.Color(0, 0, 0));
        btDesconto.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btDesconto.setForeground(new java.awt.Color(255, 255, 255));
        btDesconto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Remove.png"))); // NOI18N
        btDesconto.setText("DESCONTO [F10]");
        btDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDescontoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        PainelBaixa.add(btDesconto, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel28.setText("VALOR A RECEBER");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 0.1;
        PainelBaixa.add(jLabel28, gridBagConstraints);

        txtTotalDivida.setEditable(false);
        txtTotalDivida.setBackground(new java.awt.Color(204, 204, 204));
        txtTotalDivida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##,##0.00"))));
        txtTotalDivida.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTotalDivida.setFocusable(false);
        txtTotalDivida.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtTotalDivida.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTotalDividaKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        PainelBaixa.add(txtTotalDivida, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 118;
        gridBagConstraints.ipady = 38;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(14, 14, 14, 14);
        PainelAberto.add(PainelBaixa, gridBagConstraints);

        PainelBotoesInferior.setLayout(new java.awt.GridBagLayout());

        btSelecionarDuplicata.setBackground(new java.awt.Color(0, 0, 0));
        btSelecionarDuplicata.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSelecionarDuplicata.setForeground(new java.awt.Color(255, 255, 255));
        btSelecionarDuplicata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Yes.png"))); // NOI18N
        btSelecionarDuplicata.setMnemonic('s');
        btSelecionarDuplicata.setText("Marcar [ ESPAÇO ]");
        btSelecionarDuplicata.setBorderPainted(false);
        btSelecionarDuplicata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarDuplicataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelBotoesInferior.add(btSelecionarDuplicata, gridBagConstraints);

        btBaixarDuplicata.setBackground(new java.awt.Color(0, 0, 0));
        btBaixarDuplicata.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btBaixarDuplicata.setForeground(new java.awt.Color(255, 255, 255));
        btBaixarDuplicata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Dollar.png"))); // NOI18N
        btBaixarDuplicata.setMnemonic('p');
        btBaixarDuplicata.setText("Receber [ ENTER ]");
        btBaixarDuplicata.setBorderPainted(false);
        btBaixarDuplicata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBaixarDuplicataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        PainelBotoesInferior.add(btBaixarDuplicata, gridBagConstraints);

        btCancelarDuplicata.setBackground(new java.awt.Color(0, 0, 0));
        btCancelarDuplicata.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btCancelarDuplicata.setForeground(new java.awt.Color(255, 255, 255));
        btCancelarDuplicata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Erase.png"))); // NOI18N
        btCancelarDuplicata.setMnemonic('c');
        btCancelarDuplicata.setText("Cancelar  [ DEL ]");
        btCancelarDuplicata.setBorderPainted(false);
        btCancelarDuplicata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarDuplicataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        PainelBotoesInferior.add(btCancelarDuplicata, gridBagConstraints);

        btEncerrarDuplicata.setBackground(new java.awt.Color(0, 0, 0));
        btEncerrarDuplicata.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btEncerrarDuplicata.setForeground(new java.awt.Color(255, 255, 255));
        btEncerrarDuplicata.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Exit.png"))); // NOI18N
        btEncerrarDuplicata.setMnemonic('e');
        btEncerrarDuplicata.setText("Encerrar  [ ESC ]");
        btEncerrarDuplicata.setBorderPainted(false);
        btEncerrarDuplicata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEncerrarDuplicataActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        PainelBotoesInferior.add(btEncerrarDuplicata, gridBagConstraints);

        btImprimirExtrato.setBackground(new java.awt.Color(0, 0, 0));
        btImprimirExtrato.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btImprimirExtrato.setForeground(new java.awt.Color(255, 255, 255));
        btImprimirExtrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/printer.png"))); // NOI18N
        btImprimirExtrato.setMnemonic('e');
        btImprimirExtrato.setText("Extrato  [ F9 ]");
        btImprimirExtrato.setBorderPainted(false);
        btImprimirExtrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirExtratoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        PainelBotoesInferior.add(btImprimirExtrato, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        PainelAberto.add(PainelBotoesInferior, gridBagConstraints);

        tplDuplicatas.addTab("ABERTO", new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_r.png")), PainelAberto); // NOI18N

        PainelCanceladas.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        btDesfazarCancelamento.setBackground(new java.awt.Color(0, 0, 0));
        btDesfazarCancelamento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btDesfazarCancelamento.setForeground(new java.awt.Color(255, 255, 255));
        btDesfazarCancelamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Undo.png"))); // NOI18N
        btDesfazarCancelamento.setText("Desfazer Cancelamento");
        btDesfazarCancelamento.setBorderPainted(false);
        btDesfazarCancelamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesfazarCancelamentoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 332, 9, 332);
        jPanel1.add(btDesfazarCancelamento, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelCanceladas.add(jPanel1, gridBagConstraints);

        dbgCanceladas.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelCanceladas.add(dbgCanceladas, gridBagConstraints);

        tplDuplicatas.addTab("CANCELADAS", new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Erase.png")), PainelCanceladas); // NOI18N

        PainelPagas.setLayout(new java.awt.GridBagLayout());

        painelBotaoPagas.setBackground(new java.awt.Color(0, 0, 0));
        painelBotaoPagas.setLayout(new java.awt.GridBagLayout());

        btDesfazarCancelamento1.setBackground(new java.awt.Color(0, 0, 0));
        btDesfazarCancelamento1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btDesfazarCancelamento1.setForeground(new java.awt.Color(255, 255, 255));
        btDesfazarCancelamento1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Undo.png"))); // NOI18N
        btDesfazarCancelamento1.setText("Desfazer Pagamento");
        btDesfazarCancelamento1.setBorderPainted(false);
        btDesfazarCancelamento1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesfazarCancelamento1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        painelBotaoPagas.add(btDesfazarCancelamento1, gridBagConstraints);

        btReimprimir.setBackground(new java.awt.Color(0, 0, 0));
        btReimprimir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btReimprimir.setForeground(new java.awt.Color(255, 255, 255));
        btReimprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/printer.png"))); // NOI18N
        btReimprimir.setText("Reimprimir");
        btReimprimir.setBorderPainted(false);
        btReimprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReimprimirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        painelBotaoPagas.add(btReimprimir, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPagas.add(painelBotaoPagas, gridBagConstraints);

        dbgPagas.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.1;
        PainelPagas.add(dbgPagas, gridBagConstraints);

        dbgFormaPagto.setBackground(new java.awt.Color(0, 0, 0));
        dbgFormaPagto.setAutoscrolls(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelPagas.add(dbgFormaPagto, gridBagConstraints);

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("FORMA DE PAGAMENTO");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel1.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        PainelPagas.add(jLabel1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelPagas.add(jLabel2, gridBagConstraints);

        tplDuplicatas.addTab("PAGAS", new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_g.png")), PainelPagas); // NOI18N

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelDuplicatas.add(tplDuplicatas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelListagem.add(PainelDuplicatas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelCorpo.add(PainelListagem, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelPrincipal.add(PainelCorpo, gridBagConstraints);

        PainelTopo1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelTopo1.setOpaque(false);
        PainelTopo1.setLayout(new java.awt.GridBagLayout());

        PaineTopo.setBackground(new java.awt.Color(0, 0, 0));
        PaineTopo.setOpaque(false);
        PaineTopo.setLayout(new java.awt.GridBagLayout());

        cbOpcao.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbOpcao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nome", "Codigo", "CPF", "RG" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        PaineTopo.add(cbOpcao, gridBagConstraints);

        txtBusca.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtBusca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscaActionPerformed(evt);
            }
        });
        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        PaineTopo.add(txtBusca, gridBagConstraints);

        btSelecionar.setBackground(new java.awt.Color(0, 0, 0));
        btSelecionar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSelecionar.setForeground(new java.awt.Color(255, 255, 255));
        btSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Find.png"))); // NOI18N
        btSelecionar.setMnemonic('s');
        btSelecionar.setText("[Enter]");
        btSelecionar.setBorderPainted(false);
        btSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSelecionarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PaineTopo.add(btSelecionar, gridBagConstraints);

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText(" PROCURAR");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PaineTopo.add(jLabel6, gridBagConstraints);

        btGravarSenha.setBackground(new java.awt.Color(0, 0, 0));
        btGravarSenha.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btGravarSenha.setForeground(new java.awt.Color(255, 255, 255));
        btGravarSenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Key.png"))); // NOI18N
        btGravarSenha.setText("Definir Senha [F3]");
        btGravarSenha.setBorderPainted(false);
        btGravarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarSenhaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PaineTopo.add(btGravarSenha, gridBagConstraints);

        btFinanceiro.setBackground(new java.awt.Color(0, 0, 0));
        btFinanceiro.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btFinanceiro.setForeground(new java.awt.Color(255, 255, 255));
        btFinanceiro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Dollar.png"))); // NOI18N
        btFinanceiro.setText("Financeiro [F4]");
        btFinanceiro.setBorderPainted(false);
        btFinanceiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinanceiroActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PaineTopo.add(btFinanceiro, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelTopo1.add(PaineTopo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(4, 5, 4, 4);
        PainelPrincipal.add(PainelTopo1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean IniciarUI(){
        try {

            txtValorAReceber.setValue(0d);
            PainelBaixa.setVisible(false);
            Exibir_Ocultar_PrevisaoPagto(false,0d);
            ClienteSelecionado=0l;                        
            controleteclas.SetarTodosOsBotoes(this.getContentPane());                                               
            TeclasAtalhos_UI();            
            txtBusca.requestFocus();
            br.com.ui.MetodosUI_Auxiliares_1.MaximizarJanelaDeDialogo(this);
            tplDuplicatas.addChangeListener(new ChangeListener() {
                public void stateChanged(ChangeEvent e) {
                    if(tplDuplicatas.getSelectedIndex()==0){
                        Aba1_AtualizarUI();
                    }
                    else if(tplDuplicatas.getSelectedIndex()==1){
                      Aba2_AtualizarUI();
                    }else if(tplDuplicatas.getSelectedIndex()==2){
                      Aba3_AtualizarUI();
                    }                        
                }
            });           
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean Grid_canceladas_Atualizar(){
        boolean Ret = false;
        try {
            HashMap<String, String> clienteAtual = getClienteAtual();
            if(clienteAtual.size()>0){
                dbgCanceladas.setRsDados(Crediario.DuplicatasCanceladas(new Long (clienteAtual.get("codigo")), Sistema.getLojaAtual()));
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    
    private boolean Grid_Pagas_Atualizar(){
        boolean Ret = false;
        try {
            HashMap<String, String> clienteAtual = getClienteAtual();
            if(clienteAtual.size()>0){
                dbgPagas.setRsDados(Crediario.DuplicatasPagas(new Long (clienteAtual.get("codigo")), Sistema.getLojaAtual()));
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean IniciarGrid_canceladas(){
        boolean Ret = false;
        try {
            dbgCanceladas.getTbDinnamuS().setModeloUsandoColecao(true);
            dbgCanceladas.AumentaAlturaLinhas(1.2f);            
            dbgCanceladas.DefinirFonte("Arial",Font.BOLD, 14);               
            dbgCanceladas.setColunaComTamanhosEmPercentual(true);
            
            //dbgContasEmAberto.addClColunas("selecionada", "Selecionar",5, true,true ,javax.swing.SwingConstants.CENTER,new JCheckBox(), "java.lang.Boolean");            
            dbgCanceladas.addClColunas("codigo", "Codigo", 10);
            dbgCanceladas.addClColunas("titulo", "Titulo", 10);
            dbgCanceladas.addClColunas("digito", "Parc", 5);
            dbgCanceladas.addClColunas("emissao", "Emissão", 8,SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);            
            dbgCanceladas.addClColunas("vencimento", "Vencto", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);
            dbgCanceladas.addClColunas("valorrestante", "Valor", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);                         
            dbgCanceladas.getjTable().addKeyListener( new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}
                @Override
                public void keyPressed(KeyEvent e) {
                        if(e.getKeyCode()==KeyEvent.VK_ENTER){
                            e.consume();
                                                
                         }else  if(e.getKeyCode()==KeyEvent.VK_DELETE){
                             
                         }
                }
                @Override
                public void keyReleased(KeyEvent e) {}
                }
              ); 
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;    
    }
    
    
    private boolean IniciarGrid_Pagas(){
        boolean Ret = false;
        try {
            dbgPagas.getTbDinnamuS().setModeloUsandoColecao(true);
            dbgPagas.AumentaAlturaLinhas(1.2f);            
            dbgPagas.DefinirFonte("Arial",Font.BOLD, 12);               
            dbgPagas.setColunaComTamanhosEmPercentual(true);
            
            //dbgContasEmAberto.addClColunas("selecionada", "Selecionar",5, true,true ,javax.swing.SwingConstants.CENTER,new JCheckBox(), "java.lang.Boolean");            
            dbgPagas.addClColunas("codigo", "Codigo", 10);
            dbgPagas.addClColunas("titulo", "Titulo", 10);
            dbgPagas.addClColunas("digito", "Pc", 5);            
            dbgPagas.addClColunas("vencimento", "Vencto", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);
            dbgPagas.addClColunas("datapagamento", "Dt.Evento", 8,SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);            
            dbgPagas.addClColunas("tipobaixa", "Evento", 10);
            dbgPagas.addClColunas("atraso", "Atraso",5);
            dbgPagas.addClColunas("valorsemjuros", "Vlr.Parcela", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Moeda);                         
            dbgPagas.addClColunas("valorjuros", "Juros", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Moeda);                                     
            dbgPagas.addClColunas("valorcomjuros", "Total", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Moeda);                                     
            dbgPagas.addClColunas("desconto", "Desconto", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Moeda);                                     
            dbgPagas.addClColunas("valorpago", "Pago", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Moeda);                                     
                                                 
            dbgPagas.addClColunas("idrecebimento", "Cod.Op.", 10);                                     
            dbgPagas.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
                public void valueChanged(ListSelectionEvent e) {
                    try {
                        int l = dbgPagas.getjTable().getSelectedRow();
                        if (l >= 0) {
                            Long CodigoOperacao = Long.valueOf(dbgPagas.getTbDinnamuS().getValorCelulaString("idrecebimento", l));
                            AtualizarUI_DbgFormaPagto(CodigoOperacao);

                        }
                    } catch (Exception ex) {
                        LogDinnamus.Log(ex, true);
                    }
                }
            });
            
            dbgPagas.getjTable().addKeyListener( new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}
                @Override
                public void keyPressed(KeyEvent e) {
                        if(e.getKeyCode()==KeyEvent.VK_ENTER){
                            e.consume();
                                                
                         }else  if(e.getKeyCode()==KeyEvent.VK_DELETE){
                             
                         }
                }
                @Override
                public void keyReleased(KeyEvent e) {}
                }
              ); 
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;    
    }

    
    public HashMap<String,String> getClienteAtual(){
        HashMap<String,String> Ret = new HashMap<String, String>();
        try {
            int LinhaAtual =dbgClientes.getjTable().getSelectedRow();
            if(LinhaAtual>=0){
               Long CodigoCliente = dbgClientes.getTbDinnamuS().getValorCelulaLong("codigo", LinhaAtual);
               String NomeCliente = dbgClientes.getTbDinnamuS().getValorCelulaString("nome", LinhaAtual);
               Ret.put("codigo", CodigoCliente.toString());
               Ret.put("nome", NomeCliente);
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void AtualizarGridFinanceiro(Long ClienteCodigo, String ClienteNome){
          try {
                if(PainelDuplicatas.isVisible()){
                    if(ClienteCodigo==0){                    
                       HashMap<String, String> clienteAtual = getClienteAtual();                       
                       if(clienteAtual.get("codigo")!=null){
                        ClienteCodigo = new Long(clienteAtual.get("codigo"));
                        ClienteNome = clienteAtual.get("nome");
                       }else{
                           return;
                       }
                    }
                    
                    AtualizarUI_DbgContasAReceber(ClienteCodigo,"","");
                    AtualizarUI_Limite(ClienteCodigo);
                    AtualizarUI_TotalEmAberto();
                    lblTitulo.setText("CONTAS A RECEBER : [" + ClienteCodigo.toString() + "] - "+ClienteNome);
                    //lblCodigo.setText(ClienteCodigo.toString());
                    //lblNome.setText(ClienteNome);
                    
                }

            } catch (Exception ex) {
                LogDinnamus.Log(ex, true);
            }
    }
    private boolean IniciarGrid(){
        try {
            //TamanhoColunas(new int[]{60,450,0});
            dbgClientes.AumentaAlturaLinhas(1.2f);
            dbgClientes.DefinirFonte("Arial", Font.BOLD, 20);
            dbgClientes.setAjustaColunaAoPainel(true);
            dbgClientes.addClColunas("codigo", "Codigo",60 );
            dbgClientes.addClColunas("nome", "nome", 450);
            dbgClientes.getjTable().addKeyListener(
            new KeyListener() {            
            public void keyTyped(KeyEvent e) {}            
            public void keyPressed(KeyEvent e) {
                        if(e.getKeyCode()==KeyEvent.VK_ENTER){
                            SelecionarCliente();
                        
                        }
            }
            public void keyReleased(KeyEvent e) {}
        });
        dbgClientes.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                    AtualizarGridFinanceiro(0l,"");
            }
        });

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean AtualizarGrid( String cNomeCampo,String Textobusca){
        try {
             
            dbgClientes.setRsDados(Crediario.LocalizarCliente(cNomeCampo, Textobusca));
                            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
   
    private void LocalizarCliente(){
         try {
            if(txtBusca.getText().length()>0){
                String cNomeCampo = cbOpcao.getSelectedItem().toString();
                //boolean bAcrescentaAspa =!
                if(cNomeCampo.equalsIgnoreCase("codigo")){
                    Float nValor=FormatarNumero.FormatarNumero(txtBusca.getText());
                    if(nValor.equals(Float.NaN)){
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Conteúdo do campo inválido", "Localizar Cliente", "AVISO");
                        txtBusca.setText("");
                        txtBusca.requestFocus();
                        return;
                    }
                }

                AtualizarGrid(cNomeCampo, txtBusca.getText());
                
                Integer nTotalRegistros=dbgClientes.getjTable().getRowCount();
                
                if(nTotalRegistros>0){
                   dbgClientes.getjTable().requestFocus();
                   dbgClientes.getRsDados().first();
                   dbgClientes.getjTable().setRowSelectionInterval(0, 0);
                }else{
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Informação não localizada", "Localizar Cliente", "AVISO");
                    txtBusca.requestFocus();
                }
            }
        } catch (Exception e) {
                LogDinnamus.Log(e);
        }

    }
    private boolean DefinirCliente(){
        boolean Ret = false;
        try {
            Long CodigoCiente  = getCodigoClienteAtual();
            if(CodigoCiente>0){            
                  ClienteSelecionado = CodigoCiente;
                  ClienteSelecionadoNome = getNomeClienteAtual();
                  Ret=true;
            }            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
                  
    }
    private void SelecionarCliente(){
          try {
           
            if(!btSelecionar.isEnabled()) { return;}
            if(!btSelecionar.isVisible()) { return;}
            
            Long nCodigoCliente = getCodigoClienteAtual();          
            //int Linha = dbgClientes.getjTable().getSelectedRow();
            if (nCodigoCliente.longValue()>0l) {
                
                  //nCodigoCliente =   dbgClientes.getTbDinnamuS().getValorCelulaLong("codigo",Linha);//Integer.valueOf( objLinhaSelecionada[0].toString());
                  String msgBloq = Crediario.MensagemBloqueio(nCodigoCliente, Sistema.getLojaAtual());   
                  if (msgBloq.length()>0) {
                      MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "CLIENTE BLOQUEADO\nMOTIVO : " + msgBloq, "Cadastro de Cliente", "AVISO");    
                      nCodigoCliente=0l;
                      return ;
                  }                  
                  String SenhaAtual = TratamentoNulos.getTratarString().Tratar(CarregarSenhaUsuario(nCodigoCliente,Sistema.getLojaAtual()),"");
                  if(SenhaAtual.trim().length()>0){
                      String cSenhaDigitada =TratamentoNulos.getTratarString().Tratar(MetodosUI_Auxiliares_1.JanelaPegaSenha("Cadastro do Cliente - Senha de Autorização", "Digite a Senha"),"");                                          
                      if(!cSenhaDigitada.equalsIgnoreCase("") || cSenhaDigitada.equalsIgnoreCase("__senhavazia__")){
                        if (!cSenhaDigitada.equalsIgnoreCase(SenhaAtual)) {
                            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Senha Digitada incorreta.", "Cadastro de Cliente", "AVISO");    
                            return;                      
                        }else{
                            if(cSenhaDigitada.length()==0){
                                return;
                            }
                        }                                       
                      }else{
                         return;
                      }
                  }
                  DefinirCliente();
                   this.setVisible(false);
            }
            
           
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
    }
    private void btSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarActionPerformed
        // TODO add your handling code here:
       LocalizarCliente();

    }//GEN-LAST:event_btSelecionarActionPerformed
public Long getCodigoClienteAtual(){
    Long Codigo =0l;
    try {
        int Linha = dbgClientes.getjTable().getSelectedRow();
        if(Linha>=0){
            Codigo = dbgClientes.getTbDinnamuS().getValorCelulaLong("codigo",Linha);
        }
    } catch (Exception e) {
        LogDinnamus.Log(e, true);
    }
    return Codigo;
}
public String getNomeClienteAtual(){
    String Nome ="";
    try {
        int Linha = dbgClientes.getjTable().getSelectedRow();
        if(Linha>=0){
            Nome = dbgClientes.getTbDinnamuS().getValorCelulaString("nome",Linha);
        }
    } catch (Exception e) {
        LogDinnamus.Log(e, true);
    }
    return Nome;
}
private void btGravarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarSenhaActionPerformed
// TODO add your handling code here:
    
    try {
           if(!btGravarSenha.isEnabled()) { return;}
           
            if(!Sistema.isOnline()){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Função não permitida no modo off-line", "Cadastro de Senha", "AVISO");                 
                return;
            }
            
            Long CodigoCliente = getCodigoClienteAtual();
            if(CodigoCliente==0l){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "É Necessario um cliente selecionado para realizar esta operação", "Cadastro de Senha", "AVISO");                 
            }else{
                String Senha = MetodosUI_Auxiliares_1.JanelaPegaSenha("Senha de Autorização de Venda", "Digite a Senha do Cliente");
                if(Senha.trim().length()==0){
                    return;
                }
                String Confirmacao = MetodosUI_Auxiliares_1.JanelaPegaSenha("Senha de Autorização de Venda", "Confirma a Senha do Cliente");
                if(Senha.equalsIgnoreCase(Confirmacao) && Senha.length()>0){        
                    if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(null, "Confima a senha do cliente ?", "Senha do Cliente",  JOptionPane.YES_NO_OPTION,  JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION){

                        Integer nCodigoUsuario =ValidarAcessoAoProcesso.Verificar(null , UsuarioSistema.getIdUsuarioLogado(), "FID.CADASTRO", Sistema.getLojaAtual(), true, "Cadastro de Senha");    // TODO add your handling code here:    
                        if (nCodigoUsuario>0) {
                             if(GravarSenha(CodigoCliente, Senha)){
                               MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Senha Cadastrada com sucesso", "Cadastro de Senha", "INFO");     
                               //CarregarDadosUsuario(CodigoCliente);
                             }else{
                                 MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível gravar a senha", "Cadastro de Senha", "AVISO");    
                             }                        
                        }else{
                            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Acesso negado a função solicitada", "Cadastro de Senha", "AVISO");    
                        }
                    }
                }else{
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Informe uma senha Válida", "Cadastro de Senha", "AVISO");    
                }   
            }
    } catch (Exception e) {
        LogDinnamus.Log(e);
    }
 

}//GEN-LAST:event_btGravarSenhaActionPerformed

    private void btFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar1ActionPerformed
        // TODO add your handling code here:
        if(ModoRecebimento){
            if(QT_Selecionadas()==0){
                ParametrosGlobais.setBaixarConta(null);
            }            
        }
        ClienteSelecionado = 0l;
        ClienteSelecionadoNome = "";
        this.dispose();
    }//GEN-LAST:event_btFechar1ActionPerformed

    private void txtBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyPressed
            // TODO add your handling code here:
        if(evt.getKeyChar()=='\n'){
            LocalizarCliente();
        }
       
    }//GEN-LAST:event_txtBuscaKeyPressed
    private void Iniciar_Terminar_Financeiro(boolean Status, Long ClienteCodigo,String ClienteNome){
        
        try {
            if(Status){
                if(!Sistema.isOnline()){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O financeiro não está disponível", "SISTEMA OFF-LINE");
                    return;                    
                }
            }            
            dbgClientes.setVisible(!Status);
            PainelTopo1.setVisible(!Status);
            //lblTitulo.setText("CONTAS A RECEBER");
            //PainelTitulo.setVisible(!Status);
            
            PainelBaixa.setVisible(!Status);
            Exibir_Ocultar_PrevisaoPagto(false,0d);
            MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PaineTopo, dbgClientes.isVisible());
            PainelDuplicatas.setVisible(Status);
            
            if(Status){
                AtualizarGridFinanceiro(ClienteCodigo,ClienteNome);
                AtualizarPainelValoresDuplicatas();
                AtualizarPainelDuplicatasSelecionadas();
                dbgContasEmAberto.getjTable().requestFocus();
                tplDuplicatas.setSelectedIndex(0);
            }else{
                AtualizarGridFinanceiro(-1l, "");
                txtBusca.requestFocus();
                lblTitulo.setText("PESQUISA DE CLIENTES");
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }
    private void btFinanceiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinanceiroActionPerformed
        // TODO add your handling code here:
        //PainelDuplicatas.setVisible(btFinanceiro.isSelected());
        
        if(DefinirCliente()){
            Iniciar_Terminar_Financeiro(true,0l,"");
        }else{
            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Está função necessita de um cliente selecionado", "NENHUM CLIENTE SELECIONADO");
        }
        
    }//GEN-LAST:event_btFinanceiroActionPerformed

    private void btSelecionarDuplicataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSelecionarDuplicataActionPerformed
        // TODO add your handling code here:
        
        try {
            dbgContasEmAberto.getjTable().requestFocus();
            MarcarDuplicata(true);
        } catch (Exception ex) {
           LogDinnamus.Log(ex, true);
        }
    }//GEN-LAST:event_btSelecionarDuplicataActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if(!IniciouOK){ this.dispose();}
        IniciarGrid();
        IniciarUI_DbgContasAReceber();
        IniciarGrid_canceladas();
        IniciarGrid_Pagas();
        IniciarUI_dbgFormaPagto();
        
        if(ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo().size()>0){
            ClienteSelecionado = ParametrosGlobais.getBaixarConta().getDuplicatas_ClienteCodigo();
            ClienteSelecionadoNome = ParametrosGlobais.getBaixarConta().getDuplicatas_ClienteNome();                    
            //lblCodigo.setText(ClienteSelecionado.toString());
            //lblNome.setText(ClienteSelecionadoNome);            
            Iniciar_Terminar_Financeiro(true,ClienteSelecionado,ClienteSelecionadoNome);            
            MarcarContasJaSelecionadas(ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo());
            IniciarPagtoDuplicata(true);
            ModoRecebimento=true;
        }else{        
            PainelDuplicatas.setVisible(false); 
            ModoRecebimento=false;
        }
    }//GEN-LAST:event_formWindowOpened

    private void btBaixarDuplicataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBaixarDuplicataActionPerformed
        // TODO add your handling code here:
        IniciarPagtoDuplicata(false);
    }//GEN-LAST:event_btBaixarDuplicataActionPerformed
    private void PreparaInterface_Pagto(boolean Status){
        
        try {
        
            PainelBaixa.setVisible(Status);    
            PainelResumoValores.setVisible(!Status);
            MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelBotoes, !Status);
            MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelBotoesInferior, !Status);
            tplDuplicatas.setEnabled(!Status);
            dbgContasEmAberto.getjTable().setEnabled(!Status);
            
            if(!ModoRecebimento){
                if(!Status){
                    this.ValorDescontoAutorizado =0d;
                    this.CodigoUsuarioAutorizouDesconto=0;
                }
            }
            /*PainelLimite.setVisible(!Status);
            PainelTotaisDuplicatas.setVisible(!Status);
            PainelDuplicatasSelecionado.setVisible(!Status);*/
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }
    private void Exibir_Ocultar_PrevisaoPagto(boolean status, Double Restante){
        Exibir_Ocultar_PrevisaoPagto(status, Restante,true);
    }
    private void Exibir_Ocultar_PrevisaoPagto(boolean status, Double Restante, boolean SelecionarValorRestante){
        
        try {        
            if(status){            
                lblTituloPainelBaixa.setText("PAGTO PARCIAL");                
                txtValorRestante.setVisible(true);
                lblTituloRestante.setVisible(true);
            }else{            
                lblTituloPainelBaixa.setText("PAGAMENTO");
                txtValorRestante.setVisible(false);
                lblTituloRestante.setVisible(false);
            }
            if(SelecionarValorRestante){
                txtValorRestante.setValue(Restante);
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }
    private void AtualizarPainelRecebimento(){
       
        try {
            HashMap<String, Double> Total_Selecionadas = Total_Selecionadas();
            txtValorPrincipalReceber.setValue( NumeroArredondar.Arredondar_Double(Total_Selecionadas.get("ValorComJuros"),2));
            //txtJurosReceber.setValue(NumeroArredondar.Arredondar_Double(Total_Selecionadas.get("ValorJuros"),2));
            txtTotalDivida.setValue(NumeroArredondar.Arredondar_Double(Total_Selecionadas.get("ValorComJuros"),2));
            //if(ModoRecebimento){                
            //    txtValorAReceber.setValue(NumeroArredondar.Arredondar_Double(ParametrosGlobais.getBaixarConta().getDuplicatas_A_Receber(),2));                
            //}else{
                txtValorAReceber.setValue(NumeroArredondar.Arredondar_Double(Total_Selecionadas.get("ValorComJuros"),2));
            //}            
            txtQTPagto.setText(QT_Selecionadas().toString());            
            //Double Desconto = 
            txtDescontoReceber.setValue(0d);
            
            this.ValorJurosAutorizado =NumeroArredondar.Arredondar_Double(Total_Selecionadas.get("ValorJuros"),2);
            
            if(txtValorRestante.isVisible()){
                Double ValorRestante = NumeroArredondar.Arredondar_Double(getValorDivida() - getValorAReceber(),2);
                txtValorRestante.setValue(ValorRestante);
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
      
    }
    private boolean CarregarDadosBaixaEmAndamento(){
        boolean Ret = false;
        try {
            txtQTPagto.setText(ParametrosGlobais.getBaixarConta().getDuplicatas_qt().toString());
            txtValorPrincipalReceber.setValue(ParametrosGlobais.getBaixarConta().getDuplicatas_Total());            
            txtJurosReceber.setValue(ParametrosGlobais.getBaixarConta().getDuplicatas_ValorJurosDefinido());
            txtDescontoReceber.setValue(ParametrosGlobais.getBaixarConta().getDuplicatas_ValorDesconto());
            txtTotalDivida.setValue(ParametrosGlobais.getBaixarConta().getDuplicatas_Divida());            
            txtValorAReceber.setValue(ParametrosGlobais.getBaixarConta().getDuplicatas_A_Receber());
            this.CodigoUsuarioAutorizouJuros=ParametrosGlobais.getBaixarConta().getDuplicatas_UsuarioAlterouJuros();
            this.CodigoUsuarioAutorizouDesconto=ParametrosGlobais.getBaixarConta().getDuplicatas_UsuarioLiberouDesconto();
            this.ValorJurosAutorizado =ParametrosGlobais.getBaixarConta().getDuplicatas_JurosAutorizado();
            this.ValorDescontoAutorizado =ParametrosGlobais.getBaixarConta().getDuplicatas_DescontoAutorizado();
            if(ParametrosGlobais.getBaixarConta().getDuplicatas_ValorRestante()>0){
                Exibir_Ocultar_PrevisaoPagto(true, ParametrosGlobais.getBaixarConta().getDuplicatas_ValorRestante());
            }else{
                Exibir_Ocultar_PrevisaoPagto(false, 0d);
            }
            Ret=true;
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean IniciarPagtoDuplicata(boolean CargaInicial){
        boolean Ret = false;
        try {
            if(ModoVenda){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Existe uma venda em andamento. A baixa não está disponível", "BAIXA NÃO DISPONÍVEL : VENDA EM ANDAMENTO");
                return false;                
            }
            ArrayList<Long> Duplicatas_Selecionadas = Duplicatas_Selecionadas();
            if(Duplicatas_Selecionadas.size()>0){                
                Exibir_Ocultar_PrevisaoPagto(false,0d);
                PreparaInterface_Pagto(true);
                if(ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo().size()>0 && ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo().size() ==  Duplicatas_Selecionadas.size()){
                   CarregarDadosBaixaEmAndamento();                   
                }else{
                    AtualizarPainelRecebimento();
                }
                SelecionarValorAReceber();
            }else{
                if(!ModoRecebimento){                    
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("É necessário selecionar alguma duplicata para iniciar o procedimeto de baixa", "NENHUM DUPLICATA SELECIONADA");
                }else{
                    btFechar1ActionPerformed(null);
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void btCancelarDuplicataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarDuplicataActionPerformed
        // TODO add your handling code here:
        CancelarDuplicata();
    }//GEN-LAST:event_btCancelarDuplicataActionPerformed
    private void Aba1_AtualizarUI(){
            
        try {
            AtualizarGridFinanceiro(0l,"");
            AtualizarPainelDuplicatasSelecionadas();
            AtualizarPainelValoresDuplicatas();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }
    private void Aba2_AtualizarUI(){
            Grid_canceladas_Atualizar();
    }
    private void Aba3_AtualizarUI(){
            Grid_Pagas_Atualizar();
    }
    private boolean CancelarDuplicata(){
        boolean Ret = false;
        try {
             if(PainelBaixa.isVisible()) { return false;}
            
            int Linha =dbgContasEmAberto.getjTable().getSelectedRow();
            if(Linha>=0){
                if(ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo().size()>0){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não é possivel realizar o cancelamento em modo recebimento", "SISTEMA EM MODO DE RECEBIMENTO");
                    return false;
                }
                if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma o CANCELAMENTO DA CONTA ?", "CANCELAR CONTA")==MetodosUI_Auxiliares_1.Sim()){
                   Long Codigo = dbgContasEmAberto.getTbDinnamuS().getValorCelulaLong("codigo",Linha);
                   int nCodigoUsuario=0;
                   
                   nCodigoUsuario =ValidarAcessoAoProcesso.Verificar( null , UsuarioSistema.getIdUsuarioLogado(), "CancelarDupl", Sistema.getLojaAtual(), true,"CANCELAR DUPLICATA DE CLIENTE");
                   
                   if(nCodigoUsuario==0){
                      MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "OPERADOR NÃO AUTORIZADO A CANCELAR DUPLICATA", "NÃO AUTORIZADO");
                      return false;                                          
                   }                  
                    
                    String Situacao =dbgContasEmAberto.getTbDinnamuS().getValorCelulaString("detalhe",Linha);
                    String Status ="";
                    if(Situacao.equalsIgnoreCase("Pendente")){
                       Status="C";
                    }else{
                       Status="K";
                    }
                    
                    if(Crediario.CancelarDuplicata(Codigo, Status, UsuarioSistema.getIdUsuarioLogado(), pdvgerenciar.CodigoPDV())){
                        Aba1_AtualizarUI();                        
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("CONTA CANCELADA COM SUCESSO", "CANCELAMENTO OK");
                    }else{
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("NÃO FOI POSSÍVEL CANCELAR A CONTA", "CANCELAMENTO NÃO REALIZADO");
                    }
                }                
                
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void btEncerrarDuplicataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEncerrarDuplicataActionPerformed
        // TODO add your handling code here:
        Teclas("ESCAPE");
    }//GEN-LAST:event_btEncerrarDuplicataActionPerformed

    private void btDesfazarCancelamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesfazarCancelamentoActionPerformed
        // TODO add your handling code here:
        DesfazerCancelamento();
        
    }//GEN-LAST:event_btDesfazarCancelamentoActionPerformed

    private void btPendentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPendentesActionPerformed
        // TODO add your handling code here:
        Contas_Exibir_Pendentes();
    }//GEN-LAST:event_btPendentesActionPerformed

    private void btAmortizadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAmortizadoActionPerformed
        // TODO add your handling code here:
        Contas_Exibir_Parcial();
    }//GEN-LAST:event_btAmortizadoActionPerformed

    private void btVencidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVencidasActionPerformed
        // TODO add your handling code here:
        Contas_Exibir_Vencidas();
    }//GEN-LAST:event_btVencidasActionPerformed

    private void btAvencerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAvencerActionPerformed
        // TODO add your handling code here:
        Contas_ExibirAvencer();
    }//GEN-LAST:event_btAvencerActionPerformed
    private boolean Contas_ExibirAvencer(){
        boolean Ret = false;
        try {
             if(PainelBaixa.isVisible()) { return false;}
            if(ModoRecebimento){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("RECURSO NÃO DISPONÍVEL COM BAIXA EM ANDAMENTO", "BAIXA EM ANDAMENTO");
            }else{
                if(PainelBaixa.isVisible()) { return false;}
                Long CodigoClienteAtual  = getCodigoClienteAtual();
                if(CodigoClienteAtual>0){
                    AtualizarUI_DbgContasAReceber(CodigoClienteAtual, "", "AVENCER");
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean Contas_Exibir_Vencidas(){
        boolean Ret = false;
        try {
             if(PainelBaixa.isVisible()) { return false;}
            
            if(ModoRecebimento){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("RECURSO NÃO DISPONÍVEL COM BAIXA EM ANDAMENTO", "BAIXA EM ANDAMENTO");
            }else{
                Long CodigoClienteAtual  = getCodigoClienteAtual();
                if(CodigoClienteAtual>0){
                    AtualizarUI_DbgContasAReceber(CodigoClienteAtual, "", "VENCIDA");
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
     private boolean Contas_Exibir_Pendentes(){
        boolean Ret = false;
        try {
             if(PainelBaixa.isVisible()) { return false;}
            if(ModoRecebimento){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("RECURSO NÃO DISPONÍVEL COM BAIXA EM ANDAMENTO", "BAIXA EM ANDAMENTO");
            }else{
                Long CodigoClienteAtual  = getCodigoClienteAtual();
                if(CodigoClienteAtual>0){
                    AtualizarUI_DbgContasAReceber(CodigoClienteAtual, "N", "");
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
       private boolean Contas_Exibir_Parcial(){
        boolean Ret = false;
        try {
             if(PainelBaixa.isVisible()) { return false;}
            if(ModoRecebimento){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("RECURSO NÃO DISPONÍVEL COM BAIXA EM ANDAMENTO", "BAIXA EM ANDAMENTO");
            }else{
                Long CodigoClienteAtual  = getCodigoClienteAtual();
                if(CodigoClienteAtual>0){
                    AtualizarUI_DbgContasAReceber(CodigoClienteAtual, "A", "");
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    
    private void btReceberPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReceberPagamentoActionPerformed
        // TODO add your handling code here:  
        int nCodigoUsuario = ValidarAcessoAoProcesso.Verificar(null, UsuarioSistema.getIdUsuarioLogado(), "PDV_REC", Sistema.getLojaAtual(), true, "REALIZAR RECEBIMENTO");

        if (nCodigoUsuario == 0) {
            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "OPERADOR NÃO AUTORIZADO REALIZAR RECEBIMENTO", "NÃO AUTORIZADO");
            return;
        }
        if (ProcessarEntradaDeDesconto()) {
            if (ValidarPedidoDeRecebimento()) {
                BaixarValores();
            }
        }
    }//GEN-LAST:event_btReceberPagamentoActionPerformed

    private void txtValorAReceberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorAReceberKeyPressed
        // TODO add your handling code here:{
        
        try {
            if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
                //txtValorAReceber.commitEdit();
                //if (ValidarPedidoDeRecebimento()) {
                    btReceberPagamento.requestFocus();
                //}
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }

        
    }//GEN-LAST:event_txtValorAReceberKeyPressed

    private void txtValorRestanteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorRestanteKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorRestanteKeyPressed

    private void txtJurosReceberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJurosReceberKeyPressed

        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(ProcessarEntradaDeJuros()){
               SelecionarValorAReceber();
            }
        }
    }//GEN-LAST:event_txtJurosReceberKeyPressed

    private void txtValorPrincipalReceberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorPrincipalReceberKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorPrincipalReceberKeyPressed

    private void txtValorPrincipalReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorPrincipalReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorPrincipalReceberActionPerformed

    private void btLimparJurosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparJurosActionPerformed
        // TODO add your handling code here:
        SelecionarJuros();
       
    }//GEN-LAST:event_btLimparJurosActionPerformed
    private boolean ProcessarEntradaDeJuros(){
        boolean Ret = false;
        try {            
            if(ValidarJuros(true)){    
                if(this.ValorJurosAutorizado != ValorJuros_Receber().doubleValue()){
                    int CodigoUsuario =ValidarPermissaoAlterarJuros();
                    if(CodigoUsuario!=0){                    
                       ValorDivida_AtualizarCampo(true);  
                       if(CodigoUsuario>0){
                           this.CodigoUsuarioAutorizouJuros=CodigoUsuario;
                           this.ValorJurosAutorizado = ValorJuros_Receber();
                       }
                       Ret=true;
                    }
                }else{
                    Ret=true;
                }
            }
                    
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean ProcessarEntradaDeDesconto(){
        boolean Ret = false;
        try {            
            if(ValidarDesconto()){    
                if(this.ValorDescontoAutorizado != ValorDesconto_Receber().doubleValue()){
                    int CodigoUsuario =ValidarPermissaoAlterarDesconto();
                    if(CodigoUsuario!=0){                    
                       ValorDivida_AtualizarCampo(true);  
                       if(CodigoUsuario>0){
                           this.CodigoUsuarioAutorizouDesconto=CodigoUsuario;
                           this.ValorDescontoAutorizado = ValorDesconto_Receber();
                       }
                       Ret=true;
                    }
                }else{
                    Ret=true;
                }
            }
                    
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void txtDescontoReceberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescontoReceberKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
           if(ProcessarEntradaDeDesconto()){
               SelecionarValorAReceber();
            }
        }
    }//GEN-LAST:event_txtDescontoReceberKeyPressed

    private void btDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDescontoActionPerformed
        // TODO add your handling code here:3
        SelecionarDesconto();
    }//GEN-LAST:event_btDescontoActionPerformed

    private void txtJurosReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJurosReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJurosReceberActionPerformed

    private void txtDescontoReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescontoReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescontoReceberActionPerformed

    private void txtTotalDividaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTotalDividaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalDividaKeyPressed

    private void txtValorAReceberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorAReceberFocusLost
        // TODO add your handling code here:
        AtualizarValorRecebimento(); 
    }//GEN-LAST:event_txtValorAReceberFocusLost

    private void txtValorAReceberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorAReceberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorAReceberActionPerformed

    private void btDesfazarCancelamento1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesfazarCancelamento1ActionPerformed
        // TODO add your handling code here:
        CancelarPagamento();
    }//GEN-LAST:event_btDesfazarCancelamento1ActionPerformed

    private void txtValorAReceberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorAReceberFocusGained
        // TODO add your handling code here:
        SwingUtilidade.SelectAll(txtValorAReceber);
    }//GEN-LAST:event_txtValorAReceberFocusGained

    private void txtDescontoReceberFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoReceberFocusGained
        // TODO add your handling code here:
          SwingUtilidade.SelectAll(txtDescontoReceber);
    }//GEN-LAST:event_txtDescontoReceberFocusGained

    private void txtDescontoReceberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoReceberFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescontoReceberFocusLost

    private void txtBuscaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscaActionPerformed

    private void btReimprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReimprimirActionPerformed
        // TODO add your handling code here:
        reimprimirComprovante();
        

    }//GEN-LAST:event_btReimprimirActionPerformed

    private void btImprimirExtratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirExtratoActionPerformed
        // TODO add your handling code here:
        try {
             if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma a impressão do extrato?", "Imprimir Extrato")==MetodosUI_Auxiliares_1.Sim()){
           
                PDVComprovante.CrediarioExtrato(ClienteSelecionado, Sistema.getLojaAtual(), Pagto_nCodigoObjetoCaixa, Pagto_ImpressoraComprovantes);
            
             }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
        
    }//GEN-LAST:event_btImprimirExtratoActionPerformed
    private void reimprimirComprovante(){
            
        try {
            
            int l = dbgPagas.getjTable().getSelectedRow();
            if(l>=0){                
                if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma a reimpressão do comprovante?", "Reimprimir Comprovante")==MetodosUI_Auxiliares_1.Sim()){
                    String IdRecebimento  = TratamentoNulos.getTratarString().Tratar(dbgPagas.getTbDinnamuS().getValorCelulaString("idrecebimento",l),"");                
                    if(!IdRecebimento.isEmpty()){
                       reimprimirBaixaCrediario(new Long(IdRecebimento));                
                    }
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
     
    }
    private Dadosorc SetarValoresDadosOrc(Long CodigoVenda ){
   
    Dadosorc ret = new Dadosorc();
    try {
        //ResultSet rs = GerenciarCaixa.ListarCaixas(Sistema.getLojaAtual(), UsuarioSistema.getIdUsuarioLogadoCaixa(), 0);
        //if(rs.next()){
            ResultSet Dadosorc_Listar = DadosorcRN.Dadosorc_Listar(CodigoVenda);
            if(Dadosorc_Listar.next()){
                ret.setCodigo(Dadosorc_Listar.getLong("codigo"));
                ret.setCodigocotacao(TratamentoNulos.getTratarLong().Tratar(Dadosorc_Listar.getLong("codigocotacao"),0l));
                ret.setCodigoorcamento(TratamentoNulos.getTratarLong().Tratar(Dadosorc_Listar.getLong("codigoorcamento"),0l));                
                
                ret.setControleCx(Dadosorc_Listar.getString("controlecx"));
                ret.setCodcaixa(Dadosorc_Listar.getInt("codcaixa"));
                ret.setObjetoCaixa(Dadosorc_Listar.getInt("objetocaixa"));
                ret.setValor(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("valor"),BigDecimal.ZERO));
                ret.setCodcliente(Dadosorc_Listar.getString("codcliente"));
                ret.setCliente(Dadosorc_Listar.getString("cliente"));
                
                ret.setDesconto(TratamentoNulos.getTratarDouble().Tratar( Dadosorc_Listar.getDouble("desconto"),0d));
                ret.setPercdesc(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("percdesc"), BigDecimal.ZERO));                
                ret.setAcrescimo(TratamentoNulos.getTratarDouble().Tratar( Dadosorc_Listar.getDouble("acrescimo"),0d) );           
                                
                ret.setLoja(Dadosorc_Listar.getInt("loja"));
                
                ret.setTotalbruto(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("totalbruto"),BigDecimal.ZERO));
                ret.setFilial(Dadosorc_Listar.getInt("filial"));
                ret.setVendaCondicional(false);                
                ret.setCoo(Dadosorc_Listar.getString("coo"));
                ret.setFracao(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("fracao"),BigDecimal.ZERO));
                
                ret.setDinheiro(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("dinheiro"),BigDecimal.ZERO));
                             
                ret.setTroco(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("troco"),BigDecimal.ZERO));
                

                //getDadosorc().setTroco(BigDecimal.valueOf(Float.parseFloat(txtTroco.getValue().toString())));
                ret.setPontuacaoatual(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("pontuacaoatual"),BigDecimal.ZERO));
                ret.setPontuacaoresgate(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("Pontuacaoresgate"),BigDecimal.ZERO));
                ret.setPontuacaovenda(TratamentoNulos.getTratarBigDecimal().Tratar( Dadosorc_Listar.getBigDecimal("Pontuacaovenda"),BigDecimal.ZERO));
                ret.setPdv(Dadosorc_Listar.getInt("pdv"));
                ret.setXml_recebimento(Dadosorc_Listar.getString("xml_recebimento"));
            }        

    } catch (Exception e) {
        LogDinnamus.Log(e);
        ret=null;
    }
    return ret;
}

    
    private boolean  reimprimirBaixaCrediario(Long CodigoRecebimento){
        boolean bRet = false;
        try {
                Dadosorc SetarValoresDadosOrc = SetarValoresDadosOrc(CodigoRecebimento);
                
                
                if(SetarValoresDadosOrc==null){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não foi possível finalizar carregar os dados do recebimento", "Reimpressão de Recebimento");                    
                return false;
                }
                
                
                if(SetarValoresDadosOrc.getXml_recebimento()==null){
                   MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO( "Esta baixa não pode ser reimpressa", "Reimpressão de Recebimento");                    
                   return false;
                    
                }
                BaixarConta b= (BaixarConta)XStream_Api.ConverterXmlParaObjeto(SetarValoresDadosOrc.getXml_recebimento());
                        
                bRet=PDVComprovante.FecharCupomRecebimento(SetarValoresDadosOrc,null,0,this.Pagto_TipoComprovante,Pagto_ecf,Pagto_ECFDisponivel,0l,false, b,Pagto_ImpressoraComprovantes);
                
                if(!bRet){
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO( "Não foi possível reimprimir o comprovante ", "Reimpressão de Recebimento");                    
                    return false;
                }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
       
        return true;
    
    }
    private boolean CancelarPagamento(){
        boolean Ret = false;
        try {
            
            int l = dbgPagas.getjTable().getSelectedRow();
            if(l>=0){
                
                String IdRecebimento  = TratamentoNulos.getTratarString().Tratar(dbgPagas.getTbDinnamuS().getValorCelulaString("idrecebimento",l),"");
                if(!IdRecebimento.equalsIgnoreCase("")){
                    Long IdRec = new Long(IdRecebimento);
                    if(Crediario.DesfazerPagamento_Validar(IdRec,Sistema.getLojaAtual(),pdvgerenciar.CodigoPDV())){
                        if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma o cancelamento do pagamento ?", "CANCELAR PAGAMENTO")==MetodosUI_Auxiliares_1.Sim()){
                            int nCodigoUsuario = 0;

                            nCodigoUsuario = ValidarAcessoAoProcesso.Verificar(null, UsuarioSistema.getIdUsuarioLogado(), "CancelarBxCred", Sistema.getLojaAtual(), true, "CANCELAR BAIXA DE CONTA");

                            if (nCodigoUsuario == 0) {
                                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "OPERADOR NÃO AUTORIZADO DESFAZER A BAIXA", "NÃO AUTORIZADO");
                                return false;
                            }

                            if(Crediario.DesfazerPagamento(IdRec,Sistema.getLojaAtual(),pdvgerenciar.CodigoPDV(),Sistema.CodigoDaFilial_LojaAtual() , nCodigoUsuario)){
                                Grid_Pagas_Atualizar();
                               MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Baixa de conta cancelada com sucesso", "CANCELAMENTO OK");
                            }else{
                               MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Não foi possível cancelar a Baixa", "FALHA CANCELAMENTO");
                            }
                        }
                    }
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void SelecionarJuros(){
        //boolean Ret = false;
        try {
            
              
              txtJurosReceber.requestFocus();
              txtJurosReceber.setEditable(true);
              SwingUtilidade.SelectAll(txtJurosReceber);
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        //return Ret;
    }
    private void SelecionarDesconto(){
        //boolean Ret = false;
        try {
            
              
              txtDescontoReceber.requestFocus();
              //txtDescontoReceber.selectAll();
              SwingUtilidade.SelectAll(txtDescontoReceber);
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        //return Ret;
    }
    private void SelecionarValorAReceber(){            
              txtValorAReceber.requestFocus();
              //txtValorAReceber.selectAll();
              
              
    }
    private Double Valor_Juros_Padrao(){
        Double Ret = 0d;
        try {
            if(ModoRecebimento){
                 Ret = ParametrosGlobais.getBaixarConta().getDuplicatas_ValorJurosDefinido();
            }else{
                Ret = Total_Selecionadas().get("ValorJuros");
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    } 
    private void ValorAReceber_AtualizarCampo(){
        try {
            txtValorAReceber.setValue(txtTotalDivida.getValue());
            
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
        }
    }
    
    private void ValorDivida_AtualizarCampo(boolean AtualizarValorArecebr){
        try {
            txtTotalDivida.setValue(ValorAReceber_Calcular());
            if(AtualizarValorArecebr){
                ValorAReceber_AtualizarCampo();
                 Double ValorRestante = getValorDivida() -getValorAReceber();                     
                 Exibir_Ocultar_PrevisaoPagto(ValorRestante.doubleValue()!=0 ? true : false,ValorRestante);
            }
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
        }
    }
    private Double ValorAReceber_Calcular(){
        Double ValorFinal =0d;
        try {
             ValorFinal =NumeroArredondar.Arredondar_Double(ValorPrincipal_Receber()-ValorDesconto_Receber(),2);
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
         return ValorFinal;
    }
    private boolean ValidarJuros(boolean AtualizarValorAReceber){
        boolean Ret = false;
        try {            
                Double JurosValor = ValorJuros_Receber();               
                if(JurosValor <0|| JurosValor>=99999d){
                    txtJurosReceber.setValue(Valor_Juros_Padrao());
                    ValorDivida_AtualizarCampo(AtualizarValorAReceber);                    
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O valor digitado é inválido [0-99999]", "VALOR DO JUROS INVÁLIDO");                                                      
                    SelecionarJuros();
                }else{
                    Ret=true;
                }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private Integer ValidarPermissaoAlterarJuros(){
        Integer Ret = -1;
        try {   
                Double JurosValor = ValorJuros_Receber();                              
                int nCodigoUsuario=0;                
                if(JurosValor.doubleValue() != Total_Selecionadas().get("ValorJuros").doubleValue()){                    
                    nCodigoUsuario =ValidarAcessoAoProcesso.Verificar( null , UsuarioSistema.getIdUsuarioLogado(), "EliminarJurosRecDocCli", Sistema.getLojaAtual(), true,"ALTERAR JUROS DUPLICATA DE CLIENTE");
                    if(nCodigoUsuario==0){
                        txtJurosReceber.setValue(Valor_Juros_Padrao());
                         MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("OPERADOR NÃO AUTORIZADO A REALIZAR MODIFICAÇÃO NO JUROS", "OPERADOR NÃO AUTORIZADO");                                                        
                         ValorDivida_AtualizarCampo(true);                    
                         SelecionarJuros();
                         
                    }
                }else{
                    nCodigoUsuario=UsuarioSistema.getIdUsuarioLogado();                        
                }
                Ret = nCodigoUsuario;
               
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private Integer ValidarPermissaoAlterarDesconto(){
        Integer Ret = -1;
        try {   
                double Desconto = ValorDesconto_Receber();                              
                int nCodigoUsuario=0;               
      
                if(Desconto>0d){                        
                    nCodigoUsuario =ValidarAcessoAoProcesso.Verificar( null , UsuarioSistema.getIdUsuarioLogado(), "LiberarDescontoCrediario", Sistema.getLojaAtual(), true,"ALTERAR DESCONTO DUPLICATA DE CLIENTE");
                    if(nCodigoUsuario==0){
                        txtDescontoReceber.setValue(0d);
                        ValorDivida_AtualizarCampo(true);      
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("OPERADOR NÃO AUTORIZADO A CONCEDER DESCONTO", "OPERADOR NÃO AUTORIZADO");                                                                              
                    }                    
                }else{
                    nCodigoUsuario=UsuarioSistema.getIdUsuarioLogado();
                }
                Ret = nCodigoUsuario;
               
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private Double ValorPrincipal_Receber(){
        Double Ret = 0d;
        try {                      
           if(txtValorPrincipalReceber.getValue()!=null){
              Ret = Double.valueOf(txtValorPrincipalReceber.getValue().toString());
           }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
     private Double ValorDesconto_Receber(){
        Double Ret = 0d;
        try {
            if(txtDescontoReceber.getValue()!=null){
               txtDescontoReceber.commitEdit();               
               Ret = NumeroArredondar.Arredondar_Double(Double.valueOf(txtDescontoReceber.getValue().toString()), 2);
           }           
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
     private Double ValorJuros_Receber(){
        Double Ret = 0d;
        try {
           txtJurosReceber.commitEdit();
           Double Juros=0d;
           if(txtJurosReceber.getValue()!=null){
             Juros = NumeroArredondar.Arredondar_Double(Double.valueOf(txtJurosReceber.getValue().toString()), 2);
           }
            
           Ret = Juros;
           
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
     
     
    private boolean ValidarDesconto(){
        boolean Ret = false;
        try {            
            Double ValorBase =ValorPrincipal_Receber() ;                
            Double Desconto = ValorDesconto_Receber();                
            if(Desconto <0|| Desconto>ValorBase ){
                txtDescontoReceber.setValue(0d);
                ValorDivida_AtualizarCampo(true);                    
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O valor digitado é inválido. Permitido [ 0 - "+ FormatarNumeros.FormatarParaMoeda(ValorBase) +"]", "VALOR DO DESCONTO INVÁLIDO");                                                                          
                Exibir_Ocultar_PrevisaoPagto(false, 0d);  
                SelecionarDesconto();
            }else{
                Ret=true;
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    } 
    private Integer EditarDesconto(boolean AtualizarValorAReceber,boolean SelecionarAreceber){
        Integer Ret = -1;
        try {                
                Double ValorBase =ValorPrincipal_Receber()+ValorJuros_Receber();                
                Double Desconto = ValorDesconto_Receber();                
                if(Desconto <0|| Desconto>ValorBase ){
                    txtDescontoReceber.setValue(0d);
                    ValorDivida_AtualizarCampo(AtualizarValorAReceber);                    
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O valor digitado é inválido. Permitido [ 0 - "+ FormatarNumeros.FormatarParaMoeda(ValorBase) +"]", "VALOR DO DESCONTO INVÁLIDO");                                                                          
                    SelecionarDesconto();
                }else{
                    int nCodigoUsuario=0;
                    if(Desconto.doubleValue()>0d){                        
                        nCodigoUsuario =ValidarAcessoAoProcesso.Verificar( null , UsuarioSistema.getIdUsuarioLogado(), "LiberarDescontoCrediario", Sistema.getLojaAtual(), true,"ALTERAR JUROS DUPLICATA DE CLIENTE");
                        if(nCodigoUsuario==0){
                            txtDescontoReceber.setValue(0d);
                            ValorDivida_AtualizarCampo(AtualizarValorAReceber);      
                            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("OPERADOR NÃO AUTORIZADO A CONCEDER DESCONTO", "OPERADOR NÃO AUTORIZADO");                                                          
                        }else{                       
                            ValorDivida_AtualizarCampo(AtualizarValorAReceber);             
                            if(AtualizarValorAReceber && SelecionarAreceber){
                                SelecionarValorAReceber();
                            }
                        }                    
                    }else{
                        nCodigoUsuario=UsuarioSistema.getIdUsuarioLogado();
                    }
                    Ret = nCodigoUsuario;
                }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    
    private boolean ValidarPedidoDeRecebimento(){
        boolean Ret = false;
        try {            
             
            if(!ProcessarEntradaDeDesconto()){
               return false;
            }
            
            Ret=true;
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;  
    }
     private boolean AtualizarValorRecebimento(){
        boolean Ret = false;
        try {            
            Double ValorDivida = ValorAReceber_Calcular();
            Double ValorAreceber =  getValorAReceber();
            if(ValorAreceber<=0d){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O valor a receber digitado inválido", "VALOR A RECEBER INVÁLIDO");
                txtValorAReceber.setValue(getValorDivida());
                Exibir_Ocultar_PrevisaoPagto(false, 0d);    
                SelecionarValorAReceber();
            }else if(ValorAreceber.doubleValue()>ValorDivida.doubleValue()){
                 MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O valor a receber digitado é superior ao valor da dívida do cliente", "VALOR A RECEBER INVÁLIDO");
                 txtValorAReceber.setValue(getValorDivida());
                 Exibir_Ocultar_PrevisaoPagto(false, 0d);    
                 SelecionarValorAReceber();
            }else{  
                Double ValorRestante = NumeroArredondar.Arredondar_Double(ValorDivida.doubleValue() -ValorAreceber.doubleValue(),2);                     
                if(ValorRestante.doubleValue()!=0){                                       
                    Exibir_Ocultar_PrevisaoPagto(true, ValorRestante);                
                }
                return true;
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;  
    }
    private Double getValorPrincipal(){
        Double Ret = 0d;
        try {
            if(txtValorPrincipalReceber.getValue()!=null){
                Ret =  Double.valueOf(txtValorPrincipalReceber.getValue().toString());
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return NumeroArredondar.Arredondar_Double(Ret,2);
    }
    private Double getValorAReceber(){
        Double Ret = 0d;
        try {
            txtValorAReceber.commitEdit();
            if(txtValorAReceber.getValue()!=null){
                Ret =  Double.valueOf(txtValorAReceber.getValue().toString());
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return NumeroArredondar.Arredondar_Double(Ret,2);
    }
    private Double getValorRestante(){
        Double Ret = 0d;
        try {
            if(txtValorRestante.getValue()!=null){
                //txtValorRestante.commitEdit();
                Ret =  Double.valueOf(txtValorRestante.getValue().toString());
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return NumeroArredondar.Arredondar_Double(Ret,2);
    }
    private Double getValorDivida(){
        Double Ret = 0d;
        try {
            if(txtTotalDivida.getValue()!=null){
                Ret =  Double.valueOf(txtTotalDivida.getValue().toString());
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return NumeroArredondar.Arredondar_Double(Ret,2);
    }
    private boolean BaixarValores(){
        boolean Ret = false;
        try {
            Double ValorPrincipal =getValorPrincipal();
            Double ValorAReceber =  getValorAReceber();
            Double ValorRestante = getValorRestante();
            Double ValorDesconto = ValorDesconto_Receber();
            Double ValorJuros = 0d;//ValorJuros_Receber();            
            Double ValorDivida = getValorDivida();
            Integer Qt = new Integer(txtQTPagto.getText());
            
            ParametrosGlobais.getBaixarConta().setDuplicatas_Divida(ValorDivida);
            ParametrosGlobais.getBaixarConta().setDuplicatas_Codigo(Duplicatas_Selecionadas());
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValoresIndividuais(Duplicatas_ValoresIndividuais());
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValoresIndividuais_Finais(Duplicatas_ValoresIndividuaisFinais());
            ParametrosGlobais.getBaixarConta().setDuplicatas_VencimentoIndividuais(Duplicatas_VencimentosIndividuais());
            ParametrosGlobais.getBaixarConta().setDuplicatas_JurosIndividuais(Duplicatas_JurosIndividuais());
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValoresRestante(Duplicatas_RestanteIndividuais());
            ParametrosGlobais.getBaixarConta().setDuplicatas_Total(ValorPrincipal);
            ParametrosGlobais.getBaixarConta().setDuplicatas_qt(Qt);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ClienteCodigo(ClienteSelecionado);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ClienteNome(ClienteSelecionadoNome);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValorRestante(ValorRestante);
            ParametrosGlobais.getBaixarConta().setDuplicatas_A_Receber(ValorAReceber);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValorDesconto(ValorDesconto);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValorJurosDefinido(ValorJuros);
            ParametrosGlobais.getBaixarConta().setDuplicatas_ValorJurosReal(NumeroArredondar.Arredondar_Double(Total_Selecionadas().get("ValorJuros"),2));
            ParametrosGlobais.getBaixarConta().setDuplicatas_UsuarioAlterouJuros(this.CodigoUsuarioAutorizouJuros);
            ParametrosGlobais.getBaixarConta().setDuplicatas_UsuarioLiberouDesconto(this.CodigoUsuarioAutorizouDesconto);
            ParametrosGlobais.getBaixarConta().setDuplicatas_DescontoAutorizado(this.ValorDescontoAutorizado);
            ParametrosGlobais.getBaixarConta().setDuplicatas_JurosAutorizado(this.ValorJurosAutorizado);
            //ParametrosGlobais.getBaixarConta().
           //XStr
            
            
            this.dispose();
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean DesfazerCancelamento(){
        boolean Ret = false;
        try {
            int Linha =dbgCanceladas.getjTable().getSelectedRow();
            if(Linha>=0){
                if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Deseja DESFAZER O CANCELAMENTO da conta?", "DESFAZER CANCELAMENTO")==MetodosUI_Auxiliares_1.Sim()){
                   Long Codigo = dbgCanceladas.getTbDinnamuS().getValorCelulaLong("codigo",Linha);
                   int nCodigoUsuario=0;
                   
                   nCodigoUsuario =ValidarAcessoAoProcesso.Verificar( null , UsuarioSistema.getIdUsuarioLogado(), "DezfazCancDupl", Sistema.getLojaAtual(), true,"DESFAZER CANCELAMENTO DUPLICATA DE CLIENTE");
                   
                   if(nCodigoUsuario==0){
                      MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "OPERADOR NÃO AUTORIZADO A DESFAZER O CANCELAMENTO DA DUPLICATA", "NÃO AUTORIZADO");
                      return false;                                          
                   }                                      
                   if(Crediario.DesfazerCancelarDuplicata(Codigo,  UsuarioSistema.getIdUsuarioLogado(), pdvgerenciar.CodigoPDV())){
                        Aba2_AtualizarUI();                        
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("CANCELAMENTO DESFEITO COM SUCESSO", "CANCELAMENTO DESFEITO");
                   }else{
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("NÃO FOI POSSÍVEL DESFAZER CANCELAMENTO DA CONTA", "OPERAÇÃO NÃO REALIZADA");
                   }
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PaineTopo;
    private javax.swing.JPanel PainelAberto;
    private javax.swing.JPanel PainelBaixa;
    private javax.swing.JPanel PainelBotoes;
    private javax.swing.JPanel PainelBotoesInferior;
    private javax.swing.JPanel PainelCanceladas;
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelDuplicatas;
    private javax.swing.JPanel PainelDuplicatasSelecionado;
    private javax.swing.JPanel PainelLegenda;
    private javax.swing.JPanel PainelLimite;
    private javax.swing.JPanel PainelListagem;
    private javax.swing.JPanel PainelPagas;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelResumoValores;
    private javax.swing.JPanel PainelTitulo;
    private javax.swing.JPanel PainelTopo1;
    private javax.swing.JPanel PainelTotaisDuplicatas;
    private javax.swing.JButton btAmortizado;
    private javax.swing.JButton btAvencer;
    private javax.swing.JButton btBaixarDuplicata;
    private javax.swing.JButton btCancelarDuplicata;
    private javax.swing.JButton btDesconto;
    private javax.swing.JButton btDesfazarCancelamento;
    private javax.swing.JButton btDesfazarCancelamento1;
    private javax.swing.JButton btEncerrarDuplicata;
    private javax.swing.JButton btFechar1;
    private javax.swing.JToggleButton btFinanceiro;
    private javax.swing.JButton btGravarSenha;
    private javax.swing.JButton btImprimirExtrato;
    private javax.swing.JButton btLimparJuros;
    private javax.swing.JButton btPendentes;
    private javax.swing.JButton btReceberPagamento;
    private javax.swing.JButton btReimprimir;
    private javax.swing.JButton btSelecionar;
    private javax.swing.JButton btSelecionarDuplicata;
    private javax.swing.JButton btVencidas;
    private javax.swing.JComboBox cbOpcao;
    private br.com.ui.JTableDinnamuS dbgCanceladas;
    private br.com.ui.JTableDinnamuS dbgClientes;
    private br.com.ui.JTableDinnamuS dbgContasEmAberto;
    private br.com.ui.JTableDinnamuS dbgFormaPagto;
    private br.com.ui.JTableDinnamuS dbgPagas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblN;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTituloPainelBaixa;
    private javax.swing.JLabel lblTituloRestante;
    private javax.swing.JPanel painelBotaoPagas;
    private javax.swing.JTabbedPane tplDuplicatas;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JFormattedTextField txtDescontoReceber;
    private javax.swing.JTextField txtDisponivel;
    private javax.swing.JFormattedTextField txtJurosReceber;
    private javax.swing.JTextField txtJurosSelecionada;
    private javax.swing.JTextField txtLimite;
    private javax.swing.JTextField txtQTAVencer;
    private javax.swing.JTextField txtQTEmAberto;
    private javax.swing.JTextField txtQTPagto;
    private javax.swing.JTextField txtQTSelecionada;
    private javax.swing.JTextField txtQTVencido;
    private javax.swing.JTextField txtTotalAVencer;
    private javax.swing.JFormattedTextField txtTotalDivida;
    private javax.swing.JTextField txtTotalEmAberto;
    private javax.swing.JTextField txtTotalJuros;
    private javax.swing.JTextField txtTotalVencido;
    private javax.swing.JFormattedTextField txtValorAReceber;
    private javax.swing.JFormattedTextField txtValorPrincipalReceber;
    private javax.swing.JFormattedTextField txtValorRestante;
    private javax.swing.JTextField txtValorSelecionado;
    private javax.swing.JTextField txtValorSelecionadoSemJuros;
    // End of variables declaration//GEN-END:variables

    
     
   
    /**
     * @param objLinha the objLinha to set
     */
   
    public boolean GravarSenha(Long nCodigoCliente, String cSenha){
        try {
            
            if(Dao_Generica.IniciarTrx(true, Sistema.isOnline())){
            
               if( Dao_Generica.ExecutarSQL("update clientes set senha='"+ cSenha +"' where codigo=" + nCodigoCliente,true,Sistema.isOnline() )){
                  return Dao_Generica.GravarTrx(true); 
               }else{
                   return Dao_Generica.DesfazerTrx(true);
               }
            }else{
                return false;
            
            }                     
            
            
        } catch (Exception e) {
                LogDinnamus.Log(e);
                return false;
        }
    
    }
    public String CarregarSenhaUsuario(Long nCodigoClienteAtual, int Loja){
         String cSenha="";
        try {
           
            ResultSet rsDadosCliente = Dao_Generica.Pesquisar("select senha from clientes where loja="+ Loja +" and codigo=" + nCodigoClienteAtual, Sistema.isOnline());
            if (rsDadosCliente.next()) {
                cSenha = rsDadosCliente.getString("senha");                
            }
           
            
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return  cSenha;
            
    }
 
     private boolean FocoNoPainelBaixa(){
         boolean Ret = false;
         try {
             Ret = PainelBaixa.isVisible() && 
                   txtValorAReceber.isFocusOwner() || 
                   btReceberPagamento.isFocusOwner()|| 
                   txtDescontoReceber.isFocusOwner()  || 
                   txtJurosReceber.isFocusOwner() || 
                   btLimparJuros.isFocusOwner() ||
                   btDesconto.isFocusOwner() ||
                   txtValorPrincipalReceber.isFocusOwner() ||
                   txtQTPagto.isFocusOwner() ||
                   txtTotalDivida.isFocusOwner() ;
                     
         } catch (Exception e) {
             LogDinnamus.Log(e, true);
         }
         return Ret;
     }
     private void Teclas(String Tecla){
         try {
             if(Tecla.equalsIgnoreCase("F3")){
                if(PainelDuplicatas.isVisible()) {return;}
                 btGravarSenhaActionPerformed(null);
             }else if(Tecla.equalsIgnoreCase("F4")){
                 
                 if(PainelDuplicatas.isVisible()) {return;}
                 
                 btFinanceiro.setSelected(!btFinanceiro.isSelected());
                 btFinanceiroActionPerformed(null);
             }else if(Tecla.equalsIgnoreCase("F5")){    
                 Contas_ExibirAvencer();
             }else if(Tecla.equalsIgnoreCase("F6")){                     
                 Contas_Exibir_Vencidas();                 
             }else if(Tecla.equalsIgnoreCase("F7")){                     
                 Contas_Exibir_Pendentes();                             
             }else if(Tecla.equalsIgnoreCase("F8")){                     
                 Contas_Exibir_Parcial();
             }else if(Tecla.equalsIgnoreCase("F9")){    
                btImprimirExtratoActionPerformed(null);
             }else if(Tecla.equalsIgnoreCase("F10")){         
                 SelecionarDesconto();
             }else if(Tecla.equalsIgnoreCase("ESCAPE")){
                    if(FocoNoPainelBaixa()){
                       PreparaInterface_Pagto(false);                       
                       dbgContasEmAberto.getjTable().requestFocus();
                    }else{
                        if (PainelDuplicatas.isVisible() ) {
                            if(ParametrosGlobais.getBaixarConta().getDuplicatas_Codigo().size()==0){
                                Iniciar_Terminar_Financeiro(false, 0l, "");
                            }else{
                                btFechar1ActionPerformed(null);                      
                            }                                  
                        } else {                            
                            btFechar1ActionPerformed(null);                      
                        }
                    }
             }
             
         } catch (Exception e) {
             LogDinnamus.Log(e, true);
         }
     }
     private boolean TeclasAtalhos_UI(){
        try {  
             AbstractAction TeclaAtalhos  = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                       String Fonte = e.getSource().toString();                
                       Teclas(Fonte);
                       //txtProcurar.requestFocus();
                }
            };            
             
            String Teclas[] ={"F3","F4","F5","F6","F7","F8","F9","F10","ESCAPE"};  
            DefinirAtalhos2.Definir(PainelPrincipal, Teclas, TeclaAtalhos);
            //DefinirAtalhos.Definir(PainelCorpo, TeclaAtalhos);
            return true;
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
           return false;
       }
   }
    
    public boolean IniciarUI_dbgFormaPagto(){
        boolean Ret = false;
        try {            
            dbgFormaPagto.getTbDinnamuS().setModeloUsandoColecao(true);            
            dbgFormaPagto.AumentaAlturaLinhas(1.2f);
            dbgFormaPagto.setColunaComTamanhosEmPercentual(true);
            dbgFormaPagto.DefinirFonte("Arial",Font.BOLD, 14);
            
            dbgFormaPagto.addClColunas("grupoforma", "Forma Pagto", 50);            
            dbgFormaPagto.addClColunas("parcelas", "Prc",20);            
            dbgFormaPagto.addClColunas("valor", "Valor", 30, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);            
            
            Ret = true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
        
    } 
    public boolean IniciarUI_DbgContasAReceber(){
        try {
            TreeMap<String, ImageIcon> imagens = new TreeMap<String, ImageIcon>();
            imagens.put("VENCIDA", new ImageIcon(getClass().getResource("/dinnamus/ui/img/clockred.png")));
            imagens.put("A_VENCER", new ImageIcon(getClass().getResource("/dinnamus/ui/img/Clock.png")));
            
            TreeMap<String, ImageIcon> imagensSituacao = new TreeMap<String, ImageIcon>();
            imagensSituacao.put("Pendente", new ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_r.png")));
            imagensSituacao.put("Amortizado", new ImageIcon(getClass().getResource("/dinnamus/ui/img/dollar_rg.png")));

            
            dbgContasEmAberto.getTbDinnamuS().setModeloUsandoColecao(true);
            dbgContasEmAberto.AumentaAlturaLinhas(1.2f);            
            dbgContasEmAberto.DefinirFonte("Arial",Font.BOLD, 14);               
            dbgContasEmAberto.setColunaComTamanhosEmPercentual(true);
            
            dbgContasEmAberto.addClColunas("selecionada", "Selecionar",5, true,true ,javax.swing.SwingConstants.CENTER,new JCheckBox(), "java.lang.Boolean");            
            //dbgContasEmAberto.addClColunas("codigo", "Codigo", 10);
            dbgContasEmAberto.addClColunas("titulo", "Titulo", 10);
            dbgContasEmAberto.addClColunas("digito", "Parc", 5);
            dbgContasEmAberto.addClColunas("emissao", "Emissão", 10,SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);            
            dbgContasEmAberto.addClColunas("vencimento", "Vencto", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Data);
            dbgContasEmAberto.addClColunas("atraso", "Atraso", 7, SwingConstants.RIGHT, null);
            dbgContasEmAberto.addClColunas("valorrestante", "Valor", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);            
            dbgContasEmAberto.addClColunas("valor_juros", "Juros", 8, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);            
            dbgContasEmAberto.addClColunas("valor_com_juros", "Vlr.Débito", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);                                    
            dbgContasEmAberto.addClColunas("valor_pago", "Pago", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);            
            dbgContasEmAberto.addClColunas("desconto", "Desconto", 10, SwingConstants.RIGHT, JTableDinnamuS.FormatoColuna.Numero);            
            dbgContasEmAberto.addClColunas("status_venc", "Status", 7,true,false, imagens,"" );         
            dbgContasEmAberto.addClColunas("detalhe", "Situacao", 7,true,false, imagensSituacao,"");      
            
            /*dbgContasEmAberto.addDateFormat("emissao");
            dbgContasEmAberto.addDateFormat("vencimento");            
            dbgContasEmAberto.addNumberFormatMoeda("valor");
            dbgContasEmAberto.addNumberFormatMoeda("valor_juros");
            dbgContasEmAberto.addNumberFormatMoeda("valor_com_juros");
            
            dbgContasEmAberto.addAlinhamentos("valor", SwingConstants.RIGHT);
            dbgContasEmAberto.addAlinhamentos("valor_com_juros", SwingConstants.RIGHT);
            dbgContasEmAberto.addAlinhamentos("valor_juros", SwingConstants.RIGHT);*/
            dbgContasEmAberto.AumentaAlturaLinhas(2f);
            dbgContasEmAberto.getjTable().addPropertyChangeListener("tableCellEditor",new PropertyChangeListener() {
                @Override
                public void propertyChange(PropertyChangeEvent evt) {
                            if (!dbgContasEmAberto.getjTable().isEditing()){   
                                AtualizarPainelDuplicatasSelecionadas();
                                if (PainelBaixa.isVisible()) {
                                    AtualizarPainelRecebimento();
                                }
                            }
                }
            });
            dbgContasEmAberto.getjTable().addKeyListener( new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}
                @Override
                public void keyPressed(KeyEvent e) {
                        if(e.getKeyCode()==KeyEvent.VK_ENTER){
                            e.consume();
                            IniciarPagtoDuplicata(false);
                         }else if(e.getKeyCode()==KeyEvent.VK_SPACE){
                            MarcarDuplicata(false);
                         }else  if(e.getKeyCode()==KeyEvent.VK_DELETE){
                            CancelarDuplicata();   
                         }
                }
                @Override
                public void keyReleased(KeyEvent e) {}
                }
              ); 
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    public void AtualizarPainelValoresDuplicatas(){
        
        try {
            Double QTTotal = 0d;
            HashMap<String, Double> VlrDuplicatasPorSituacao = VlrDuplicatasPorSituacao();
            if(VlrDuplicatasPorSituacao.containsKey("A_VENCER_VLR")){
               QTTotal+=VlrDuplicatasPorSituacao.get("A_VENCER_QT");
               txtTotalAVencer.setText(FormatarNumeros.FormatarParaMoeda(VlrDuplicatasPorSituacao.get("A_VENCER_VLR")));
               txtQTAVencer.setText( String.valueOf(VlrDuplicatasPorSituacao.get("A_VENCER_QT").intValue()));
            }else{
                txtTotalAVencer.setText(FormatarNumeros.FormatarParaMoeda(0d));
                txtQTAVencer.setText("0");
            }
            if(VlrDuplicatasPorSituacao.containsKey("VENCIDA_VLR")){
               txtTotalVencido.setText(FormatarNumeros.FormatarParaMoeda(VlrDuplicatasPorSituacao.get("VENCIDA_VLR")));
               txtQTVencido.setText( String.valueOf(VlrDuplicatasPorSituacao.get("VENCIDA_QT").intValue()));
               QTTotal+=VlrDuplicatasPorSituacao.get("VENCIDA_QT");
            }else{
                txtTotalVencido.setText(FormatarNumeros.FormatarParaMoeda(0d));
                txtQTVencido.setText("0");
            }
            
            if(VlrDuplicatasPorSituacao.containsKey("JUROS")){
                txtTotalJuros.setText(FormatarNumeros.FormatarParaMoeda(VlrDuplicatasPorSituacao.get("JUROS")));
            }else{
                txtTotalJuros.setText(FormatarNumeros.FormatarParaMoeda(0d));
            }
            txtQTEmAberto.setText( String.valueOf(QTTotal.intValue()));
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
         
    }
    public void AtualizarPainelDuplicatasSelecionadas(){
        
        try {
              HashMap<String, Double> Total_Selecionadas = Total_Selecionadas();
              if(Total_Selecionadas.size()>0){
                txtValorSelecionado.setText(FormatarNumeros.FormatarParaMoeda(Total_Selecionadas.get("ValorComJuros")));
                txtValorSelecionadoSemJuros.setText(FormatarNumeros.FormatarParaMoeda(Total_Selecionadas.get("ValorSemJuros")));
                txtJurosSelecionada.setText(FormatarNumeros.FormatarParaMoeda(Total_Selecionadas.get("ValorJuros")));
                txtQTSelecionada.setText( QT_Selecionadas().toString());
                 
              }else{
                txtValorSelecionado.setText(FormatarNumeros.FormatarParaMoeda(0d));
                txtValorSelecionadoSemJuros.setText(FormatarNumeros.FormatarParaMoeda(0d));
                txtJurosSelecionada.setText(FormatarNumeros.FormatarParaMoeda(0d));
                txtQTSelecionada.setText("0");
              }              
              //Exibir_Ocultar_PrevisaoPagto(false, 0d,);
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }
    public void MarcarDuplicata(boolean MarcouViaBotao){
        
        try {
            int Linha = dbgContasEmAberto.getjTable().getSelectedRow();
            if (Linha >= 0) {         
                int Col = 0;
                if(MarcouViaBotao){               
               
                   dbgContasEmAberto.getjTable().setColumnSelectionInterval(1, 1);
                }
                 Col = dbgContasEmAberto.getjTable().getSelectedColumn() ;
                if ( Col <0 || Col > 0) {                    
                    Boolean ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(Linha, 0);
                    dbgContasEmAberto.getTbDinnamuS().setValueAt(!ValorColuna, Linha, 0);                                    
                }
                
               AtualizarPainelDuplicatasSelecionadas();
                if(PainelBaixa.isVisible()){
                   AtualizarPainelRecebimento();
               }                
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    } 
    public HashMap<String, Double> Total_Selecionadas(){
        HashMap<String, Double> Ret = new HashMap<String, Double>();
        //Double Ret = 0d;
        try {
            Boolean ValorColuna =false;
            Double ValorJuros=0d,ValorSemJuros=0d;

            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    ValorJuros =  NumeroArredondar.Arredondar_Double( TratamentoNulos.getTratarDouble().Tratar(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("Valor_juros", i),0d),2) ;
                    ValorSemJuros =NumeroArredondar.Arredondar_Double( TratamentoNulos.getTratarDouble().Tratar(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valorrestante", i),0d),2);
                    
                    if(!Ret.containsKey("ValorSemJuros")){
                       Ret.put("ValorSemJuros", ValorSemJuros);
                    }else{
                       Ret.put("ValorSemJuros", Ret.get("ValorSemJuros") + ValorSemJuros);
                    }                    
                    
                    if(!Ret.containsKey("ValorJuros")){
                       Ret.put("ValorJuros", ValorJuros);
                    }else{
                       Ret.put("ValorJuros", Ret.get("ValorJuros") + ValorJuros);
                    }
                    
                    if(!Ret.containsKey("ValorComJuros")){
                       Ret.put("ValorComJuros", ValorSemJuros+ValorJuros);
                    }else{
                       Ret.put("ValorComJuros", Ret.get("ValorComJuros") + ValorSemJuros+ValorJuros);
                    }
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return  Ret;
    }   
    public ArrayList<Long> Duplicatas_Selecionadas(){
        ArrayList<Long> Ret = new ArrayList<Long>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaLong("codigo", i));
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }   
     public ArrayList<Double> Duplicatas_ValoresIndividuais(){
        ArrayList<Double> Ret = new ArrayList<Double>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valorrestante", i));
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }   
     public ArrayList<Double> Duplicatas_ValoresIndividuaisFinais(){
        ArrayList<Double> Ret = new ArrayList<Double>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("Valor_Com_Juros", i));
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }    
     
    public ArrayList<Date> Duplicatas_VencimentosIndividuais(){
        ArrayList<Date> Ret = new ArrayList<Date>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDate("vencimento", i));
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }  
    public ArrayList<Double> Duplicatas_JurosIndividuais(){
        ArrayList<Double> Ret = new ArrayList<Double>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valor_juros", i));
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }  
    public ArrayList<Double> Duplicatas_RestanteIndividuais(){
        ArrayList<Double> Ret = new ArrayList<Double>();
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret.add(dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valorrestante", i));
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }  
    
    public Integer QT_Selecionadas(){
        int Ret = 0;
        try {
            Boolean ValorColuna =false;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                ValorColuna = (Boolean) dbgContasEmAberto.getTbDinnamuS().getValueAt(i, 0);;
                if(ValorColuna){
                    Ret++;
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }   
     public Double VlrDuplicatasEmAberto(){
         Double Ret = 0d;
         try {
             
             HashMap <String,Double> valores = VlrDuplicatasPorSituacao();
             if(valores.containsKey("A_VENCER_VLR")){
                 Ret +=valores.get("A_VENCER_VLR");
             }
             
             if(valores.containsKey("VENCIDA_VLR")){
                 Ret +=valores.get("VENCIDA_VLR");
             }
             
             if(valores.containsKey("JUROS")){
                 Ret +=valores.get("JUROS");
             }
             
             
         } catch (Exception e) {
             LogDinnamus.Log(e, true);
         }
         return Ret;
     }
     public HashMap <String,Double> VlrDuplicatasPorSituacao(){
        HashMap <String,Double> Ret =  new HashMap<String, Double>();
        try {
            String status_venc ="";
            Double Valor =0d,Juros=0d;
            for (int i = 0; i < dbgContasEmAberto.getjTable().getRowCount(); i++) {
                status_venc = dbgContasEmAberto.getTbDinnamuS().getValorCelulaString("status_venc",i);
                Valor= dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valorrestante",i);                
                Juros= dbgContasEmAberto.getTbDinnamuS().getValorCelulaDouble("valor_juros",i);                
                if(Ret.containsKey(status_venc+"_VLR")){
                   Ret.put(status_venc+"_VLR",Ret.get(status_venc+"_VLR")+Valor);
                   Ret.put(status_venc+"_QT",Ret.get(status_venc+"_QT")+1);
                }else{
                   Ret.put(status_venc+"_VLR",Valor); 
                   Ret.put(status_venc+"_QT",1d); 
                }  
                if(Ret.containsKey("JUROS")){
                    Ret.put("JUROS",Ret.get("JUROS")+Juros);
                }else{
                    Ret.put("JUROS",Juros); 
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }   
     
    public boolean AtualizarUI_TotalEmAberto(){
        boolean Ret = false;
        try {
              Double nValorAberto = VlrDuplicatasEmAberto();
           
              txtTotalEmAberto.setText(FormatarNumeros.FormatarParaMoeda(nValorAberto) );
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    } 
    public boolean AtualizarUI_Limite(Long nCodigoCliente){
        boolean Ret = false;
        try {
            Double nValorLimite = Crediario.ValorLimite(nCodigoCliente,Sistema.getLojaAtual());
            Double nValorAberto =  VlrDuplicatasEmAberto();
            
            txtLimite.setText(FormatarNumeros.FormatarParaMoeda(nValorLimite) );
          
            txtDisponivel.setText(FormatarNumeros.FormatarParaMoeda(nValorLimite-nValorAberto) );
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    public boolean MarcarContasJaSelecionadas(ArrayList<Long> contas){
        boolean Ret = false;
        try {
            
            int Linhas = dbgContasEmAberto.getjTable().getRowCount();
            if(Linhas>0){
                dbgContasEmAberto.getTbDinnamuS().getValueAt(0, 0);
            }
            Long Codigo =0l;
            for (int i = 0; i < Linhas; i++) {
                Codigo = dbgContasEmAberto.getTbDinnamuS().getValorCelulaLong("codigo",i);
                if(contas.contains(Codigo)){
                    dbgContasEmAberto.getTbDinnamuS().setValueAt(new Boolean(true),  i, 0);
                }
            }
            AtualizarPainelDuplicatasSelecionadas();
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    public boolean AtualizarUI_DbgContasAReceber(Long nCodigoCliente, String StatusPagto, String StatusVencimento ){
        try {
            //codigo,titulo,digito,emissao,valorrestante,dataresto    
            //dbgContasEmAberto.update(dbgContasEmAberto.getGraphics());
            dbgContasEmAberto.setRsDados(Crediario.DuplicatasEmAberto_ComJuros(nCodigoCliente, Sistema.getLojaAtual(), false,StatusVencimento,StatusPagto));
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }    
    }
    public boolean AtualizarUI_DbgFormaPagto(Long CodigoOperacao){
        try {
            //codigo,titulo,digito,emissao,valorrestante,dataresto    
            //dbgContasEmAberto.update(dbgContasEmAberto.getGraphics());
            dbgFormaPagto.setRsDados(Crediario.FormasPagamento(CodigoOperacao));
            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }    
    }
     public boolean AtualizarUI_dbgPagas(Long nCodigoCliente, int Loja ){
        try {
            //codigo,titulo,digito,emissao,valorrestante,dataresto    
            //dbgContasEmAberto.update(dbgContasEmAberto.getGraphics());
            dbgPagas.setRsDados(Crediario.DuplicatasPagas(nCodigoCliente, Loja));
            
            return true;
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }    
    }

  
    

}
