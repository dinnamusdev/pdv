
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dinnamus.ui.InteracaoUsuario.Venda;

import br.TratamentoNulo.TratamentoNulos;
import br.arredondar.NumeroArredondar;
import br.com.FormatarNumeros;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.data.ManipularData;
import br.ui.teclas.TeclasDeAtalho;
import br.ui.teclas.controleteclas;
import br.valor.formatar.FormatarNumero;
import com.toedter.calendar.JDateChooser;
import MetodosDeNegocio.Fachada.TiposdePagamentos;
import MetodosDeNegocio.Venda.PagtoorcRN;
import br.com.ui.SwingUtilidade;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;

/**
 *
 * @author Fernando
 */
public class frmPDV_SimplesPagtos extends javax.swing.JDialog {

    /**
     * Creates new form frmPDV_SimplesPagtos
     */
    public Long CodigoVenda =0l;
    public Double ValorFinal=0d;
    private boolean UI_Ok = false;
    
    public boolean FormaPagtoAcionarTEF = false;
    public Double FormaPagtoValor =0d;
    public Integer FormaPagtoCodigo =0;
    public Double FormaPagtoDinheiro =0d;
    public Double FormaPagtoTroco =0d;
    public int FormaPagtoParcela =0;
    public Double FormaPagtoAcrescimo =0d;
    public Date FormaPagtoPrimeiroVencto =new Date();
    public boolean OK = false;
    public String CodigoCliente = "";
    public boolean TEF_ATIVO=false;
    
    
    public frmPDV_SimplesPagtos(java.awt.Frame parent, boolean modal, String CodigoCliente, Long CodigoVenda, Double ValorFinal, boolean TEF_ATIVO) {
        super(parent, modal);
        initComponents();
        this.CodigoCliente=CodigoCliente;
        this.CodigoVenda = CodigoVenda;
        this.ValorFinal = ValorFinal;
        this.TEF_ATIVO = TEF_ATIVO;
        UI_Ok = IniciarUI();
        setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PainelPrincipal = new javax.swing.JPanel();
        PainelCorpo = new javax.swing.JPanel();
        PainelSubtotal11 = new javax.swing.JPanel();
        dbgOpcoesPagto = new br.com.ui.JTableDinnamuS();
        PainelDadosCartao = new javax.swing.JPanel();
        txtNumeroParcelas = new javax.swing.JTextField();
        txtPrimeiroVencimento = new JDateChooser("dd/MM/yyyy", "##/##/####", '_');
        PainelDinheiroETroco = new javax.swing.JPanel();
        txtDinheiro = new javax.swing.JFormattedTextField();
        txtTroco = new javax.swing.JFormattedTextField();
        lblRecebidoCliente = new javax.swing.JLabel();
        lblTroco = new javax.swing.JLabel();
        PainelDigiteOValor = new javax.swing.JPanel();
        PainelAcrescimoPagto = new javax.swing.JPanel();
        txtPercAcrescimo = new javax.swing.JFormattedTextField();
        txtValorAcrescimo = new javax.swing.JFormattedTextField();
        txtValorFinalComAcrescimo = new javax.swing.JFormattedTextField();
        btOK = new javax.swing.JButton();
        PainelValor = new javax.swing.JPanel();
        lblDigiteOValor = new javax.swing.JLabel();
        txtValorForma = new javax.swing.JFormattedTextField();
        PainelTopo = new javax.swing.JPanel();
        btFechar2 = new javax.swing.JButton();
        lblTituloForm = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 600));
        setModal(true);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(500, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setBackground(new java.awt.Color(0, 0, 0));
        PainelPrincipal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelPrincipal.setMinimumSize(new java.awt.Dimension(500, 600));
        PainelPrincipal.setPreferredSize(new java.awt.Dimension(500, 600));
        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelCorpo.setBackground(new java.awt.Color(255, 255, 204));
        PainelCorpo.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelSubtotal11.setBackground(new java.awt.Color(255, 255, 204));
        PainelSubtotal11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PainelSubtotal11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PainelSubtotal11.setPreferredSize(new java.awt.Dimension(1000, 84));
        PainelSubtotal11.setLayout(new java.awt.GridBagLayout());

        dbgOpcoesPagto.setExibirBarra(false);
        dbgOpcoesPagto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dbgOpcoesPagtoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.4;
        PainelSubtotal11.add(dbgOpcoesPagto, gridBagConstraints);

        PainelDadosCartao.setBackground(new java.awt.Color(255, 255, 255));
        PainelDadosCartao.setLayout(new java.awt.GridBagLayout());

        txtNumeroParcelas.setBackground(new java.awt.Color(255, 255, 255));
        txtNumeroParcelas.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        txtNumeroParcelas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNumeroParcelas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "No. Parc.", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtNumeroParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroParcelasActionPerformed(evt);
            }
        });
        txtNumeroParcelas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumeroParcelasFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumeroParcelasFocusLost(evt);
            }
        });
        txtNumeroParcelas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroParcelasKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelDadosCartao.add(txtNumeroParcelas, gridBagConstraints);

        txtPrimeiroVencimento.setBackground(new java.awt.Color(255, 255, 255));
        txtPrimeiroVencimento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "1ยบ Vencto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N
        txtPrimeiroVencimento.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtPrimeiroVencimento.getDateEditor().getUiComponent().addKeyListener(

            new KeyAdapter() {
                @Override
                public void keyTyped(KeyEvent e) {}

                @Override
                public void keyPressed(KeyEvent e) {
                    if(e.getKeyCode()==KeyEvent.VK_ENTER){
                        btOK.requestFocus();
                    }
                }
                @Override
                public void keyReleased(KeyEvent e) {}

            }
        );
        txtPrimeiroVencimento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrimeiroVencimentoKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        PainelDadosCartao.add(txtPrimeiroVencimento, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelSubtotal11.add(PainelDadosCartao, gridBagConstraints);

        PainelDinheiroETroco.setBackground(new java.awt.Color(255, 255, 255));
        PainelDinheiroETroco.setLayout(new java.awt.GridBagLayout());

        txtDinheiro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtDinheiro.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtDinheiro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDinheiro.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtDinheiro.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        txtDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDinheiroActionPerformed(evt);
            }
        });
        txtDinheiro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDinheiroFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDinheiroFocusLost(evt);
            }
        });
        txtDinheiro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDinheiroKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        PainelDinheiroETroco.add(txtDinheiro, gridBagConstraints);

        txtTroco.setEditable(false);
        txtTroco.setBackground(new java.awt.Color(255, 255, 255));
        txtTroco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtTroco.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtTroco.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTroco.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTroco.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        PainelDinheiroETroco.add(txtTroco, gridBagConstraints);

        lblRecebidoCliente.setBackground(new java.awt.Color(255, 255, 204));
        lblRecebidoCliente.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblRecebidoCliente.setText(" RECEBIDO ");
        lblRecebidoCliente.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblRecebidoCliente.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        PainelDinheiroETroco.add(lblRecebidoCliente, gridBagConstraints);

        lblTroco.setBackground(new java.awt.Color(255, 255, 204));
        lblTroco.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTroco.setText(" TROCO");
        lblTroco.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblTroco.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelDinheiroETroco.add(lblTroco, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelSubtotal11.add(PainelDinheiroETroco, gridBagConstraints);

        PainelDigiteOValor.setBackground(new java.awt.Color(255, 255, 204));
        PainelDigiteOValor.setOpaque(false);
        PainelDigiteOValor.setLayout(new java.awt.GridBagLayout());

        PainelAcrescimoPagto.setBackground(new java.awt.Color(255, 255, 255));
        PainelAcrescimoPagto.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ACRรSCIMO PAGTO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 18))); // NOI18N
        PainelAcrescimoPagto.setLayout(new java.awt.GridBagLayout());

        txtPercAcrescimo.setEditable(false);
        txtPercAcrescimo.setBackground(new java.awt.Color(255, 255, 255));
        txtPercAcrescimo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "% PERC", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        txtPercAcrescimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        txtPercAcrescimo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPercAcrescimo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtPercAcrescimo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelAcrescimoPagto.add(txtPercAcrescimo, gridBagConstraints);

        txtValorAcrescimo.setEditable(false);
        txtValorAcrescimo.setBackground(new java.awt.Color(255, 255, 255));
        txtValorAcrescimo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "$ ACRรSCIMO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        txtValorAcrescimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        txtValorAcrescimo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorAcrescimo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtValorAcrescimo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        PainelAcrescimoPagto.add(txtValorAcrescimo, gridBagConstraints);

        txtValorFinalComAcrescimo.setEditable(false);
        txtValorFinalComAcrescimo.setBackground(new java.awt.Color(255, 255, 255));
        txtValorFinalComAcrescimo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VALOR C/ACRรSCIMO", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N
        txtValorFinalComAcrescimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtValorFinalComAcrescimo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorFinalComAcrescimo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtValorFinalComAcrescimo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        PainelAcrescimoPagto.add(txtValorFinalComAcrescimo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.4;
        PainelDigiteOValor.add(PainelAcrescimoPagto, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelSubtotal11.add(PainelDigiteOValor, gridBagConstraints);

        btOK.setBackground(new java.awt.Color(0, 0, 0));
        btOK.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btOK.setForeground(new java.awt.Color(255, 255, 255));
        btOK.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/money.png"))); // NOI18N
        btOK.setText("Pressione Enter");
        btOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 31;
        gridBagConstraints.ipady = 31;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        PainelSubtotal11.add(btOK, gridBagConstraints);

        PainelValor.setLayout(new java.awt.GridBagLayout());

        lblDigiteOValor.setBackground(new java.awt.Color(255, 255, 204));
        lblDigiteOValor.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblDigiteOValor.setText(" VALOR ");
        lblDigiteOValor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblDigiteOValor.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelValor.add(lblDigiteOValor, gridBagConstraints);

        txtValorForma.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtValorForma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtValorForma.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtValorForma.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtValorForma.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        txtValorForma.setValue(new Double(0d));
        txtValorForma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorFormaActionPerformed(evt);
            }
        });
        txtValorForma.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtValorFormaFocusGained(evt);
            }
        });
        txtValorForma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorFormaKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        PainelValor.add(txtValorForma, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelSubtotal11.add(PainelValor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        PainelCorpo.add(PainelSubtotal11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(11, 12, 14, 10);
        PainelPrincipal.add(PainelCorpo, gridBagConstraints);

        PainelTopo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTopo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelTopo.setLayout(new java.awt.GridBagLayout());

        btFechar2.setBackground(new java.awt.Color(0, 0, 0));
        btFechar2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btFechar2.setForeground(new java.awt.Color(255, 255, 255));
        btFechar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar2.setMnemonic('x');
        btFechar2.setText("Fechar");
        btFechar2.setToolTipText("");
        btFechar2.setBorderPainted(false);
        btFechar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar2ActionPerformed(evt);
            }
        });
        btFechar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btFechar2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.2;
        PainelTopo.add(btFechar2, gridBagConstraints);

        lblTituloForm.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTituloForm.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloForm.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTituloForm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Dollar.png"))); // NOI18N
        lblTituloForm.setText(" PAGAMENTO");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PainelTopo.add(lblTituloForm, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelTopo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private boolean IniciarUI(){
        try {
            PainelDinheiroETroco.setVisible(false);
            PainelDadosCartao.setVisible(false);
            PainelDigiteOValor.setVisible(false);
            PainelValor.setVisible(false);
            PainelAcrescimoPagto.setVisible(false);
            txtTroco.setVisible(false);
            lblTroco.setVisible(false);
            btOK.setVisible(false);
            txtValorForma.setValue(0d);
            txtDinheiro.setValue(0d);
            txtTroco.setValue(0d);
            txtValorAcrescimo.setValue(0d);
            txtValorFinalComAcrescimo.setValue(0d);
            if(!IniciarUI_GridOpcoesPagto()){ return false;}            
            if(!GridOpcoesPagto_Atualizar()){return false;}
            if(!IniciarUI_TeclaAtalho()){ return false;}
            MetodosUI_Auxiliares_1.CentrarJDialog(this, getToolkit());
            dbgOpcoesPagto.getjTable().requestFocus();
            dbgOpcoesPagto.getjTable().setRowSelectionInterval(0, 0);
            //dbgOpcoesPagto.getTbDinnamuS().getRs().absolute(0);
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private boolean GridOpcoesPagto_Atualizar(){
    try {
        //String sql="TIPOSDEPAGAMENTOS WHERE LOJA=" + Sistema.getCodigoLojaMatriz() + " AND (BLOQUEADO <> 1) OR (BLOQUEADO IS NULL) AND UPPER(DESTINO) IN ('CAIXA','CHEQUES RECEBIDOS','CARTAO DE CREDITO','A RECEBER & CREDIARIO')";

        String cCodigoCliente = TratamentoNulos.getTratarString().Tratar(CodigoCliente, "");
        dbgOpcoesPagto.setRsDados(TiposdePagamentos.ListarTudo(Sistema.getCodigoLojaMatriz(),!cCodigoCliente.equalsIgnoreCase("0") && cCodigoCliente.length()!=0 ));
        //dbgOpcoesPagto.update(dbgOpcoesPagto.getGraphics());
        return true;
    } catch (Exception e) {
        LogDinnamus.Log(e);
        return false;
    }
    }
    private ArrayList<Double> CalcularAcrescimoFormaPagto(Integer CodigoForma, Double ValorForma){
        ArrayList<Double> Retorno=new ArrayList<Double>();
        try {            
            Double nValorAcrescimento=0d, nPercAcrescimento=0d;
            ResultSet rs = TiposdePagamentos.Listar(CodigoForma,Sistema.getCodigoLojaMatriz());        
            if(rs.next()){
                nPercAcrescimento = rs.getDouble("acrescimo");
                if(nPercAcrescimento>0f && nPercAcrescimento <=99f){                              
                    Retorno.add(nPercAcrescimento);
                    nValorAcrescimento = NumeroArredondar.Arredondar_Double(ValorForma*nPercAcrescimento/100,2);
                    Retorno.add(nValorAcrescimento) ;                              
                }        
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);            
        }
        return Retorno;
    }
    private boolean EscolherFormaPagto(){
        boolean Ret = false;
        try {            
            Double nValorFinal = ValorFinal;
            Double nValorDistribuido=PagtoorcRN.Pagtorc_SomarValores(CodigoVenda);
            if(nValorDistribuido==nValorFinal){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O valor total da nota jรก foi informado", "Formas de Pagto", "Aviso");
            }
            else{
                Object[] obj = dbgOpcoesPagto.TratarLinhaSelecionada(dbgOpcoesPagto.getjTable());
                if(obj!=null)
                {
                    Integer nCodigoForma = Integer.valueOf(obj[0].toString());
                    String Destino ="";
                    String TEF = "";
                    ResultSet rs = TiposdePagamentos.Listar(nCodigoForma,Sistema.getCodigoLojaMatriz());
                    Integer nIntervalo=0;
                    try {
                        if(rs.next()){
                            Destino = TratamentoNulos.getTratarString().Tratar(rs.getString("destino"),"Caixa");
                            TEF = TratamentoNulos.getTratarString().Tratar(rs.getString("tef"),"N");
                            nIntervalo = rs.getInt("intervalo");
                            if(!Destino.equalsIgnoreCase("Caixa") ){
                                
                                if(Destino.equalsIgnoreCase("cartao de credito") && TEF.trim().equalsIgnoreCase("S") && TEF_ATIVO){
                                   FormaPagtoAcionarTEF=true; 
                                }
                                if(!FormaPagtoAcionarTEF){
                                    txtNumeroParcelas.setEnabled(true);
                                    txtPrimeiroVencimento.setEnabled(true);
                                }
                            }else{
                                txtNumeroParcelas.setEnabled(false);
                                txtPrimeiroVencimento.setEnabled(false);
                            }
                        }
                    } catch (SQLException ex) {
                        LogDinnamus.Log(ex);
                    }
                    Double nValorForma = nValorFinal - nValorDistribuido;

                    ExibirDadosAcrescimo(nCodigoForma, nValorForma);

                    Date dDataParcela=ManipularData.Adicionar_Subtrair_Data(ManipularData.DataAtual(), nIntervalo, Calendar.DATE);

                    if(Destino.equalsIgnoreCase("cartao de credito") && TEF.trim().equalsIgnoreCase("S")){
                       //if(!FormaPagtoAcionarTEF){
                        //if(!TEF_ATIVO){
                           FormaPagtoAcionarTEF=true;
                        //}
                       //}
                    }
                    txtValorForma.setValue(nValorForma.doubleValue());
                    txtNumeroParcelas.setText("1");
                    txtPrimeiroVencimento.setDate(dDataParcela);
                    PainelDigiteOValor.setVisible(true);
                    PainelValor.setVisible(true);
                    dbgOpcoesPagto.setEnabled(false);
                    dbgOpcoesPagto.getjTable().setEnabled(false);
                    txtValorForma.requestFocus();  
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean IniciarUI_GridOpcoesPagto()
    {
    boolean bRet=false;
    try {

        JButton bt = new JButton();
        bt.setFont(new Font("Tahoma", Font.BOLD, 22));
        bt.setBackground(Color.BLACK);
        bt.setForeground(Color.WHITE);
        bt.setBorderPainted(false);
        //bt.add
        KeyAdapter keyadp = new KeyAdapter() {                
        @Override
        public void keyTyped(KeyEvent e) {}
        @Override
        public void keyReleased(KeyEvent e) {}
        @Override
        public void keyPressed(KeyEvent e) {
            if(e.getKeyCode()==KeyEvent.VK_ENTER)
            {
                e.consume();
                EscolherFormaPagto();
            }
        }
        };
        bt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EscolherFormaPagto();
            }
        });
        
        dbgOpcoesPagto.addClColunas("cod", "COD", 100 , true, false, -1, bt, "");
        dbgOpcoesPagto.addClColunas("nome", "NOME", 350,true, false, -1,bt, "");
        dbgOpcoesPagto.getjTable().getTableHeader().setResizingAllowed(false);
        dbgOpcoesPagto.getjTable().getTableHeader().setReorderingAllowed(false);
        //dbgOpcoesPagto.getjTable().setFont(new Font("Tahoma", Font.PLAIN, 22));        
        dbgOpcoesPagto.AumentaAlturaLinhas(2f);
        //dbgOpcoesPagto.setColunaComTamanhosEmPercentual(true);    
        dbgOpcoesPagto.getTbDinnamuS().setEditavel(false);
        dbgOpcoesPagto.getjTable().addKeyListener(keyadp);
        
        bRet=true;
    } catch (Exception e) {
        LogDinnamus.Log(e);
    }
    
    return bRet;
}
   private Integer CodigoFormaSelecionada(){
       Integer  Retorno =0;
       try {
           int LinhaAtual = dbgOpcoesPagto.getjTable().getSelectedRow();
           if(LinhaAtual>=0){
              Retorno = dbgOpcoesPagto.getTbDinnamuS().getValorCelulaLong("cod",LinhaAtual).intValue();          
           }
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
       }
       return Retorno;
   } 
   private boolean EventoDinheiroRecebido(){
       try {
           Double ValorDinheiro  = Double.valueOf(txtDinheiro.getValue().toString());
           Double Troco =0d;           
           Double ValorForma = Double.valueOf(txtValorForma.getValue().toString());
           if(ValorDinheiro.doubleValue()>=ValorForma.doubleValue()){
              Troco = ValorDinheiro.doubleValue() - ValorForma.doubleValue() ;
              
              if(ValorDinheiro.doubleValue()!=ValorForma.doubleValue()){                     
                 PainelDigiteOValor.setVisible(false);
                 PainelValor.setVisible(false);
                 txtDinheiro.setVisible(false);
                 lblRecebidoCliente.setVisible(false);                 
                 txtTroco.setVisible(true);
                 lblTroco.setVisible(true);
                 txtTroco.setValue(Troco);
                 btOK.setVisible(true);
                 btOK.requestFocus();
              }else{
                 btOK.setVisible(true);
                 btOK.requestFocus();
              }
              return true;
           }              
           
       } catch (Exception e) {
           LogDinnamus.Log(e, true);           
       }
       return false;
   } 
   private boolean ExibirDadosAcrescimo(Integer nCodigoForma, Double nValorForma){
       try {
            ArrayList<Double> Acrescimento=CalcularAcrescimoFormaPagto(nCodigoForma, nValorForma);
            if(Acrescimento.size()>0){                          
              txtPercAcrescimo.setValue(Acrescimento.get(0).doubleValue());
              txtValorAcrescimo.setValue(Acrescimento.get(1).doubleValue());
              txtValorFinalComAcrescimo.setValue(nValorForma + Acrescimento.get(1));                                  
              PainelAcrescimoPagto.setVisible(true);
            }           
            return true;
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
           return false;
       }
   }
   private void EventoCampoValorForma(){
        try {
            Integer CodigoForma =CodigoFormaSelecionada();
            if(CodigoForma>0){
               ResultSet rs = TiposdePagamentos.Listar(CodigoForma.intValue(),Sistema.getCodigoLojaMatriz());
               if(rs.next()){
                  Double ValorFaltaDistribuir = ValorFaltaDistribuir() ;
                  Double ValorForma = Double.valueOf(txtValorForma.getValue().toString());
                  
                  if(ValorForma.doubleValue()>ValorFaltaDistribuir){
                     MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null , "O VALOR INFORMADO [ R$ "+ FormatarNumeros.FormatarParaMoeda(ValorForma.doubleValue()) +" ] ร SUPERIOR A VALOR QUE AINDA FALTA RECEBER [ R$ " + FormatarNumeros.FormatarParaMoeda(ValorFaltaDistribuir) +  " ]", lblTituloForm.getText()); 
                  }else{  
                     String Destino = TratamentoNulos.getTratarString().Tratar(rs.getString("destino"),"");
                    if(Destino.equalsIgnoreCase("caixa")){
                       if(ValorForma.doubleValue()<ValorFaltaDistribuir){
                          btOK.setVisible(true); 
                          btOK.requestFocus();
                       }else{ 
                            PainelDinheiroETroco.setVisible(true);                     
                            txtDinheiro.requestFocus();
                       }
                    }else{
                       if(Destino.equalsIgnoreCase("A Receber & Crediario")){
                          ExibirDadosAcrescimo(CodigoForma, ValorForma.doubleValue());
                       } 
                       btOK.setVisible(true);
                       if(Destino.equalsIgnoreCase("A Receber & Crediario") ||
                          Destino.equalsIgnoreCase("Cartao de Credito")  ||
                          Destino.equalsIgnoreCase("Cheques Recebidos")){                          
                          if(!FormaPagtoAcionarTEF){
                            PainelDadosCartao.setVisible(true);  
                            txtNumeroParcelas.requestFocus();
                          }else{
                             btOK.requestFocus(); 
                          }
                       }else{
                           btOK.requestFocus();
                       }
                       
                    }
                  }
               }
            }else{
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null , "NรO FOI SELECIONADO UMA FORMA DE PAGTO", lblTituloForm.getText());
            }
         
        } catch (Exception e) {
            LogDinnamus.Log(e, true);          
        }
    }
    private Double ValorFaltaDistribuir()
    {
        Double nValorRetorno=0d;
        Double nValorFinal =0d;
        Double nValalorDistribuido=0d;
        try {

            nValorFinal = ValorFinal;
            nValalorDistribuido = PagtoorcRN.Pagtorc_SomarValores(CodigoVenda);
            nValorRetorno = NumeroArredondar.Arredondar_Double(nValorFinal - nValalorDistribuido,2);

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return nValorRetorno;
    }        
    private void btFechar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar2ActionPerformed
      Evento_Esc();

    }//GEN-LAST:event_btFechar2ActionPerformed
    
    private void btFechar2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btFechar2KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_btFechar2KeyPressed
    
    private void dbgOpcoesPagtoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dbgOpcoesPagtoKeyPressed

        // TODO add your handling code here:
        if(evt.getKeyCode() ==KeyEvent.VK_ENTER)
        {
            Double nValorVenda = this.ValorFinal;
            if(PagtoorcRN.Pagtorc_SomarValores(this.CodigoVenda).doubleValue()==nValorVenda.doubleValue())
            {
                txtDinheiro.setText(PagtoorcRN.Pagtorc_SomarValoresDinheiros(this.CodigoVenda).toString());
                txtDinheiro.requestFocus();
            }
        }
    }//GEN-LAST:event_dbgOpcoesPagtoKeyPressed

    private void txtValorFormaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorFormaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorFormaActionPerformed

    private void txtValorFormaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtValorFormaFocusGained
        // TODO add your handling code here:
        SwingUtilidade.SelectAll(txtValorForma);
    }//GEN-LAST:event_txtValorFormaFocusGained

    private void txtValorFormaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorFormaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            //txtNumeroParcelas.requestFocus();
            try {
                txtValorForma.commitEdit();
                
                EventoCampoValorForma(); 
                
            } catch (Exception e) {
                LogDinnamus.Log(e);
            }
        }
    }//GEN-LAST:event_txtValorFormaKeyPressed

    private void txtDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDinheiroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDinheiroActionPerformed

    private void txtDinheiroFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDinheiroFocusGained
        // TODO add your handling code here:

        try {
            
            txtDinheiro.setValue(txtValorForma.getValue());
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        SwingUtilidade.SelectAll(txtDinheiro);
    }//GEN-LAST:event_txtDinheiroFocusGained
    private boolean IgnorarLostFocus_txtDinheiro = false;
    private void txtDinheiroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDinheiroFocusLost
        // TODO add your handling code here:
        if(IgnorarLostFocus_txtDinheiro){ 
            IgnorarLostFocus_txtDinheiro=false;
            return ;
        }
        try {
           Double ValorDinheiro  = Double.valueOf(txtDinheiro.getValue().toString());                      
           Double ValorForma = Double.valueOf(txtValorForma.getValue().toString());
           if(ValorDinheiro.doubleValue()<ValorForma.doubleValue()){              
              MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null , "O VALOR DO DINHEIRO PRECISA SER SUPERIOR AO VALOR DO PAGTO", lblTituloForm.getText());
              txtDinheiro.setValue(txtValorForma.getValue());
              txtDinheiro.requestFocus();
           }              
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
    }//GEN-LAST:event_txtDinheiroFocusLost

    private void txtDinheiroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDinheiroKeyPressed
        // TODO add your handling code here:
        try {
            IgnorarLostFocus_txtDinheiro=false;
            if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            {
               txtDinheiro.commitEdit();
               if(!EventoDinheiroRecebido()){
                  txtDinheiro.setValue(txtValorForma.getValue());     
                  IgnorarLostFocus_txtDinheiro=true;
                  MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null , "O VALOR DO DINHEIRO PRECISA SER SUPERIOR AO VALOR DO PAGTO", lblTituloForm.getText()); 
               }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
    }//GEN-LAST:event_txtDinheiroKeyPressed

    private void txtNumeroParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroParcelasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroParcelasActionPerformed

    private void txtNumeroParcelasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroParcelasFocusGained
        // TODO add your handling code here:
       // ((JTextField)evt.getSource()).selectAll();
        SwingUtilidade.SelectAll(txtNumeroParcelas);
        //txtNumeroParcelas.selectAll();
    }//GEN-LAST:event_txtNumeroParcelasFocusGained

    private void txtNumeroParcelasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroParcelasKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
          txtPrimeiroVencimento.getDateEditor().getUiComponent().requestFocus();
        }
    }//GEN-LAST:event_txtNumeroParcelasKeyPressed

    private void txtPrimeiroVencimentoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrimeiroVencimentoKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            //btIncluirForma.requestFocus();

        }
    }//GEN-LAST:event_txtPrimeiroVencimentoKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if(!UI_Ok){
            dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btOKActionPerformed
        // TODO add your handling code here:
        try {
            this.FormaPagtoAcrescimo  = ((Double)txtValorAcrescimo.getValue()).doubleValue();
            this.FormaPagtoCodigo = CodigoFormaSelecionada();

            this.FormaPagtoValor = Double.valueOf(txtValorForma.getValue().toString());
            this.FormaPagtoDinheiro = (Double.valueOf(txtDinheiro.getValue().toString())) ;
            this.FormaPagtoParcela = Integer.parseInt( txtNumeroParcelas.getText());
            this.FormaPagtoPrimeiroVencto = txtPrimeiroVencimento.getDate();
            this.FormaPagtoTroco = Double.valueOf(txtTroco.getValue().toString()) ;
            
            OK = true;
            dispose();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
        
        
    }//GEN-LAST:event_btOKActionPerformed

    private void txtNumeroParcelasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumeroParcelasFocusLost
        // TODO add your handling code here:
        try {
            int Parcela = FormatarNumero.FormatarNumeroInteiro(txtNumeroParcelas.getText());
            if(Parcela==FormatarNumero.INTEIRO_INVALIDO){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "INFORMAรรO DIGITADA INVรLIDA", "PARCELA");
                txtNumeroParcelas.setText("1");
                txtNumeroParcelas.requestFocus();
            }else{
                if(Parcela<1 || Parcela>99){                
                   MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "INFORMAรรO DIGITADA INVรLIDA . VรLIDO SOMENTE [1-99]", "PARCELA");
                   txtNumeroParcelas.setText("1");
                   txtNumeroParcelas.requestFocus();
                }
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_txtNumeroParcelasFocusLost
   private Action ESCAPE=null; 
   public boolean Evento_Esc(){
       try {
           OK = false;
           dispose();
           return true;
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
           return false;
       }
   }
   private boolean IniciarUI_TeclaAtalho(){            
         try {
            ESCAPE = new  AbstractAction() {
            @Override  
            public void actionPerformed(ActionEvent e) {
                    Evento_Esc();
            }};   
            TeclasDeAtalho.DefinirFuncao_A_Tecla(PainelPrincipal, ESCAPE, "ESCAPE"); 
            controleteclas.SetarTodosOsBotoes(this.getContentPane());
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
         
    }
    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelAcrescimoPagto;
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelDadosCartao;
    private javax.swing.JPanel PainelDigiteOValor;
    private javax.swing.JPanel PainelDinheiroETroco;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelSubtotal11;
    private javax.swing.JPanel PainelTopo;
    private javax.swing.JPanel PainelValor;
    private javax.swing.JButton btFechar2;
    private javax.swing.JButton btOK;
    private br.com.ui.JTableDinnamuS dbgOpcoesPagto;
    private javax.swing.JLabel lblDigiteOValor;
    private javax.swing.JLabel lblRecebidoCliente;
    private javax.swing.JLabel lblTituloForm;
    private javax.swing.JLabel lblTroco;
    private javax.swing.JFormattedTextField txtDinheiro;
    private javax.swing.JTextField txtNumeroParcelas;
    private javax.swing.JFormattedTextField txtPercAcrescimo;
    private com.toedter.calendar.JDateChooser txtPrimeiroVencimento;
    private javax.swing.JFormattedTextField txtTroco;
    private javax.swing.JFormattedTextField txtValorAcrescimo;
    private javax.swing.JFormattedTextField txtValorFinalComAcrescimo;
    private javax.swing.JFormattedTextField txtValorForma;
    // End of variables declaration//GEN-END:variables
}
