/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frmAbrirCaixa.java
 *
 * Created on 16/08/2010, 17:25:30
 */

package dinnamus.ui.InteracaoUsuario.Venda;

import br.com.info.Sistema;
import br.com.log.LogDinnamus;

import br.data.DataHora;
import br.TratamentoNulo.TratarNulos;
import br.com.ui.ItemLista;
import br.ui.teclas.controleteclas;
import MetodosDeNegocio.Sincronismo.SincronizarMovimento;
import MetodosDeNegocio.Seguranca.Login;
import MetodosDeNegocio.Seguranca.UsuarioSistema;
import MetodosDeNegocio.Venda.GerenciarCaixa;
import MetodosDeNegocio.Venda.pdvgerenciar;
import UI.Seguranca.ValidarAcessoAoProcesso;
import br.com.repositorio.DAO_RepositorioLocal;
import br.com.ui.MetodosUI_Auxiliares_1;
import br.ui.teclas.DefinirAtalhos2;
import java.awt.Font;
import java.awt.event.ActionEvent;
//import br.com.ui.controleteclas;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Date;
import java.sql.ResultSet;
import javax.swing.AbstractAction;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author dti
 */
public class frmAbrirCaixa extends javax.swing.JDialog {

    /** Creates new form frmAbrirCaixa */
    private String TipoOperacao="";
    private TratarNulos<String> TratarStringNula=new TratarNulos<String>();
    private boolean IniciouOK = false;
    public frmAbrirCaixa(java.awt.Frame parent, boolean modal, String TipoOperacao) {
        super(parent, modal);
        setTipoOperacao(TipoOperacao);
        IniciarFrame(parent,modal);       
    }

    public  frmAbrirCaixa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        IniciarFrame(parent,modal);
    }
    public void IniciarFrame(java.awt.Frame parent, boolean modal) {
        //super(parent, modal);
        initComponents();
        IniciarUI_TeclaAtalho();
        this.setLocationRelativeTo(null);  
        IniciouOK= IniciarUI();
        if(!IniciouOK)
        {            
            dispose();                        
            return;
        }
        else
        {   
            if(cbCaixas.isEnabled())
            {
               cbCaixas.requestFocus();
            }
            
            controleteclas.UsarTeclaNaTrocaDeCampos(this.getContentPane(), KeyEvent.VK_ENTER);
            //dbgAbrirCaixa.getjTable().
            controleteclas.SetarTodosOsBotoes(this.getContentPane());
            controleteclas.SetarTodosOsCombos(this.getContentPane());

            if(getTipoOperacao().equalsIgnoreCase("A"))
            {
                lblTitulo.setText("Abrir Caixa");
                btAbrir.setText("[F3] - Abrir Caixa");
                btAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_edit.png")));
                
                
            }
            else
            {
                lblTitulo.setText("Fechar Caixa");
                btAbrir.setText("[F3] - Fechar Caixa");
                btAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_link.png")));
               
            }
            lblTitulo.setIcon(btAbrir.getIcon());
            if(UsuarioSistema.isUSuarioCaixa()  && TipoOperacao.equalsIgnoreCase("F") )
            {
                if(lblStatus.getText().equalsIgnoreCase("Fechado"))
                
                {
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não existe nenhum caixa aberto para o operador atual".toUpperCase(), "Fechamento", "AVISO");
                    this.dispose();
                    return;
                }
            }
            //cbCaixasActionPerformed(null);
            if(getTipoOperacao().equalsIgnoreCase("F"))
            {
                btAbrir.setEnabled((lblStatus.getText().equalsIgnoreCase("FECHADO") ? false : true ));
            }
            
            if(getTipoOperacao().equalsIgnoreCase("F")){
               btAbrir.requestFocus();
            }else{
                if(lblStatus.getText().equalsIgnoreCase("FECHADO")){
                  cbCaixas.requestFocus();
                }else{
                    
                    btFechar.requestFocus();
                }
            }
                  
            //this.update(this.getGraphics());
            //setVisible(true);
        }        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PainelPrincipal = new javax.swing.JPanel();
        PainelCaixasDisponivel = new javax.swing.JPanel();
        cbCaixas = new javax.swing.JComboBox();
        lblStatus = new javax.swing.JLabel();
        PainelDadosCaixa = new javax.swing.JPanel();
        txtData = new javax.swing.JFormattedTextField();
        PainelGrid = new javax.swing.JPanel();
        dbgAbrirCaixa = new br.com.ui.JTableDinnamuS();
        PainelBotoes = new javax.swing.JPanel();
        btAbrir = new javax.swing.JButton();
        PainelOperador = new javax.swing.JPanel();
        txtOperador = new javax.swing.JTextField();
        PainelTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        btFechar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Abrir Caixa");
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelCaixasDisponivel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Caixas Disponíveis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        PainelCaixasDisponivel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PainelCaixasDisponivel.setLayout(new java.awt.GridBagLayout());

        cbCaixas.setNextFocusableComponent(btAbrir);
        cbCaixas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbCaixasKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelCaixasDisponivel.add(cbCaixas, gridBagConstraints);

        lblStatus.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblStatus.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelCaixasDisponivel.add(lblStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelCaixasDisponivel, gridBagConstraints);

        PainelDadosCaixa.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Data", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        PainelDadosCaixa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PainelDadosCaixa.setLayout(new java.awt.GridBagLayout());

        txtData.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelDadosCaixa.add(txtData, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelDadosCaixa, gridBagConstraints);

        PainelGrid.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resumo do Caixa", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        PainelGrid.setEnabled(false);

        dbgAbrirCaixa.setExibirBarra(false);

        javax.swing.GroupLayout PainelGridLayout = new javax.swing.GroupLayout(PainelGrid);
        PainelGrid.setLayout(PainelGridLayout);
        PainelGridLayout.setHorizontalGroup(
            PainelGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelGridLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dbgAbrirCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                .addContainerGap())
        );
        PainelGridLayout.setVerticalGroup(
            PainelGridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelGridLayout.createSequentialGroup()
                .addComponent(dbgAbrirCaixa, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelPrincipal.add(PainelGrid, gridBagConstraints);

        PainelBotoes.setBackground(new java.awt.Color(244, 244, 236));
        PainelBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PainelBotoes.setLayout(new java.awt.GridBagLayout());

        btAbrir.setBackground(new java.awt.Color(0, 0, 0));
        btAbrir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAbrir.setForeground(new java.awt.Color(255, 255, 255));
        btAbrir.setMnemonic('a');
        btAbrir.setText("Abrir Caixa");
        btAbrir.setBorderPainted(false);
        btAbrir.setEnabled(false);
        btAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 27;
        gridBagConstraints.ipady = 27;
        PainelBotoes.add(btAbrir, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelBotoes, gridBagConstraints);

        PainelOperador.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operador", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        PainelOperador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        PainelOperador.setLayout(new java.awt.GridBagLayout());

        txtOperador.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelOperador.add(txtOperador, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelOperador, gridBagConstraints);

        PainelTitulo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTitulo.setLayout(new java.awt.GridBagLayout());

        lblTitulo.setBackground(new java.awt.Color(0, 0, 0));
        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        lblTitulo.setText("RESUMO DE CAIXA");
        lblTitulo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PainelTitulo.add(lblTitulo, gridBagConstraints);

        btFechar.setBackground(new java.awt.Color(0, 0, 0));
        btFechar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btFechar.setForeground(new java.awt.Color(255, 255, 255));
        btFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar.setMnemonic('F');
        btFechar.setBorderPainted(false);
        btFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 10);
        PainelTitulo.add(btFechar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        PainelTitulo.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelTitulo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirActionPerformed
        // TODO add your handling code here:
        if(!btAbrir.isEnabled()) return ;
        ItemLista i = (ItemLista)cbCaixas.getSelectedItem();
        Integer nCodigoCaixa=(Integer) i.getIndice();
        int nCodigoPDV = pdvgerenciar.CodigoPDV();
        ResultSet rsDadosCaixa = GerenciarCaixa.SaldoCaixa_ExibirPorCaixa(nCodigoCaixa);

        String cTipoOp = ( getTipoOperacao().equalsIgnoreCase("A") ? "ABERTURA" : "FECHAMENTO" ) ;

       if(!GerenciarCaixa.VerificarSeCaixaOFF(Sistema.getLojaAtual(), nCodigoCaixa)){
           MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O caixa selecionado não é um caixa off line", "Abertura de Caixa", "AVISO");
           return;
       }
       int nCodigoPDV_VinculadoCaixa =GerenciarCaixa.VerificarPDV_VinculadoAoCaixa(Sistema.getLojaAtual(), nCodigoCaixa);

       if(nCodigoPDV_VinculadoCaixa!=0 && nCodigoPDV_VinculadoCaixa!=pdvgerenciar.CodigoPDV()){
           MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O caixa ja foi aberto em outro pdv", "Abertura de Caixa", "AVISO");
           return;
       }
        if (cTipoOp.equalsIgnoreCase("ABERTURA")) {
        
            if (!UsuarioSistema.isUSuarioCaixa()) {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "PARA REALIZAR ESSA FUNÇÃO É NECESSÁRIO UM OPERADOR DE CAIXA ", "Abertura de Caixa", "AVISO");
                return;
            }
        }
        
 
       if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(null, "Confirma " + cTipoOp + " do caixa do dia " + DataHora.getData() + " com os dados informados ?", cTipoOp + " DO CAIXA", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE)==JOptionPane.YES_OPTION)
        {
            try { 
                String cControleCx="";
                if(rsDadosCaixa.next())
                {
                    cControleCx = TratarStringNula.Tratar(rsDadosCaixa.getString("controlecx"),"");

                    ResultSet rsAbrirCaixa = GerenciarCaixa.SaldoCaixa_Exibir(cControleCx);
                    boolean bRet=false;
                    if(TipoOperacao.equalsIgnoreCase("A"))                    
                        bRet= GerenciarCaixa.AbreCaixa(Date.valueOf(DataHora.getData("yyyy-MM-dd")), Sistema.getLojaAtual() ,UsuarioSistema.getIdUsuarioLogado(),(Integer)i.getIndice()  , rsAbrirCaixa, pdvgerenciar.DadosPdv().getInt("CodigoPDV"), "");
                    else
                       bRet= GerenciarCaixa.FecharCaixa(Date.valueOf(DataHora.getData("yyyy-MM-dd")), Sistema.getLojaAtual() ,UsuarioSistema.getIdUsuarioLogado(),(Integer)i.getIndice()  , cControleCx,nCodigoPDV);


                    if(bRet)
                    {
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, cTipoOp + " do Caixa realizado com sucesso. ", cTipoOp+" DE CAIXA", "INFO");
                        if(getTipoOperacao().equalsIgnoreCase("A")){
                            UsuarioSistema.setIdUsuarioLogadoCaixa(UsuarioSistema.getIdUsuarioLogado());
                            UsuarioSistema.setIdCaixaAtual(nCodigoCaixa);
                        }
                        else
                        {
                            if(nCodigoCaixa==UsuarioSistema.getIdCaixaAtual()){
                                UsuarioSistema.setIdCaixaAtual(0);
                                UsuarioSistema.setIdUsuarioLogadoCaixa(0);
                            }
                        }
                        
                        SincronizarMovimento.EnviarDadosCaixa(false, true);

                        this.dispose();
                    }
                    else
                    {
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível realizar " + cTipoOp + " o caixa ", cTipoOp + " DE CAIXA", "AVISO");
                    }
                }
            } catch (Exception e) {
                LogDinnamus.Log(e);
            }

            
        }
    }//GEN-LAST:event_btAbrirActionPerformed

    private void cbCaixasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbCaixasKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
        try {

            if(getTipoOperacao().equalsIgnoreCase("F") && lblStatus.getText().equalsIgnoreCase("Fechado") )
            {
                return;
            }                

            ItemLista i = (ItemLista) cbCaixas.getSelectedItem();
            if(i==null)
            {
                return;
            }
            Integer nCodigoCaixa=Integer.parseInt(i.getIndice().toString());
            ResultSet rs = GerenciarCaixa.ListarCaixas(Sistema.getLojaAtual(),0,nCodigoCaixa);
            if(rs.next())
            {

                String cControleCX="",NovoControleCX="";
                
                cControleCX=TratarStringNula.Tratar(rs.getString("controlecx"),"");
                
                if(!lblStatus.getText().equalsIgnoreCase("Aberto")){                  
                    NovoControleCX=GerenciarCaixa.GerarControleCx(Sistema.getLojaAtual(), UsuarioSistema.getIdUsuarioLogado(), nCodigoCaixa, pdvgerenciar.DadosPdv().getInt("codigopdv"));
                    //cControleCX=NovoControleCX;
                }else{
                    NovoControleCX=cControleCX;
                }

                int nCodigoPDV = pdvgerenciar.CodigoPDV();
                if(GerenciarCaixa.SaldoCaixa_Calcular(Date.valueOf(DataHora.getData(DataHora.FormatDataPadraoDAO)),UsuarioSistema.getIdUsuarioLogado(),nCodigoCaixa,cControleCX,Sistema.getLojaAtual(),rs.getString("status"),nCodigoPDV,NovoControleCX))
                {
                    String cStatus = TratarStringNula.Tratar(rs.getString("status"),"F");
                    AtualizarGridValores(NovoControleCX,cStatus);
                    if(getTipoOperacao().equalsIgnoreCase("A"))
                    {
                        if(cStatus.equalsIgnoreCase("F"))
                        {
                            btAbrir.setEnabled(true);
                            //btAlterarValorCaixa.setEnabled(true);
                            btAbrir.requestFocus();
                        }
                        else
                        {
                            btAbrir.setEnabled(false);
                            //btAlterarValorCaixa.setEnabled(false);
                        }
                    }
                    else
                    {
                          if(cStatus.equalsIgnoreCase("A"))
                          {
                            btAbrir.setEnabled(true);
                            btAbrir.requestFocus();
                          }
                          else
                          {
                            btAbrir.setEnabled(false);
                          }

                    }
                }
            }

        } catch (Exception e) {
                LogDinnamus.Log(e);
        }
        }
    }//GEN-LAST:event_cbCaixasKeyPressed

    private void btFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btFecharActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
            // TODO add your handling code here:
        if(!IniciouOK){
            this.dispose();
        }
    }//GEN-LAST:event_formWindowOpened
    
    @SuppressWarnings("static-access")
    protected boolean AtualizarGridValores_Iniciar()
    {
          
            
            dbgAbrirCaixa.getjTable().addKeyListener(
            new KeyListener() {
                public void keyTyped(KeyEvent e) {
                    if(e.getKeyChar()=='\n')
                    {
                        e.consume();
                        //txtValorForma.requestFocus();
                    }
                }
                public void keyPressed(KeyEvent e) {
                if(e.getKeyCode()==KeyEvent.VK_ENTER )
                    e.consume();
                }
                public void keyReleased(KeyEvent e) {}
                }
            );
            dbgAbrirCaixa.getTbDinnamuS().setModeloUsandoColecao(true);                                   
            dbgAbrirCaixa.addClColunas("conta", "Conta", 50);
            dbgAbrirCaixa.addClColunas("tipo", "TIPO", 200);
            dbgAbrirCaixa.addClColunas("valor", "VALOR", 100,true,false,dbgAbrirCaixa.Alinhamento_Direita);
            dbgAbrirCaixa.addNumberFormatMoeda("VALOR");            
            dbgAbrirCaixa.setAjustaColunaAoPainel(true);
            dbgAbrirCaixa.getjTable().setFont(new Font("Courier New", Font.BOLD, 20));
            return true;
            
    }    
    protected boolean AtualizarGridValores(String cControleCx, String cSituacaoCaixa)
    {
        boolean bRet=false;
        try {           

            //dbgAbrirCaixa.setRsDados(null);
            //dbgAbrirCaixa.IniciarTabela(), 50 , "codigo", 50,true);
            String SQL = "select conta as Conta, descricao as TIPO ,fechamento as VALOR, Codigo from saldocaixa where " +  (cControleCx.equalsIgnoreCase("") ? " 1<>1 " : "controlecx='"+ cControleCx +"'");
            dbgAbrirCaixa.setRsDados(DAO_RepositorioLocal.GerarResultSet(SQL,ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY));                       
            //dbgAbrirCaixa.getjTable().getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            
            bRet=true;
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
        return bRet;
    }
    protected String InfoMovimentoCaixa(String cControleCx, String cTipoOperacao )
    {
        String cInfoCaixa="";

        try {

            ResultSet rsDadosMovimento = GerenciarCaixa.AbrirCaixa_Consultar(cControleCx, cTipoOperacao);
            if(rsDadosMovimento.next())
            {

                 cInfoCaixa =  (cTipoOperacao.equalsIgnoreCase("A") ?  "Aberto" : "Fechado")+ " em " +  DataHora.getData(DataHora.FormatDataPadrao, rsDadosMovimento.getDate("Data")) + " às " + DataHora.getHora("HH:mm:ss", rsDadosMovimento.getTimestamp("Hora")) ;
            }
            else
            {
                cInfoCaixa = DataHora.getData();
            }


        } catch (Exception e) {
            LogDinnamus.Log(e);
        }

        return cInfoCaixa;
    }
    private boolean AcionarTecla(String T){
        boolean Ret = false;
        try {
            if(T.equalsIgnoreCase("ESCAPE")){
                btFecharActionPerformed(null);
            }else if(T.equalsIgnoreCase("F3")){
                btAbrirActionPerformed(null);
            }
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
      private boolean IniciarUI_TeclaAtalho(){
        try {
         
            AbstractAction TeclaAtalhos  = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                        String Tecla = e.getSource().toString();   
                        AcionarTecla(Tecla);
                        
                }
            };      
            String Teclas[] ={"ESCAPE" ,"F3"};            
            DefinirAtalhos2.Definir(PainelPrincipal, Teclas, TeclaAtalhos);            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }   
    protected boolean IniciarUI()
    {
        boolean bRet=false;
        AtualizarGridValores_Iniciar();

        try {
            //controleteclas.SetarTodosOsBotoes(this.getContentPane());
            String cNomeModulo = (getTipoOperacao().equalsIgnoreCase("A") ? "Abrir Caixa" : "Fechamento");
            if(ValidarAcessoAoProcesso.Verificar((new JFrame()),UsuarioSistema.getIdUsuarioLogado(),(getTipoOperacao().equalsIgnoreCase("A")  ? "abrircaixa" : "FechamentoCaixa") ,Sistema.getLojaAtual(), false, "Controle de Acesso - " + cNomeModulo  )>0)
            {
                String cStatus="";
                if(UsuarioSistema.isUSuarioCaixa() || UsuarioSistema.isSuperUsuario() || UsuarioSistema.isUsuarioGerente())
                {
                    ResultSet rs = GerenciarCaixa.ListarCaixas(Sistema.getLojaAtual(), 0 ,0,pdvgerenciar.CodigoPDV(),false);
                    if(!rs.next())
                    {
                        
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não existe nenhum caixa cadastrado no sistema", cNomeModulo, "AVISO");
                        return false;
                    }
                    else
                    {
                        
                        rs.beforeFirst();
                    }                        
                    if (MetodosUI_Auxiliares_1.PreencherCombo(cbCaixas, rs, "nome", "Codigo",  true))
                    {
                        rs.beforeFirst();
                        boolean bCaixaAberto=false;
                        if(UsuarioSistema.isUSuarioCaixa())
                        {   
                            while(rs.next())
                            {
                                cStatus= TratarStringNula.Tratar(rs.getString("status"),"F");
                                if(cStatus.equalsIgnoreCase("A") && rs.getInt("operadorcx")==UsuarioSistema.getIdUsuarioLogado())
                                {
                                    MetodosUI_Auxiliares_1.SetarOpcaoCombo(cbCaixas, rs.getInt("codigo"));
                                    bCaixaAberto=true;
                                    break;
                                }
                            }
                        }
                        else
                        {
                            rs.beforeFirst();
                            if(rs.next())
                            {
                                cStatus=rs.getString("status");
                                bCaixaAberto = ( TratarStringNula.Tratar(rs.getString("status"),"F").equalsIgnoreCase("A") ? true : false);
                            }
                        }                        
                        if(bCaixaAberto)
                            lblStatus.setText("ABERTO");
                        else
                        {
                            rs.first();
                            lblStatus.setText( TratarStringNula.Tratar(rs.getString("status"),"F").equalsIgnoreCase("A") ? "ABERTO" : "FECHADO" );
                        }
                        String cDataAbertura=DataHora.getData("yyyy-MM-dd");
                        Integer nCodigoCaixa=0;
                        String cControleCx ="";
                        txtData.setValue(DataHora.getData());
                        txtOperador.setText(UsuarioSistema.getNomeUsuario());
                        if(bCaixaAberto)
                        {
                            if(UsuarioSistema.isUSuarioCaixa())
                            {

                                cbCaixas.setEnabled(false);
                            }
                            else
                            {
                                cbCaixas.setEnabled(true);
                            }
                            nCodigoCaixa  = (Integer)rs.getInt("codigo");
                            cControleCx = TratarStringNula.Tratar(rs.getString("Controlecx"),"");
                        }
                        else
                        {
                           cbCaixas.setEnabled(true);
                           cControleCx=GerenciarCaixa.GerarControleCx(Sistema.getLojaAtual(), UsuarioSistema.getIdUsuarioLogado(), 0, pdvgerenciar.DadosPdv().getInt("CodigoPdv"));
                        }
                        int nCodigoPDV = pdvgerenciar.CodigoPDV();
                        if(GerenciarCaixa.SaldoCaixa_Calcular(Date.valueOf(cDataAbertura),UsuarioSistema.getIdUsuarioLogado(),nCodigoCaixa,cControleCx,Sistema.getLojaAtual(),(bCaixaAberto ? "A" :"F" ),nCodigoPDV,""))
                        {
                            if(bCaixaAberto)
                                AtualizarGridValores(cControleCx,TratarStringNula.Tratar(rs.getString("status"),"F"));
                            else
                                AtualizarGridValores("","F");

                            bRet=true;
                        }
                        
                        txtData.setText(InfoMovimentoCaixa(cControleCx,cStatus));
                    }
                }
                else
                {
                    MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Operador não tem perfil para acessar este módulo", "Acesso Negado", "INFO");
                }
            }
            else
            {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Acesso negado", cNomeModulo, "AVISO");
            }
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }

        return bRet;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelBotoes;
    private javax.swing.JPanel PainelCaixasDisponivel;
    private javax.swing.JPanel PainelDadosCaixa;
    private javax.swing.JPanel PainelGrid;
    private javax.swing.JPanel PainelOperador;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelTitulo;
    private javax.swing.JButton btAbrir;
    private javax.swing.JButton btFechar;
    private javax.swing.JComboBox cbCaixas;
    private br.com.ui.JTableDinnamuS dbgAbrirCaixa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JFormattedTextField txtData;
    private javax.swing.JTextField txtOperador;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the TipoOperacao
     */
    public String getTipoOperacao() {
        return TipoOperacao;
    }

    /**
     * @param TipoOperacao the TipoOperacao to set
     */
    public void setTipoOperacao(String TipoOperacao) {
        this.TipoOperacao = TipoOperacao;
    }

}
