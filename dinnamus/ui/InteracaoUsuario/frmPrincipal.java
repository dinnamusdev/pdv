/*
 * frmPrincipal.java
 *
 * Created on 18 de Agosto de 2008, 16:51
 */
package dinnamus.ui.InteracaoUsuario;

import br.String.ManipulacaoString;
import br.com.ecf.ECFDinnamuS;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.data.DataHora;
import MetodosDeNegocio.RepositorioLocal.DAO_RepositorioLocal_Inicializar;
import dinnamus.infraestrutura.inicializacao.GerarCargaInicial;
import br.infraestrurura.inicializacao.VerificarArquivoCFG;
import MetodosDeNegocio.Sincronismo.Sincronismo;
import MetodosDeNegocio.Sincronismo.SincronizarMovimento;
import dinnamus.metodosnegocio.licencas.Licenca;
import MetodosDeNegocio.Seguranca.UsuarioSistema;
import MetodosDeNegocio.Venda.GerenciarCaixa;
import MetodosDeNegocio.ecf.ECFAtual;
import MetodosDeNegocio.Venda.ManutencaoBancoLocal;
import MetodosDeNegocio.Venda.VendaEmEdicao;
import MetodosDeNegocio.Venda.pdvgerenciar;
import br.TratamentoNulo.TratamentoNulos;
import br.com.ui.BloquearTela;
import br.com.ui.MetodosUI_Auxiliares_1;
import dinnamus.ui.InteracaoUsuario.Seguranca.frmLogin;
import dinnamus.ui.InteracaoUsuario.Venda.frmAbrirCaixa;
import dinnamus.ui.InteracaoUsuario.Venda.frmClienteListagem;
import dinnamus.ui.InteracaoUsuario.Venda.frmPDV_Simples;
import dinnamus.ui.InteracaoUsuario.Venda.frmResumoCaixa;
import dinnamus.ui.infraestrutura.frmConfigurarImpressora;
import dinnamus.ui.infraestrutura.frmSelecionarLojaAtual;
import dinnamus.ui.InteracaoUsuario.nfe.*;
import br.com.ui.ImagemTratamento;
import br.ui.teclas.DefinirAtalhos2;
import br.valor.formatar.FormatarNumero;
import com.boletos.BoletosInfraUI;
import com.fincatto.nfe310.classes.NFUnidadeFederativa;
import com.infra.RestInfraestrutura;
import com.nfce.config.NFCE_Contingencia;
import com.nfce.consultar.NFCE_ConsultarStatus;
import com.nfce.envio.EnviarNFCe;
import com.nfce.envio.NFCe_ConfiguracaoAmbiente;
import dinnamus.metodosnegocio.venda.caixa.PDVComprovante;
import dinnamus.ui.InteracaoUsuario.nfce.NFCE_RepositorioLocal;
import dinnamus.ui.InteracaoUsuario.nfce.frmNFCE_Listagem;
import dinnamus.ui.InteracaoUsuario.nfce.frmNFCe_Config;
import dinnamus.ui.InteracaoUsuario.nfce.frmNFCe_Config_Pdv_Historico_Contingencia;
import dinnamus.ui.InteracaoUsuario.nfce.frmNFCe_ExportarXmlParametros;
import dinnamus.ui.InteracaoUsuario.nfce.frmNFCe_RelatorioParametros;

import dinnamus.ui.InteracaoUsuario.prevenda.frmPDV_PreVenda;
import dinnamus.ui.conectividade.frmBoletosDSW;
import integracao.infra.ConectividadePDV;
 
 
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jdesktop.swingx.JXTaskPane;
import com.boletos.iEvento;
import com.inotif.NotificarProcesso;
import dinnamus.ui.conectividade.frmProcessamentoConectividade;
import integracao.ui.frm.frmConectividadePDVConfigurar;
import integracao.ui.frm.frmConectividadePDVGerenciar;
import java.awt.event.ActionListener;

/**
 *
 * @author desenvolvedor
 */
public class frmPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form frmPrincipal
     */
    private boolean FechouAviso=false;
    private boolean TeclasFuncoes = true;
    private boolean ExecutarTarefa=false;
    private RestInfraestrutura restInfraestrutura=new RestInfraestrutura();
    private BloquearTela bloqtela;
    public frmPrincipal() {
        initComponents();
        bloqtela=new BloquearTela();

        //this.update(this.getGraphics());        
        //BarraMenuPrincipal.setVisible(false);

        
        
        java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        lblLogoApp.setVisible(false);
        jxtpDinnamus.setVisible(false);
        InicializarUI();
        
       // ((BasicInternalFrameUI)PainelInterno_Principal.getUI()).setNorthPane(null);
        //PainelTopo2.add();
        //PainelInterno1.setContentPane(new Topo());

        //UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        MenuPrincipalPopup = new javax.swing.JPopupMenu();
        jmVenda = new javax.swing.JMenu();
        menuAbrirCaixa = new javax.swing.JMenuItem();
        menuPDV = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        menuResumo = new javax.swing.JMenuItem();
        menuFecharCaixa = new javax.swing.JMenuItem();
        Fiscal = new javax.swing.JMenu();
        LeituraX = new javax.swing.JMenuItem();
        ReducaoZ = new javax.swing.JMenuItem();
        CancelarCupom = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        menuGerarArqCArga = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        NFCe = new javax.swing.JMenu();
        ConfigNFCe = new javax.swing.JMenuItem();
        Contingencia = new javax.swing.JMenuItem();
        NFCeEmitidas = new javax.swing.JMenuItem();
        AtivarDesativarAviso = new javax.swing.JMenuItem();
        RepositorioLocalNFCe = new javax.swing.JMenuItem();
        jmSincronismo = new javax.swing.JMenu();
        miEnvioMov = new javax.swing.JMenuItem();
        miRecepCadastros = new javax.swing.JMenuItem();
        mGerarCargainicial = new javax.swing.JMenuItem();
        jmSair = new javax.swing.JMenu();
        menuLogout = new javax.swing.JMenuItem();
        menuSair = new javax.swing.JMenuItem();
        alphaPainter1 = new org.jdesktop.swingx.painter.AlphaPainter();
        jtxpECF = new org.jdesktop.swingx.JXTaskPane();
        btLeituraX = new javax.swing.JButton();
        btReducaoZ = new javax.swing.JButton();
        PainelCompleto = new javax.swing.JPanel();
        PainelTopo = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btSair = new javax.swing.JButton();
        lbltitulo = new javax.swing.JLabel();
        BotaoMenu = new javax.swing.JButton();
        PainelCorpo = new javax.swing.JPanel();
        PainelBotoes = new javax.swing.JPanel();
        PainelLogo = new javax.swing.JPanel();
        lblLogoApp = new javax.swing.JLabel();
        jXTPMenu = new org.jdesktop.swingx.JXTaskPaneContainer();
        jtxpCaixa = new org.jdesktop.swingx.JXTaskPane();
        btAbrirCaixa = new javax.swing.JButton();
        btResumo = new javax.swing.JButton();
        btFecharCaixa = new javax.swing.JButton();
        jtxpVenda = new org.jdesktop.swingx.JXTaskPane();
        btPDV = new javax.swing.JButton();
        btClientes = new javax.swing.JButton();
        btPrevenda = new javax.swing.JButton();
        jtxpNFCE = new org.jdesktop.swingx.JXTaskPane();
        btHistContingencia = new javax.swing.JButton();
        btNFCeEmitidas = new javax.swing.JButton();
        btResumoNFCE = new javax.swing.JButton();
        btDownloadNFCe = new javax.swing.JButton();
        jtxpNFE = new org.jdesktop.swingx.JXTaskPane();
        btNFeEmitidas = new javax.swing.JButton();
        btResumoNFe = new javax.swing.JButton();
        btDownloadNFe = new javax.swing.JButton();
        jtxpConfiguracao = new org.jdesktop.swingx.JXTaskPane();
        btConfigPDV = new javax.swing.JButton();
        btConfigImpressora = new javax.swing.JButton();
        btConfigNFCe = new javax.swing.JButton();
        btConectividade = new javax.swing.JButton();
        jtxpSincronismo = new org.jdesktop.swingx.JXTaskPane();
        btEnviarMov = new javax.swing.JButton();
        bReceberCadastro = new javax.swing.JButton();
        jxtpUsuario = new org.jdesktop.swingx.JXTaskPane();
        btLogout = new javax.swing.JButton();
        jxtpAvisos = new org.jdesktop.swingx.JXTaskPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        lblAvisosNFCe = new javax.swing.JTextArea();
        btEnviarContigencia = new javax.swing.JButton();
        jxtpRetaguardaWeb = new org.jdesktop.swingx.JXTaskPane();
        btConfigurar = new javax.swing.JButton();
        jxtpDinnamus = new org.jdesktop.swingx.JXTaskPane();
        btBoletosDSW = new javax.swing.JButton();
        btBoletosDSW1 = new javax.swing.JButton();
        PainelBarraStatus = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        lblLoja = new javax.swing.JLabel();
        lblPDV = new javax.swing.JLabel();
        lblCaixa = new javax.swing.JLabel();
        lblNomeHost = new javax.swing.JLabel();
        lblTitulo = new javax.swing.JLabel();

        jmVenda.setMnemonic('V');
        jmVenda.setText("Venda");
        jmVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmVendaActionPerformed(evt);
            }
        });

        menuAbrirCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_edit.png"))); // NOI18N
        menuAbrirCaixa.setText("Abrir Caixa");
        menuAbrirCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAbrirCaixaActionPerformed(evt);
            }
        });
        jmVenda.add(menuAbrirCaixa);

        menuPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/cart_put.png"))); // NOI18N
        menuPDV.setText("PDV");
        menuPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuPDVActionPerformed(evt);
            }
        });
        jmVenda.add(menuPDV);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/impressora.png"))); // NOI18N
        jMenuItem7.setText("Pré-Venda");
        jMenuItem7.setEnabled(false);
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jmVenda.add(jMenuItem7);

        menuResumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        menuResumo.setText("Resumo Caixa");
        menuResumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuResumoActionPerformed(evt);
            }
        });
        jmVenda.add(menuResumo);

        menuFecharCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_link.png"))); // NOI18N
        menuFecharCaixa.setText("Fechar Caixa");
        menuFecharCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuFecharCaixaActionPerformed(evt);
            }
        });
        jmVenda.add(menuFecharCaixa);

        Fiscal.setText("Fiscal");

        LeituraX.setText("Leitura X");
        LeituraX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeituraXActionPerformed(evt);
            }
        });
        Fiscal.add(LeituraX);

        ReducaoZ.setText("Redução Z");
        ReducaoZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReducaoZActionPerformed(evt);
            }
        });
        Fiscal.add(ReducaoZ);

        CancelarCupom.setText("Cancelar Cupom Fiscal");
        CancelarCupom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarCupomActionPerformed(evt);
            }
        });
        Fiscal.add(CancelarCupom);

        jmVenda.add(Fiscal);

        jMenu5.setText("Configurações");

        jMenuItem2.setText("PDV");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuItem3.setText("Impressora");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem3);

        menuGerarArqCArga.setText("Gerar Arquivo Carga PDV");
        menuGerarArqCArga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuGerarArqCArgaActionPerformed(evt);
            }
        });
        jMenu5.add(menuGerarArqCArga);

        jMenuItem9.setText("Otimização Banco Local");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem9);

        jmVenda.add(jMenu5);

        jMenuItem8.setText("Licença de Uso");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jmVenda.add(jMenuItem8);

        NFCe.setText("NFCe");

        ConfigNFCe.setText("Configurar NFCe");
        ConfigNFCe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigNFCeActionPerformed(evt);
            }
        });
        NFCe.add(ConfigNFCe);

        Contingencia.setText("Contingência");
        Contingencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ContingenciaActionPerformed(evt);
            }
        });
        NFCe.add(Contingencia);

        NFCeEmitidas.setText("NFCe Emitidas");
        NFCeEmitidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NFCeEmitidasActionPerformed(evt);
            }
        });
        NFCe.add(NFCeEmitidas);

        AtivarDesativarAviso.setText("Ativar/Desativar Avisos");
        AtivarDesativarAviso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtivarDesativarAvisoActionPerformed(evt);
            }
        });
        NFCe.add(AtivarDesativarAviso);

        RepositorioLocalNFCe.setText("Preprar Repositório Local NFCe ");
        RepositorioLocalNFCe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RepositorioLocalNFCeActionPerformed(evt);
            }
        });
        NFCe.add(RepositorioLocalNFCe);

        jmVenda.add(NFCe);

        MenuPrincipalPopup.add(jmVenda);

        jmSincronismo.setMnemonic('S');
        jmSincronismo.setText("Sincronizar PDV");

        miEnvioMov.setText("Envio do Movimento");
        miEnvioMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miEnvioMovActionPerformed(evt);
            }
        });
        jmSincronismo.add(miEnvioMov);

        miRecepCadastros.setText("Recepção de Cadastros");
        miRecepCadastros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miRecepCadastrosActionPerformed(evt);
            }
        });
        jmSincronismo.add(miRecepCadastros);

        mGerarCargainicial.setText("Gerar carga inicial retaguarda web");
        mGerarCargainicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mGerarCargainicialActionPerformed(evt);
            }
        });
        jmSincronismo.add(mGerarCargainicial);

        MenuPrincipalPopup.add(jmSincronismo);

        jmSair.setMnemonic('r');
        jmSair.setText("Sair");
        jmSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jmSairMouseClicked(evt);
            }
        });
        jmSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmSairActionPerformed(evt);
            }
        });

        menuLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/lock.png"))); // NOI18N
        menuLogout.setText("Logout - F10");
        menuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogoutActionPerformed(evt);
            }
        });
        jmSair.add(menuLogout);

        menuSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        menuSair.setText("Sair - [ESC]");
        menuSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSairActionPerformed(evt);
            }
        });
        jmSair.add(menuSair);

        MenuPrincipalPopup.add(jmSair);

        jtxpECF.setCollapsed(true);
        jtxpECF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/impressoraFiscal.png"))); // NOI18N
        jtxpECF.setTitle("ECF");
        jtxpECF.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpECFMouseClicked(evt);
            }
        });

        btLeituraX.setBackground(new java.awt.Color(0, 0, 0));
        btLeituraX.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btLeituraX.setForeground(new java.awt.Color(255, 255, 255));
        btLeituraX.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/printer_go.png"))); // NOI18N
        btLeituraX.setText("Leit. X [F6]");
        btLeituraX.setBorderPainted(false);
        btLeituraX.setFocusable(false);
        btLeituraX.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btLeituraX.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btLeituraX.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btLeituraX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeituraXActionPerformed(evt);
            }
        });
        jtxpECF.getContentPane().add(btLeituraX);

        btReducaoZ.setBackground(new java.awt.Color(0, 0, 0));
        btReducaoZ.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btReducaoZ.setForeground(new java.awt.Color(255, 255, 255));
        btReducaoZ.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/printer_lock.png"))); // NOI18N
        btReducaoZ.setText("Red. Z [F7]");
        btReducaoZ.setBorderPainted(false);
        btReducaoZ.setFocusable(false);
        btReducaoZ.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btReducaoZ.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btReducaoZ.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btReducaoZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReducaoZActionPerformed(evt);
            }
        });
        jtxpECF.getContentPane().add(btReducaoZ);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("DinnamuS 2.0 - build 2011.02.24");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setUndecorated(true);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                evtAbrirJanela(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelCompleto.setLayout(new java.awt.GridBagLayout());

        PainelTopo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTopo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        PainelTopo.setForeground(new java.awt.Color(255, 255, 255));
        PainelTopo.setLayout(new java.awt.GridBagLayout());

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/barra logo dinnamus.JPG"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        PainelTopo.add(jLabel3, gridBagConstraints);

        btSair.setBackground(new java.awt.Color(0, 0, 0));
        btSair.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSair.setForeground(new java.awt.Color(255, 255, 255));
        btSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btSair.setMnemonic('F');
        btSair.setText("Sair");
        btSair.setBorderPainted(false);
        btSair.setMargin(new java.awt.Insets(0, 0, 0, 4));
        btSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSairActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 0.1;
        PainelTopo.add(btSair, gridBagConstraints);

        lbltitulo.setBackground(new java.awt.Color(255, 255, 204));
        lbltitulo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbltitulo.setText("AUTOMAÇÃO - [ PRINCIPAL ]");
        lbltitulo.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 204), 1, true));
        lbltitulo.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        PainelTopo.add(lbltitulo, gridBagConstraints);

        BotaoMenu.setBackground(new java.awt.Color(0, 0, 0));
        BotaoMenu.setForeground(new java.awt.Color(255, 255, 255));
        BotaoMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/dinnamus.png"))); // NOI18N
        BotaoMenu.setBorderPainted(false);
        BotaoMenu.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        BotaoMenu.setOpaque(false);
        BotaoMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoMenuActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        PainelTopo.add(BotaoMenu, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        PainelCompleto.add(PainelTopo, gridBagConstraints);

        PainelCorpo.setBackground(new java.awt.Color(0, 0, 0));
        PainelCorpo.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(153, 153, 153), null));
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelBotoes.setBackground(new java.awt.Color(0, 0, 0));
        PainelBotoes.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelCorpo.add(PainelBotoes, gridBagConstraints);

        PainelLogo.setBackground(new java.awt.Color(0, 0, 0));
        PainelLogo.setLayout(new java.awt.GridBagLayout());

        lblLogoApp.setBackground(new java.awt.Color(0, 0, 0));
        lblLogoApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoApp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/logodinnamus.png"))); // NOI18N
        lblLogoApp.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelLogo.add(lblLogoApp, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        PainelCorpo.add(PainelLogo, gridBagConstraints);

        jXTPMenu.setBackground(new java.awt.Color(0, 0, 0));
        jXTPMenu.setOpaque(false);
        jXTPMenu.setAutoscrolls(true);

        jtxpCaixa.setBackground(new java.awt.Color(0, 0, 0));
        jtxpCaixa.setCollapsed(true);
        jtxpCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_edit.png"))); // NOI18N
        jtxpCaixa.setTitle("Caixa");
        jtxpCaixa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpCaixaMouseClicked(evt);
            }
        });

        btAbrirCaixa.setBackground(new java.awt.Color(0, 0, 0));
        btAbrirCaixa.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btAbrirCaixa.setForeground(new java.awt.Color(255, 255, 255));
        btAbrirCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_edit.png"))); // NOI18N
        btAbrirCaixa.setText("Abrir [F2]");
        btAbrirCaixa.setBorderPainted(false);
        btAbrirCaixa.setFocusable(false);
        btAbrirCaixa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btAbrirCaixa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btAbrirCaixa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btAbrirCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirCaixaActionPerformed(evt);
            }
        });
        jtxpCaixa.getContentPane().add(btAbrirCaixa);

        btResumo.setBackground(new java.awt.Color(0, 0, 0));
        btResumo.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btResumo.setForeground(new java.awt.Color(255, 255, 255));
        btResumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        btResumo.setText("Resumo [F4]");
        btResumo.setBorderPainted(false);
        btResumo.setFocusable(false);
        btResumo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btResumo.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btResumo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btResumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResumoActionPerformed(evt);
            }
        });
        jtxpCaixa.getContentPane().add(btResumo);

        btFecharCaixa.setBackground(new java.awt.Color(0, 0, 0));
        btFecharCaixa.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btFecharCaixa.setForeground(new java.awt.Color(255, 255, 255));
        btFecharCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/calculator_link.png"))); // NOI18N
        btFecharCaixa.setText("Fechar [F5]");
        btFecharCaixa.setBorderPainted(false);
        btFecharCaixa.setFocusable(false);
        btFecharCaixa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btFecharCaixa.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btFecharCaixa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btFecharCaixa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFecharCaixaActionPerformed(evt);
            }
        });
        jtxpCaixa.getContentPane().add(btFecharCaixa);

        jXTPMenu.add(jtxpCaixa);

        jtxpVenda.setCollapsed(true);
        jtxpVenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shopping cart.png"))); // NOI18N
        jtxpVenda.setScrollOnExpand(true);
        jtxpVenda.setTitle("Venda");
        jtxpVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpVendaMouseClicked(evt);
            }
        });

        btPDV.setBackground(new java.awt.Color(0, 0, 0));
        btPDV.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btPDV.setForeground(new java.awt.Color(255, 255, 255));
        btPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/cart_put.png"))); // NOI18N
        btPDV.setText("PDV [F3]");
        btPDV.setBorderPainted(false);
        btPDV.setFocusable(false);
        btPDV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btPDV.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btPDV.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPDVActionPerformed(evt);
            }
        });
        jtxpVenda.getContentPane().add(btPDV);

        btClientes.setBackground(new java.awt.Color(0, 0, 0));
        btClientes.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btClientes.setForeground(new java.awt.Color(255, 255, 255));
        btClientes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/User group.png"))); // NOI18N
        btClientes.setText("Clientes [F8]");
        btClientes.setBorderPainted(false);
        btClientes.setFocusable(false);
        btClientes.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btClientes.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btClientesActionPerformed(evt);
            }
        });
        jtxpVenda.getContentPane().add(btClientes);

        btPrevenda.setBackground(new java.awt.Color(0, 0, 0));
        btPrevenda.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btPrevenda.setForeground(new java.awt.Color(255, 255, 255));
        btPrevenda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/impressora.png"))); // NOI18N
        btPrevenda.setText("PRE-VENDA [F9]");
        btPrevenda.setBorderPainted(false);
        btPrevenda.setFocusable(false);
        btPrevenda.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btPrevenda.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btPrevenda.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btPrevenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrevendaActionPerformed(evt);
            }
        });
        jtxpVenda.getContentPane().add(btPrevenda);

        jXTPMenu.add(jtxpVenda);

        jtxpNFCE.setBackground(new java.awt.Color(0, 0, 0));
        jtxpNFCE.setCollapsed(true);
        jtxpNFCE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/InteracaoUsuario/nfce/logo-nfce-xs.png"))); // NOI18N
        jtxpNFCE.setTitle("NFC-e");
        jtxpNFCE.setToolTipText("");
        jtxpNFCE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpNFCEMouseClicked(evt);
            }
        });

        btHistContingencia.setBackground(new java.awt.Color(0, 0, 0));
        btHistContingencia.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btHistContingencia.setForeground(new java.awt.Color(255, 255, 255));
        btHistContingencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Uploadoffline.png"))); // NOI18N
        btHistContingencia.setText("Hist. Contingência");
        btHistContingencia.setBorderPainted(false);
        btHistContingencia.setFocusable(false);
        btHistContingencia.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btHistContingencia.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btHistContingencia.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btHistContingencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btHistContingenciaActionPerformed(evt);
            }
        });
        jtxpNFCE.getContentPane().add(btHistContingencia);

        btNFCeEmitidas.setBackground(new java.awt.Color(0, 0, 0));
        btNFCeEmitidas.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btNFCeEmitidas.setForeground(new java.awt.Color(255, 255, 255));
        btNFCeEmitidas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/qrcode_1.png"))); // NOI18N
        btNFCeEmitidas.setText("NFC-e Emitidas");
        btNFCeEmitidas.setBorderPainted(false);
        btNFCeEmitidas.setFocusable(false);
        btNFCeEmitidas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btNFCeEmitidas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btNFCeEmitidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNFCeEmitidasActionPerformed(evt);
            }
        });
        jtxpNFCE.getContentPane().add(btNFCeEmitidas);

        btResumoNFCE.setBackground(new java.awt.Color(0, 0, 0));
        btResumoNFCE.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btResumoNFCE.setForeground(new java.awt.Color(255, 255, 255));
        btResumoNFCE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        btResumoNFCE.setText("Resumo de NFC-e");
        btResumoNFCE.setBorderPainted(false);
        btResumoNFCE.setFocusable(false);
        btResumoNFCE.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btResumoNFCE.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btResumoNFCE.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btResumoNFCE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResumoNFCEActionPerformed(evt);
            }
        });
        jtxpNFCE.getContentPane().add(btResumoNFCE);

        btDownloadNFCe.setBackground(new java.awt.Color(0, 0, 0));
        btDownloadNFCe.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btDownloadNFCe.setForeground(new java.awt.Color(255, 255, 255));
        btDownloadNFCe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Download.png"))); // NOI18N
        btDownloadNFCe.setText("Exportar NFC-e");
        btDownloadNFCe.setBorderPainted(false);
        btDownloadNFCe.setFocusable(false);
        btDownloadNFCe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDownloadNFCe.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btDownloadNFCe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDownloadNFCeActionPerformed(evt);
            }
        });
        jtxpNFCE.getContentPane().add(btDownloadNFCe);

        jXTPMenu.add(jtxpNFCE);

        jtxpNFE.setBackground(new java.awt.Color(0, 0, 0));
        jtxpNFE.setCollapsed(true);
        jtxpNFE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/InteracaoUsuario/nfce/logo-nfce-xs.png"))); // NOI18N
        jtxpNFE.setTitle("NF-e");
        jtxpNFE.setToolTipText("");
        jtxpNFE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpNFEMouseClicked(evt);
            }
        });

        btNFeEmitidas.setBackground(new java.awt.Color(0, 0, 0));
        btNFeEmitidas.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btNFeEmitidas.setForeground(new java.awt.Color(255, 255, 255));
        btNFeEmitidas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/qrcode_1.png"))); // NOI18N
        btNFeEmitidas.setText("NFe Emitidas");
        btNFeEmitidas.setBorderPainted(false);
        btNFeEmitidas.setFocusable(false);
        btNFeEmitidas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btNFeEmitidas.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btNFeEmitidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNFeEmitidasActionPerformed(evt);
            }
        });
        jtxpNFE.getContentPane().add(btNFeEmitidas);

        btResumoNFe.setBackground(new java.awt.Color(0, 0, 0));
        btResumoNFe.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btResumoNFe.setForeground(new java.awt.Color(255, 255, 255));
        btResumoNFe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sum.png"))); // NOI18N
        btResumoNFe.setText("Resumo de NF-e");
        btResumoNFe.setBorderPainted(false);
        btResumoNFe.setFocusable(false);
        btResumoNFe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btResumoNFe.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btResumoNFe.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btResumoNFe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btResumoNFeActionPerformed(evt);
            }
        });
        jtxpNFE.getContentPane().add(btResumoNFe);

        btDownloadNFe.setBackground(new java.awt.Color(0, 0, 0));
        btDownloadNFe.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btDownloadNFe.setForeground(new java.awt.Color(255, 255, 255));
        btDownloadNFe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Download.png"))); // NOI18N
        btDownloadNFe.setText("Exportar NF-e");
        btDownloadNFe.setBorderPainted(false);
        btDownloadNFe.setFocusable(false);
        btDownloadNFe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDownloadNFe.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btDownloadNFe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDownloadNFeActionPerformed(evt);
            }
        });
        jtxpNFE.getContentPane().add(btDownloadNFe);

        jXTPMenu.add(jtxpNFE);

        jtxpConfiguracao.setCollapsed(true);
        jtxpConfiguracao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/gear.png"))); // NOI18N
        jtxpConfiguracao.setTitle("Configurações");
        jtxpConfiguracao.setToolTipText("");
        jtxpConfiguracao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpConfiguracaoMouseClicked(evt);
            }
        });

        btConfigPDV.setBackground(new java.awt.Color(0, 0, 0));
        btConfigPDV.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btConfigPDV.setForeground(new java.awt.Color(255, 255, 255));
        btConfigPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/gear.png"))); // NOI18N
        btConfigPDV.setText("PDV");
        btConfigPDV.setBorderPainted(false);
        btConfigPDV.setFocusable(false);
        btConfigPDV.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btConfigPDV.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btConfigPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfigPDVActionPerformed(evt);
            }
        });
        jtxpConfiguracao.getContentPane().add(btConfigPDV);

        btConfigImpressora.setBackground(new java.awt.Color(0, 0, 0));
        btConfigImpressora.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btConfigImpressora.setForeground(new java.awt.Color(255, 255, 255));
        btConfigImpressora.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/impressora.png"))); // NOI18N
        btConfigImpressora.setText("Impressora");
        btConfigImpressora.setBorderPainted(false);
        btConfigImpressora.setFocusable(false);
        btConfigImpressora.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btConfigImpressora.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btConfigImpressora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfigImpressoraActionPerformed(evt);
            }
        });
        jtxpConfiguracao.getContentPane().add(btConfigImpressora);

        btConfigNFCe.setBackground(new java.awt.Color(0, 0, 0));
        btConfigNFCe.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btConfigNFCe.setForeground(new java.awt.Color(255, 255, 255));
        btConfigNFCe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/InteracaoUsuario/nfce/logo-nfce-xs.png"))); // NOI18N
        btConfigNFCe.setText("Config");
        btConfigNFCe.setBorderPainted(false);
        btConfigNFCe.setFocusable(false);
        btConfigNFCe.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btConfigNFCe.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btConfigNFCe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfigNFCeActionPerformed(evt);
            }
        });
        jtxpConfiguracao.getContentPane().add(btConfigNFCe);

        btConectividade.setBackground(new java.awt.Color(0, 0, 0));
        btConectividade.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btConectividade.setForeground(new java.awt.Color(255, 255, 255));
        btConectividade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-trabalho-remoto-40.png"))); // NOI18N
        btConectividade.setText("Conectividade");
        btConectividade.setBorderPainted(false);
        btConectividade.setFocusable(false);
        btConectividade.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btConectividade.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btConectividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConectividadeActionPerformed(evt);
            }
        });
        jtxpConfiguracao.getContentPane().add(btConectividade);

        jXTPMenu.add(jtxpConfiguracao);

        jtxpSincronismo.setCollapsed(true);
        jtxpSincronismo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Sync.gif"))); // NOI18N
        jtxpSincronismo.setTitle("Sincronismo");
        jtxpSincronismo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtxpSincronismoMouseClicked(evt);
            }
        });

        btEnviarMov.setBackground(new java.awt.Color(0, 0, 0));
        btEnviarMov.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btEnviarMov.setForeground(new java.awt.Color(255, 255, 255));
        btEnviarMov.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Upload.png"))); // NOI18N
        btEnviarMov.setText("Enviar Movimento");
        btEnviarMov.setBorderPainted(false);
        btEnviarMov.setFocusable(false);
        btEnviarMov.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEnviarMov.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btEnviarMov.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarMovActionPerformed(evt);
            }
        });
        jtxpSincronismo.getContentPane().add(btEnviarMov);

        bReceberCadastro.setBackground(new java.awt.Color(0, 0, 0));
        bReceberCadastro.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        bReceberCadastro.setForeground(new java.awt.Color(255, 255, 255));
        bReceberCadastro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Download.png"))); // NOI18N
        bReceberCadastro.setText("Receber Cadastros");
        bReceberCadastro.setBorderPainted(false);
        bReceberCadastro.setFocusable(false);
        bReceberCadastro.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bReceberCadastro.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        bReceberCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bReceberCadastroActionPerformed(evt);
            }
        });
        jtxpSincronismo.getContentPane().add(bReceberCadastro);

        jXTPMenu.add(jtxpSincronismo);

        jxtpUsuario.setCollapsed(true);
        jxtpUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/User group.png"))); // NOI18N
        jxtpUsuario.setTitle("Usuário");
        jxtpUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jxtpUsuarioMouseClicked(evt);
            }
        });

        btLogout.setBackground(new java.awt.Color(0, 0, 0));
        btLogout.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btLogout.setForeground(new java.awt.Color(255, 255, 255));
        btLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/lock.png"))); // NOI18N
        btLogout.setText("Logout");
        btLogout.setBorderPainted(false);
        btLogout.setFocusable(false);
        btLogout.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btLogout.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btLogoutMouseClicked(evt);
            }
        });
        btLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLogoutActionPerformed(evt);
            }
        });
        jxtpUsuario.getContentPane().add(btLogout);

        jXTPMenu.add(jxtpUsuario);

        jxtpAvisos.setCollapsed(true);
        jxtpAvisos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Message.png"))); // NOI18N
        jxtpAvisos.setTitle("Avisos");
        jxtpAvisos.setToolTipText("");
        jxtpAvisos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jxtpAvisosMouseClicked(evt);
            }
        });

        lblAvisosNFCe.setEditable(false);
        lblAvisosNFCe.setColumns(15);
        lblAvisosNFCe.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblAvisosNFCe.setRows(5);
        jScrollPane1.setViewportView(lblAvisosNFCe);

        jxtpAvisos.getContentPane().add(jScrollPane1);

        btEnviarContigencia.setBackground(new java.awt.Color(0, 0, 0));
        btEnviarContigencia.setForeground(new java.awt.Color(255, 255, 255));
        btEnviarContigencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/InteracaoUsuario/nfce/logo-nfc-offline.png"))); // NOI18N
        btEnviarContigencia.setText("Enviar Contingência");
        btEnviarContigencia.setBorderPainted(false);
        btEnviarContigencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEnviarContigenciaActionPerformed(evt);
            }
        });
        jxtpAvisos.getContentPane().add(btEnviarContigencia);

        jXTPMenu.add(jxtpAvisos);

        jxtpRetaguardaWeb.setCollapsed(true);
        jxtpRetaguardaWeb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/sitemap.png"))); // NOI18N
        jxtpRetaguardaWeb.setTitle("Retaguarda Web");
        jxtpRetaguardaWeb.setToolTipText("");
        jxtpRetaguardaWeb.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jxtpRetaguardaWebMouseClicked(evt);
            }
        });

        btConfigurar.setBackground(new java.awt.Color(0, 0, 0));
        btConfigurar.setForeground(new java.awt.Color(255, 255, 255));
        btConfigurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/gear.png"))); // NOI18N
        btConfigurar.setText("Configurar");
        btConfigurar.setBorderPainted(false);
        btConfigurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfigurarActionPerformed(evt);
            }
        });
        jxtpRetaguardaWeb.getContentPane().add(btConfigurar);

        jXTPMenu.add(jxtpRetaguardaWeb);

        jxtpDinnamus.setCollapsed(true);
        jxtpDinnamus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-trabalho-remoto-40.png"))); // NOI18N
        jxtpDinnamus.setTitle("Conectividade ");
        jxtpDinnamus.setToolTipText("");
        jxtpDinnamus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jxtpDinnamusMouseClicked(evt);
            }
        });

        btBoletosDSW.setBackground(new java.awt.Color(0, 0, 0));
        btBoletosDSW.setForeground(new java.awt.Color(255, 255, 255));
        btBoletosDSW.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-código-de-barras-32.png"))); // NOI18N
        btBoletosDSW.setText("Boletos");
        btBoletosDSW.setBorderPainted(false);
        btBoletosDSW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBoletosDSWActionPerformed(evt);
            }
        });
        jxtpDinnamus.getContentPane().add(btBoletosDSW);

        btBoletosDSW1.setBackground(new java.awt.Color(0, 0, 0));
        btBoletosDSW1.setForeground(new java.awt.Color(255, 255, 255));
        btBoletosDSW1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-omnichannel-32.png"))); // NOI18N
        btBoletosDSW1.setText("Gerenciar");
        btBoletosDSW1.setBorderPainted(false);
        btBoletosDSW1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBoletosDSW1ActionPerformed(evt);
            }
        });
        jxtpDinnamus.getContentPane().add(btBoletosDSW1);

        jXTPMenu.add(jxtpDinnamus);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.2;
        PainelCorpo.add(jXTPMenu, gridBagConstraints);

        PainelBarraStatus.setBackground(new java.awt.Color(0, 0, 0));
        PainelBarraStatus.setForeground(new java.awt.Color(255, 255, 255));
        PainelBarraStatus.setAutoscrolls(true);
        PainelBarraStatus.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));
        PainelBarraStatus.setLayout(new java.awt.GridBagLayout());

        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/user.png"))); // NOI18N
        lblUsuario.setText("Usuário :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelBarraStatus.add(lblUsuario, gridBagConstraints);

        lblLoja.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        lblLoja.setForeground(new java.awt.Color(255, 255, 255));
        lblLoja.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblLoja.setText("CLIENTE");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        PainelBarraStatus.add(lblLoja, gridBagConstraints);

        lblPDV.setForeground(new java.awt.Color(255, 255, 255));
        lblPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/cart_put.png"))); // NOI18N
        lblPDV.setText("PDV:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelBarraStatus.add(lblPDV, gridBagConstraints);

        lblCaixa.setForeground(new java.awt.Color(255, 255, 255));
        lblCaixa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/money.png"))); // NOI18N
        lblCaixa.setText("CAIXA:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelBarraStatus.add(lblCaixa, gridBagConstraints);

        lblNomeHost.setForeground(new java.awt.Color(255, 255, 255));
        lblNomeHost.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblNomeHost.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/host_icon.gif"))); // NOI18N
        lblNomeHost.setText("Servidor");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        PainelBarraStatus.add(lblNomeHost, gridBagConstraints);

        lblTitulo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblTitulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/empresa.png"))); // NOI18N
        lblTitulo.setText("Informações do Estabelecimento");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        PainelBarraStatus.add(lblTitulo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        PainelCorpo.add(PainelBarraStatus, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.6;
        PainelCompleto.add(PainelCorpo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.3;
        getContentPane().add(PainelCompleto, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
   
   private boolean ConectividadeAtivada(){
        try {
            ResultSet ListarCaixasAtual = GerenciarCaixa.ListarCaixasAtual();
            if(ListarCaixasAtual!=null  ){
                return ListarCaixasAtual.getBoolean("conectividade");
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return false;
           
            
    }
 
    private void verificaSePodeLiberarConectividade(){
        try {
           
           
                btConectividade.setVisible(ConectividadeAtivada());
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
           
            
    }
    private boolean InicializarUI() {
        boolean bRet = false;
        try {
            
            verificaSePodeLiberarConectividade();
          
            jxtpDinnamus.setVisible(ConectividadeAtivadaELiberada());
            
            lblUsuario.setText("Usuário: [ " + UsuarioSistema.getNomeUsuario() + " ]");
            lblPDV.setText("PDV : [ " + pdvgerenciar.DadosPdv().getInt("CodigoPDV") + " ]");
            try {
                lblLoja.setText(ManipulacaoString.Left(Sistema.getDadosLoja(Sistema.getLojaAtual(), true).getString("nome"), 30));
            } catch (SQLException ex) {
                LogDinnamus.Log(ex, true);
            }
            setExecutarTarefa(true);
            new Thread("frmPrincipal_InicializarUI") {
                public void run() {
                    while (true) {
                        if(isExecutarTarefa()){
                   
                            
                            lblNomeHost.setText("SERVIDOR: " + VerificarArquivoCFG.getHmServidores().get("Servidor0").get("Host") + " ( " + (Sistema.isOnline() ? "ONLINE" : "OFFLINE") + " )");
                            
                            if(!FechouAviso){                                    
                               VerificarNFCe();
                            }
                            
                        }
                        try {
                            sleep(1000);
                        } catch (InterruptedException ex) {
                            LogDinnamus.Log(ex, true);
                        }
                    }
                }
            }.start();
            if (UsuarioSistema.getIdCaixaAtual() != null) {
                ResultSet rs = GerenciarCaixa.ListarCaixas(Sistema.getLojaAtual(), 0, 0, pdvgerenciar.CodigoPDV(), false);
                if (rs.next()) {
                    lblCaixa.setText("CAIXA : [ " + rs.getString("Nome") + " ]");
                }
            } else {
                lblCaixa.setText("CAIXA FECHADO");
            }

            TeclasAtalhos_UI();
            //lblLogoApp.setVisible(false);
            
            //BotaoMenu.requestFocus();
            //setContentPane(PainelDesktop);
            //MetodosUI_Auxiliares.MaximizarFrame(jInternalFrame1);
            //jInternalFrame1.setMaximum(true);
            //jInternalFrame1.setBorder(null);
            
        setLocationRelativeTo(null);                 
        MetodosUI_Auxiliares_1.MaximizarFrame(this);        
        IniciarLogoLoja();
        Iniciar_Menu();
       
            bRet = true;
        } catch (Exception e) {
            LogDinnamus.Log(e);

        }
        //MenuPrincipalPopup.setVisible(true);        
        //MenuPrincipalPopup.setVisible(false);

        return bRet;

    }
    private void VerificarNFCe(){
        try {
           
            int PDV = pdvgerenciar.CodigoPDV();
            int Loja = Sistema.getLojaAtual();
                       
            boolean Ret = NFCE_Contingencia.VerificarNotasEmContigencia(PDV, Sistema.getLojaAtual());
            String cMSG = NFCE_Contingencia.getMSGNotasEmContingencias();
           
            if (cMSG.length() > 0) {
                jxtpAvisos.setVisible(true);
                if(!lblAvisosNFCe.getText().equalsIgnoreCase(cMSG)){
                    lblAvisosNFCe.setText(cMSG);
                    AcordionContrairTudo();
                }
                if(jxtpAvisos.isCollapsed()){
                    jxtpAvisos.setCollapsed(false);
                }
                //final boolean ContingenciaOK = NFCE_Contingencia.Contingencia(PDV);
                //if (!(ContingenciaOK ? "CONTINGÊNCIA ATIVADA" : "ENVIO ATIVADO").equalsIgnoreCase(lblICone.getText())) {
                    //frmNFCe_Avisos aviso  = new frmNFCe_Avisos(this, true);
                    //aviso.setVisible(true);
                    //FechouAviso=  aviso.chkDesativar.isSelected();
                //}                
            }else{
                jxtpAvisos.setVisible(false);
                //lblAvisosNFCe.setVisible(false);
                lblAvisosNFCe.setText("");
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
           
    }
    private boolean DesativarContingencias(){
        boolean Ret = false;
        try {
            if (NFCe_ConfiguracaoAmbiente.getFachadaNFe() == null) {
                boolean RetConfigNFCe = NFCe_ConfiguracaoAmbiente.Configurar(Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV(),Licenca.DataServidor());
            }
            String MSG_Retorno = (new NFCE_ConsultarStatus()).Consultar_NFCe(true,pdvgerenciar.CodigoPDV());
            if (MSG_Retorno.length() == 0) {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Não foi possível VERIFICAR OS SERVIDORES DA SEFAZ\n\nO SISTEMA NÃO PODERÁ SAIR DA CONTINGÊNCIA", "NFC-e sem comunicação");
                return false;
            }            
            if(NFCE_Contingencia.Contingencia(pdvgerenciar.CodigoPDV())){
               if (NFCE_Contingencia.SaidaDaContingencia("Manual", Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV())) {               
                   Ret = true;
               } else {
                   MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não foi possível desativar a contingência", "Falha na desativação da ContingÊncia");
               }
            }else{
                 Ret = true;
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean EnviarTodasAsContingencia(final NFUnidadeFederativa uf ,final int Loja,final int PDV){
     
        boolean Ret = false;
        try {
            //Bloquear_Desbloq(false);
            new Thread("FrmNFCE_EnviarTodasAsContingencia_Acao") {
                @Override
                public void run() { 
                    try{ 
                        
                       if(DesativarContingencias()){                       
                            EnviarNFCe nfce = new EnviarNFCe();
                            ArrayList<String> retEnviarTodasASContingencias = nfce.EnviarTodasASContingencias(uf,Loja,PDV);
                            if(retEnviarTodasASContingencias!=null){
                                String Ret="";
                                for (int i = 0; i < retEnviarTodasASContingencias.size(); i++) {
                                    Ret = Ret + retEnviarTodasASContingencias.get(i);
                                }
                                if (Sistema.isOnline()) {
                                    SincronizarMovimento.SincronizarNFCE();
                                }
                                MetodosUI_Auxiliares_1.MensagemAoOperadorTextual("NFC-e : Envio das Contingências", "Retorno do Envio", Ret, "INFO", new Font("Courier New", Font.PLAIN, 14));
                            }else{
                                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não foi possível realizar o envio", "NFCe - Envio NÃO REALIZADO ");
                            }
                       }
                     
                    } catch (Exception e) {
                        LogDinnamus.Log(e, true);
                    }
                    //MetodosUI_Auxiliares.BloquearDesbloquearComponentes(PainelCompleto, true);
                    bloqtela.Tela_DesBloquear();
                    TeclasFuncoes=true;
                       
                }
            }.start();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
        
    }
    private void jmSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmSairActionPerformed
        // TODO add your handling code here:
        System.exit(0);

        //if(getec)
    }//GEN-LAST:event_jmSairActionPerformed

    private void jmSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jmSairMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jmSairMouseClicked

    private void evtAbrirJanela(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_evtAbrirJanela
        
        /*setLocationRelativeTo(null);
        MetodosUI_Auxiliares.MaximizarFrame(this);        
        //PainelDesktop.setSize(Toolkit.getDefaultToolkit().getScreenSize().width, Toolkit.getDefaultToolkit().getScreenSize().height); 
        //painel.setSize(PainelDesktop.getSize());
        //MetodosUI_Auxiliares.MaximizarPainel(PainelCompleto);*/
        IniciarLogoLoja();
        ImagemTratamento.AjustarTamanho((ImageIcon) lblLogoApp.getIcon(), PainelCompleto.getWidth(), PainelCompleto.getHeight());
        lblLogoApp.setVisible(true);
        //PainelDesktop.setSize(this.getSize());
        //VerificarNFCe();
        
        
        
    }//GEN-LAST:event_evtAbrirJanela

    private void btFecharCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFecharCaixaActionPerformed
        // TODO add your handling code here:
        menuFecharCaixaActionPerformed(null);
    }//GEN-LAST:event_btFecharCaixaActionPerformed

    private void menuSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSairActionPerformed

        // TODO add your handling code here:
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente fechar o DinnamuS 2.0", "Fechar", 0) == 0) {
            if (ECFAtual.getECF() != null) {                
                ECFAtual.getECF().FecharPorta();               
            }
            if (PDVComprovante.getImpressoraCompravante() != null) {
                PDVComprovante.getImpressoraCompravante().Fechar();
            }
            
            //VerificarNFCe();
            
            System.exit(0);
        }
    }//GEN-LAST:event_menuSairActionPerformed
    
    private void menuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogoutActionPerformed
        // TODO add your handling code here:

        if (MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(this, "Deseja realizar o logout do usuário", "Logout Solicitado", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            UsuarioSistema.Logout();
            this.dispose();
            (MetodosUI_Auxiliares_1.CentrarFrame(new frmLogin(), Toolkit.getDefaultToolkit())).setVisible(true);

        }
    }//GEN-LAST:event_menuLogoutActionPerformed

    private void btReducaoZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReducaoZActionPerformed
        // TODO add your handling code here:
        ReducaoZ();
    }//GEN-LAST:event_btReducaoZActionPerformed

    private void btAbrirCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirCaixaActionPerformed
        // TODO add your handling code here:
        menuAbrirCaixaActionPerformed(null);

    }//GEN-LAST:event_btAbrirCaixaActionPerformed

    private void menuAbrirCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAbrirCaixaActionPerformed
        // TODO add your handling code here:
        //MetodosUI_Auxiliares.JFrameModal(MetodosUI_Auxiliares.CentrarFrame((new frmAbrirCaixa()), Toolkit.getDefaultToolkit())).setVisible(true);
        new frmAbrirCaixa(this, true, "A").setVisible(true);
        //;(new frmAbrirCaixa(this, true)).setLocationRelativeTo(null);


    }//GEN-LAST:event_menuAbrirCaixaActionPerformed

    private void menuFecharCaixaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuFecharCaixaActionPerformed
        // TODO add your handling code here:
        //new frmAbrirCaixa(this, true,"F");
        new frmAbrirCaixa(this, true, "F").setVisible(true);
        //PainelInterno1.update(PainelInterno1.getGraphics());

    }//GEN-LAST:event_menuFecharCaixaActionPerformed

    private void btResumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResumoActionPerformed
        // TODO add your handling code here:
        try {

            int nCodigoCaixaDoPDV = pdvgerenciar.DadosPdv().getInt("caixavinculadoaopdv");
            if (nCodigoCaixaDoPDV <= 0) {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não existe um caixa vinculado ao PDV", "Resumo de Caixa", "AVISO");
                return;
            }
            ResultSet rsDadosCaixa = GerenciarCaixa.ListarCaixas(Sistema.getLojaAtual(), 0, nCodigoCaixaDoPDV);
            if (rsDadosCaixa.next()) {

                new frmResumoCaixa(null, true,
                        Sistema.getLojaAtual(),
                        nCodigoCaixaDoPDV,
                        rsDadosCaixa.getString("controlecx"),
                        rsDadosCaixa.getInt("operadorcx"), true).setVisible(true);
            } else {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível obter os dados caixa vinculado ao PDV", "Resumo de Caixa", "AVISO");
                return;
            }



        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }


    }//GEN-LAST:event_btResumoActionPerformed

    private void menuResumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuResumoActionPerformed
        // TODO add your handling code here:
        btResumoActionPerformed(null);
    }//GEN-LAST:event_menuResumoActionPerformed

    private void btPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPDVActionPerformed
        // TODO add your handling code here:

        menuPDVActionPerformed(null);


    }//GEN-LAST:event_btPDVActionPerformed

    private void miEnvioMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miEnvioMovActionPerformed
        // TODO add your handling code here:
        if (Sistema.isOnline()) {

            if (!pdvgerenciar.EnviarMovimento()) {
                br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O ENVIO DE MOVIMENTO ESTÁ DESATIVADO NAS CONFIG DO PDV", "Envio de Movimento DESATIVADO");
                return;
            }
            String cRet = "";
            try {
                Object[] Opcoes = new Object[]{"Ultimas Modificações", "Sincronismo Completo"};
                cRet = MetodosUI_Auxiliares_1.InputBox(null, "Informe o tipo de Atualização", "Tipo de Sincronismo", "AVISO", Opcoes, "Ultimas Modificações");
                if (cRet != null) {
                    if (SincronizarMovimento.Iniciar((cRet.equalsIgnoreCase("Ultimas Modificações") ? false : true), false)) {
                        if (!SincronizarMovimento.OcorreramAlteracoes) {
                            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não ocorreram mudanças desde o último envio!!!", "Envio Movimento", "INFO");
                        } else {
                            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Envio realizado com sucesso!!!", "Envio Movimento", "INFO");
                        }
                    } else {
                        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível realizar o Envio !!!", "Envio Movimento", "AVISO");
                    }
                }
            } catch (Exception e) {
                LogDinnamus.Log(e);
            }
        } else {
            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(this, "O sistema esta em modo off-line", "Sistema Off-Line", "AVISO");
        }

    }//GEN-LAST:event_miEnvioMovActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        frmSelecionarLojaAtual selecionarLojaAtual = new frmSelecionarLojaAtual(this, true);
        selecionarLojaAtual.setLocationRelativeTo(null);
        selecionarLojaAtual.setVisible(true);
        verificaSePodeLiberarConectividade();

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        MetodosUI_Auxiliares_1.CentrarJDialog(new frmConfigurarImpressora(null, true), Toolkit.getDefaultToolkit()).setVisible(true); //((new frmConfigurarImpressora(null, true)).get,Toolkit.getDefaultToolkit());

    }//GEN-LAST:event_jMenuItem3ActionPerformed

private void miRecepCadastrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miRecepCadastrosActionPerformed
// TODO add your handling code here:


    if (Sistema.isOnline()) {

        if (!pdvgerenciar.ReceberCadastros()) {
            br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O SINCRONISMO DE CADASTROS ESTÁ DESATIVADO NAS CONFIG DO PDV", "Sincronismo Cadastro DESATIVADO");
            return;
        }

        boolean bExecSincronismo = DAO_RepositorioLocal_Inicializar.bExecutandoSincronismo;

        //MetodosUI_Auxiliares.MensagemAoUsuarioSimples(null,String.valueOf(bExecSincronismo),"TEste","Aviso");

        if (DAO_RepositorioLocal_Inicializar.bExecutandoSincronismo) {
            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "O sistema esta realizando o sincronismo automatico. \n\nAguarde alguns instante e tente novamente", "Sincronismo Cadastro", "INFO");
            return;
        }
        if (MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(null, "Confirma o sicronismo dos cadastros ?", "SINCRONIZAR CADASTROS", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            String cRet = "";
            boolean bSincTotal = false;
            Object[] Opcoes = new Object[]{"Ultimas Modificações", "Sincronismo Completo"};
            cRet = MetodosUI_Auxiliares_1.InputBox(null, "Informe o tipo de Atualização", "Tipo de Sincronismo", "AVISO", Opcoes, "Ultimas Modificações");

            if (cRet != null) {
                if (cRet.equalsIgnoreCase("Sincronismo Completo")) {
                    bSincTotal = true;
                }
            } else {
                return;
            }

            if (Sincronismo.SincronismoCadastroAuto(bSincTotal, true)) {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Sincronismo Realizado com sucesso", "Sincronismo Cadastro", "INFO");
            } else {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não foi possível realizar o sincronismo", "Sincronismo Cadastro", "AVISO");
            }


        }
    } else {
        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não é possível realizar o sincronismo com o servidor\\nSistema em modo OFF-Line.", "Sincronismo Cadastro", "AVISO");
    }
}//GEN-LAST:event_miRecepCadastrosActionPerformed

private void btLeituraXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeituraXActionPerformed
// TODO add your handling code here:
    LeituraX();
}//GEN-LAST:event_btLeituraXActionPerformed

private void LeituraXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeituraXActionPerformed
// TODO add your handling code here:]
    LeituraX();
}//GEN-LAST:event_LeituraXActionPerformed

private void ReducaoZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReducaoZActionPerformed
// TODO add your handling code here:
    ReducaoZ();
}//GEN-LAST:event_ReducaoZActionPerformed

private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        // this.setEnabled(false);
       
    //br.com.ui.MetodosUI_Auxiliares.MensagemAoUsuarioSimplesAVISO(this, "MÓDULO EM DESENVOLVIMENTO", "PRÉ-VENDA");
    //return;
  new frmPDV_PreVenda(null,true).setVisible(true);
    

    //this.setEnabled(true);
}//GEN-LAST:event_jMenuItem7ActionPerformed

private void btPrevendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrevendaActionPerformed
// TODO add your handling code here:
    jMenuItem7ActionPerformed(null);
}//GEN-LAST:event_btPrevendaActionPerformed

private void menuGerarArqCArgaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuGerarArqCArgaActionPerformed
// TODO add your handling code here:
    if (Sistema.isOnline()) {
        GerarCargaInicial.Gerar(false);
    } else {
        MetodosUI_Auxiliares_1.MensagemAoUsuarioSimples(null, "Não é possível realizar o procedimento solicitado\\nSistema em modo OFF-Line.", "Carga do PDV", "AVISO");
    }
}//GEN-LAST:event_menuGerarArqCArgaActionPerformed

    private void jmVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmVendaActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        // TODO add your handling code here:
        try {

            int nRet = br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao(this, "Confirma a realização da otimização do banco local?", "Otimização do Banco Local");
            if (nRet == br.com.ui.MetodosUI_Auxiliares_1.Sim()) {
                if (ManutencaoBancoLocal.Agendar()) {
                    br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO(this, "OTIMIZAÇÃO AGENDA SUCESSO.\n\nO PROCESSO SERA REALIZADO NA PROXIMA INICIALIZAÇÃO DO SISTEMA\nO SISTEMA SERÁ ENCERRAO AGORA", "OTIMIZAÇÃO DO BANCO LOCAL");
                    System.exit(0);
                } else {
                    br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(this, "FALHA PROCESSO DE OTIMIZAÇÃO", "OTIMIZAÇÃO DO BANCO LOCAL");
                }
            }

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }

    }//GEN-LAST:event_jMenuItem9ActionPerformed
    private void AcionarADM() {
        new Thread("frmPrincipal_AcionarADM") {
            public void run() {
                //frmPrincipal.this.setEnabled(false);
                // MetodosUI_Auxiliares.BloquearDesbloquearComponentes(tbBotoes, false);
                //MetodosUI_Auxiliares.BloquearDesbloquearComponentes(BarraMenuPrincipal, false);
                ECFDinnamuS ecf = null;//Venda.Venda_ECF_Padrao();
                if (ecf != null) {
                    //TefPadrao.IniciarAdmTEF(ecf);
                } else {
                    br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(null, "NÃO FOI IDENTIFICADO UM ECF VINCULADO AO PDV", "TEF ADM");
                }
                //  MetodosUI_Auxiliares.BloquearDesbloquearComponentes(tbBotoes, true);
                //MetodosUI_Auxiliares.BloquearDesbloquearComponentes(BarraMenuPrincipal, true);
                //frmPrincipal.this.setEnabled(true);
            }
        }.start();
    }

    private void AcionarTEFADM() {
        try {
            ResultSet rs = VendaEmEdicao.VerificarVendaInterrompida();
            if (rs.next()) {
                br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO(this, "FOI IDENTIFICADO UM NOTA INTERROMPIDA\n\nFINALIZE A VEDA PARA LIBERAR O MODO ADM TEF", "VENDA INTERROMPIDA");
            } else {
                //TEFVenda.VerificarTransacaoTEFInterrompida();
                AcionarADM();
            }

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }
    private void btClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btClientesActionPerformed

        // TODO add your handling code here:
        new frmClienteListagem(this, true, true,false).setVisible(true);


    }//GEN-LAST:event_btClientesActionPerformed

    private void menuPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuPDVActionPerformed
        // TODO add your handling code here:

        new frmPDV_Simples(null, true).setVisible(true);

    }//GEN-LAST:event_menuPDVActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        // TODO add your handling code here:
        try {

            String MSGLicenca = "LICENÇA EXPIRA EM [ " + DataHora.getCampoFormatado(DataHora.FormatDataPadrao, Licenca.DataExpiracao()) + " ]  DAQUI A [ " + Licenca.DiasExpirar() + " ] DIA(S)";

            br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO(this, MSGLicenca, "INFORMAÇÕES SOBRE A LICENÇA DE USO");

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void BotaoMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoMenuActionPerformed
        // TODO add your handling code here:
        MenuPrincipalPopup.setVisible(true);
        MenuPrincipalPopup.setVisible(false);
        MenuPrincipalPopup.setLocation(PainelBotoes.getX(), PainelBotoes.getY() + MenuPrincipalPopup.getHeight());
        MenuPrincipalPopup.setInvoker(BotaoMenu);
        MenuPrincipalPopup.setVisible(true);


    }//GEN-LAST:event_BotaoMenuActionPerformed

    private void btSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSairActionPerformed
        // TODO add your handling code here:
        //Sair();
        menuSairActionPerformed(null);
    }//GEN-LAST:event_btSairActionPerformed
    private void CancelarCupomFiscal(){
        try {
            if (br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma o cancelamento do último cupom fiscal ?", "CANCELAR ÚLTIMO CUPOM FISCAL") == br.com.ui.MetodosUI_Auxiliares_1.Sim()) {
                if (!ECFAtual.Verificar(pdvgerenciar.CodigoPDV(), true, true, true, true)) {
                    return;
                }
                if (ECFAtual.getECF() != null) {
                    ECFAtual.getECF().CancelarUltimoCupom();
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }
    private void CancelarCupomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarCupomActionPerformed
        // TODO add your handling code here:
        CancelarCupomFiscal();

    }//GEN-LAST:event_CancelarCupomActionPerformed

    private void ConfigNFCeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigNFCeActionPerformed
        // TODO add your handling code here:
        new frmNFCe_Config(null, true).setVisible(true);
    }//GEN-LAST:event_ConfigNFCeActionPerformed

    private void ContingenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ContingenciaActionPerformed
        // TODO add your handling code here:
        
        new frmNFCe_Config_Pdv_Historico_Contingencia(this, true).setVisible(true);
    }//GEN-LAST:event_ContingenciaActionPerformed

    private void NFCeEmitidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NFCeEmitidasActionPerformed
        // TODO add your handling code here:
        new frmNFCE_Listagem(null, true).setVisible(true);
    }//GEN-LAST:event_NFCeEmitidasActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus

        // TODO add your handling code here:
        setExecutarTarefa(false);
    }//GEN-LAST:event_formWindowLostFocus

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        setExecutarTarefa(true);
    }//GEN-LAST:event_formWindowGainedFocus

    private void AtivarDesativarAvisoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtivarDesativarAvisoActionPerformed
        // TODO add your handling code here:
        if(FechouAviso){
            FechouAviso=false;
            MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Foi ativado o aviso de nfce", "Aviso NFce Ativado");
        }else{
            FechouAviso=true;
             MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Foi desativado o aviso de nfce", "Aviso NFce Desativado"); 
        }
    }//GEN-LAST:event_AtivarDesativarAvisoActionPerformed

    private void RepositorioLocalNFCeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RepositorioLocalNFCeActionPerformed
        // TODO add your handling code here:
         MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, false);
         TeclasFuncoes=false;
         new Thread("FrmNFCE_EnviarTodasAsContingencia_Acao") {
                @Override
                public void run() { 
                    NFCE_RepositorioLocal nfcelocal = new NFCE_RepositorioLocal();
                    nfcelocal.PreparaRepositorioLocal_NFCe(pdvgerenciar.CodigoPDV(), Sistema.getLojaAtual(), true);
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                    TeclasFuncoes=true;
                }
         }.start();
    }//GEN-LAST:event_RepositorioLocalNFCeActionPerformed

    private void btHistContingenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHistContingenciaActionPerformed
        // TODO add your handling code here:
        ContingenciaActionPerformed(null);
    }//GEN-LAST:event_btHistContingenciaActionPerformed
    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {                                           
       //GerarRelatorio();
      
        
    }                                          
   
    private void btExportarXMLActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
         
    }
    private void btNFCeEmitidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNFCeEmitidasActionPerformed
        // TODO add your handling code here:
        NFCeEmitidasActionPerformed(null);
    }//GEN-LAST:event_btNFCeEmitidasActionPerformed

    private void btConfigPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfigPDVActionPerformed
        // TODO add your handling code here:
        jMenuItem2ActionPerformed(null);
    }//GEN-LAST:event_btConfigPDVActionPerformed

    private void btConfigImpressoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfigImpressoraActionPerformed
        // TODO add your handling code here:
        jMenuItem3ActionPerformed(null);
    }//GEN-LAST:event_btConfigImpressoraActionPerformed

    private void btConfigNFCeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfigNFCeActionPerformed
        // TODO add your handling code here:
        ConfigNFCeActionPerformed(null);
    }//GEN-LAST:event_btConfigNFCeActionPerformed

    private void btEnviarMovActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarMovActionPerformed
        // TODO add your handling code here:
        miEnvioMovActionPerformed(null);
    }//GEN-LAST:event_btEnviarMovActionPerformed

    private void bReceberCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bReceberCadastroActionPerformed
        // TODO add your handling code here:
        miRecepCadastrosActionPerformed(null);
    }//GEN-LAST:event_bReceberCadastroActionPerformed

    private void jtxpVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpVendaMouseClicked
        // TODO add your handling code here:
       //JXTaskPane pane = ;
       SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpVendaMouseClicked

    private void jtxpCaixaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpCaixaMouseClicked
        // TODO add your handling code here:
     SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpCaixaMouseClicked

    private void jtxpECFMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpECFMouseClicked
        // TODO add your handling code here:
        SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpECFMouseClicked

    private void jtxpConfiguracaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpConfiguracaoMouseClicked
        // TODO add your handling code here:
    SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpConfiguracaoMouseClicked

    private void jtxpNFCEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpNFCEMouseClicked
        // TODO add your handling code here:
        SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpNFCEMouseClicked

    private void jtxpSincronismoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpSincronismoMouseClicked
        // TODO add your handling code here:
        SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jtxpSincronismoMouseClicked

    private void btLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLogoutActionPerformed
        // TODO add your handling code here:
        menuLogoutActionPerformed(null);
    }//GEN-LAST:event_btLogoutActionPerformed

    private void jxtpUsuarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtpUsuarioMouseClicked
        // TODO add your handling code here:
          SimularAcordion((JXTaskPane) evt.getSource());
    }//GEN-LAST:event_jxtpUsuarioMouseClicked

    private void btLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btLogoutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btLogoutMouseClicked

    private void btResumoNFCEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResumoNFCEActionPerformed
        // TODO add your handling code here:
          new frmNFCe_RelatorioParametros(null, true).setVisible(true);
    }//GEN-LAST:event_btResumoNFCEActionPerformed

    private void btDownloadNFCeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDownloadNFCeActionPerformed
        // TODO add your handling code here:
        new frmNFCe_ExportarXmlParametros(null, true).setVisible(true);
    }//GEN-LAST:event_btDownloadNFCeActionPerformed

    private void jxtpAvisosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtpAvisosMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jxtpAvisosMouseClicked

    private void btEnviarContigenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEnviarContigenciaActionPerformed
        // TODO add your handling code here:
        
        try {
          
            
            //MetodosUI_Auxiliares.BloquearDesbloquearComponentes(PainelCompleto, false);
            TeclasFuncoes=false;    
            bloqtela.Tela_Bloquear(this, 0.5f,Color.BLACK);
            int codigopdv =  pdvgerenciar.CodigoPDV();
            
            String versaoAmbiente = NFCe_ConfiguracaoAmbiente.getVersaoNFCe(codigopdv);
            
            EnviarTodasAsContingencia(versaoAmbiente.equalsIgnoreCase("3.10") ? NFUnidadeFederativa.PA_NFCe : NFUnidadeFederativa.PA_NFCe4, Sistema.getLojaAtual(), codigopdv);
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
        
    }//GEN-LAST:event_btEnviarContigenciaActionPerformed

    private void btConfigurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfigurarActionPerformed
        // TODO add your handling code here:
        
        try {
             // new RetaguardaWebInfraestrura().iniciar(Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV(), Licenca.getIDContrato());
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        
      
    }//GEN-LAST:event_btConfigurarActionPerformed

    private void jxtpRetaguardaWebMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtpRetaguardaWebMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jxtpRetaguardaWebMouseClicked

    private void btNFeEmitidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNFeEmitidasActionPerformed
        // TODO add your handling code here:
        new frmNFe(null,true).setVisible(true);
    }//GEN-LAST:event_btNFeEmitidasActionPerformed

    private void btResumoNFeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btResumoNFeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btResumoNFeActionPerformed

    private void btDownloadNFeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDownloadNFeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDownloadNFeActionPerformed

    private void jtxpNFEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtxpNFEMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxpNFEMouseClicked

    private void mGerarCargainicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mGerarCargainicialActionPerformed
        // TODO add your handling code here:
        try { 
            if (Sistema.isOnline()) {
                if (MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma a geração da carga inicial ", "Gerar carga inicial retaguarda web") == MetodosUI_Auxiliares_1.Sim()) {
                    
                    Object Tamanho = MetodosUI_Auxiliares_1.InputBox(null, "Digite o tamanho máximo do(s) arquivo(s) de carga em Megabyte[1-50]", "Tamanho arquivo carga", "INFO");
                    if(Tamanho!=null){
                       
                        final Integer tamanho = FormatarNumero.FormatarNumeroInteiro(Tamanho.toString());
                        
                        if(tamanho !=null && tamanho>=1 && tamanho<=50){
                            MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, false);
                            TeclasFuncoes = false;
                            new Thread("gerarCargaInicial") {
                                @Override
                                public void run() {
                                  //  GerarCargaInicialRetaguardaWeb.Gerar(false,true,tamanho);
                                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                                    TeclasFuncoes = true;
                                }
                            }.start();
                        }else{
                             MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O tamanho precisa estar entre 1-50 mb", "Procedimento nãor realizado");
                        }
                    
                    }
                }
            } else {
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Não é possível gerar carga inicial com o sistema offline", "Procedimento nãor realizado");
            }

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    
    }//GEN-LAST:event_mGerarCargainicialActionPerformed

    private JFrame  getfrmPrincipal(){
            return this;
    }
    private void btConectividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConectividadeActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        
      
        TeclasFuncoes = false;
        new Thread("btConectividadeActionPerformed") {
            @Override
            public void run() {
                try {
                    
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, false);
                    final BloquearTela bloquearTela = new BloquearTela();
                    
                    
                    bloquearTela.Tela_Bloquear(getfrmPrincipal(), 0.5f, Color.BLACK);
                    ConectividadePDV conectividadePDV = new ConectividadePDV();

                    final frmProcessamentoConectividade frmProcessoconectividade = new frmProcessamentoConectividade(null,false);
                    //frmProcessoconectividade.setModal(true);
                    frmProcessoconectividade.setAlwaysOnTop(true);
                    frmProcessoconectividade.setVisible(true);
                    frmProcessoconectividade.setLocationRelativeTo(null);
                    
                    conectividadePDV.setNotificarProcesso(new NotificarProcesso() {
                        @Override
                        public void info(String mensagem) {
                              frmProcessoconectividade.AtualizarMensagem(mensagem);
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void erro(String Mensagem, Exception e) {
                             frmProcessoconectividade.AtualizarMensagem( TratamentoNulos.getTratarString().Tratar(Mensagem, "")  ,true,true);
                                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processoInicio(int total) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processando(String processando, int passo) {
                             frmProcessoconectividade.AtualizarMensagem(processando);
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processoTerminado(String mensagem) {
                              frmProcessoconectividade.AtualizarMensagem(mensagem);
                            
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessoInicio(int total) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessando(String processando, int passo) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessoTerminado(String mensagem) {
                           // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }
                    });
                    
                    
                    frmProcessoconectividade.btOK.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                 
                                 MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                                 bloquearTela.Tela_DesBloquear();
                                 frmProcessoconectividade.dispose();
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }
                    });
                    
                    
                    
                    boolean iniciarConectividade = conectividadePDV.iniciar(Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV(), Licenca.getIDContrato());
                  
                    if (ConectividadeAtivada()) {
                        jxtpDinnamus.setVisible(restInfraestrutura.InicializadaEAtiva());
                    }
                    if(iniciarConectividade){
                       MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                       bloquearTela.Tela_DesBloquear();
                       frmProcessoconectividade.dispose();
                       
                       new frmConectividadePDVConfigurar(null, true, Licenca.getIDContrato()).setVisible(true);
                       
                       jxtpDinnamus.setVisible(ConectividadeAtivadaELiberada());
                   
                    }else{
                        frmProcessoconectividade.ocultarAnimacao();
                        
                        frmProcessoconectividade.btOK.setVisible(true);
                    }

                } catch (Exception e) {
                    LogDinnamus.Log(e, true);
                }
             
            }
        }.start();
       
    }//GEN-LAST:event_btConectividadeActionPerformed
    private boolean ConectividadeAtivadaELiberada(){
        try {
          
           
            if(ConectividadeAtivada()){
                if(restInfraestrutura.InicializadaEAtiva()){
                    return true;
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return false;
    }
    private BoletosInfraUI boletosInfraUI = new BoletosInfraUI();
    private void btBoletosDSWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBoletosDSWActionPerformed
        // TODO add your handling code here:
        
        MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, false);
        bloqtela.Tela_Bloquear(this, 0.5f,Color.BLACK);
         if (boletosInfraUI.getBoletoDSW() == null) {
            boletosInfraUI.setBoletoDSW(new iEvento() {
                @Override
                public void encerrou(boolean ok) {
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                    bloqtela.Tela_DesBloquear();
                    //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
        }
        TeclasFuncoes = false;
        new Thread("btBoletosDSWActionPerformed") {
            @Override
            public void run() {
                
                if (!boletosInfraUI.iniciar(Licenca.getIDContrato())) {

                    return;
                }

                MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                bloqtela.Tela_DesBloquear();

                frmBoletosDSW frmBoletosDSW = new frmBoletosDSW(null, true);
                frmBoletosDSW.setLocationRelativeTo(null);
                frmBoletosDSW.setVisible(true);

             
            }
        }.start();
        
    
    }//GEN-LAST:event_btBoletosDSWActionPerformed

    private void jxtpDinnamusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jxtpDinnamusMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jxtpDinnamusMouseClicked

    private void btBoletosDSW1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBoletosDSW1ActionPerformed
        // TODO add your handling code here:
          
        TeclasFuncoes = false;
        new Thread("btConectividadeActionPerformed") {
            @Override
            public void run() {
                try {
                    
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, false);
                    final BloquearTela bloquearTela = new BloquearTela();
                    
                    
                    bloquearTela.Tela_Bloquear(getfrmPrincipal(), 0.5f, Color.BLACK);
                    ConectividadePDV conectividadePDV = new ConectividadePDV();

                    final frmProcessamentoConectividade frmProcessoconectividade = new frmProcessamentoConectividade(null,false);
                    //frmProcessoconectividade.setModal(true);
                    frmProcessoconectividade.setAlwaysOnTop(true);
                    frmProcessoconectividade.setVisible(true);
                    frmProcessoconectividade.setLocationRelativeTo(null);
                    
                    conectividadePDV.setNotificarProcesso(new NotificarProcesso() {
                        @Override
                        public void info(String mensagem) {
                              frmProcessoconectividade.AtualizarMensagem(mensagem);
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void erro(String Mensagem, Exception e) {
                                frmProcessoconectividade.AtualizarMensagem( TratamentoNulos.getTratarString().Tratar(Mensagem, "")  ,true,true);
                                   //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processoInicio(int total) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processando(String processando, int passo) {
                             frmProcessoconectividade.AtualizarMensagem(processando);
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void processoTerminado(String mensagem) {
                              frmProcessoconectividade.AtualizarMensagem(mensagem);
                            
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessoInicio(int total) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessando(String processando, int passo) {
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }

                        @Override
                        public void subprocessoTerminado(String mensagem) {
                           // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }
                    });
                    
                    
                    frmProcessoconectividade.btOK.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {
                                 
                                 MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                                 bloquearTela.Tela_DesBloquear();
                                 frmProcessoconectividade.dispose();
                            //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                        }
                    });
                    
                    
                    
                    boolean iniciarConectividade = conectividadePDV.iniciar(Sistema.getLojaAtual(), pdvgerenciar.CodigoPDV(), Licenca.getIDContrato());
                  
                    if (ConectividadeAtivada()) {
                        jxtpDinnamus.setVisible(restInfraestrutura.InicializadaEAtiva());
                    }
                    if(iniciarConectividade){
                       MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(PainelCompleto, true);
                       bloquearTela.Tela_DesBloquear();
                       frmProcessoconectividade.dispose();
                       
                       new frmConectividadePDVGerenciar(null, true, Licenca.getIDContrato(), Sistema.getLojaAtual(),pdvgerenciar.CodigoPDV()).setVisible(true);
                       
                       jxtpDinnamus.setVisible(ConectividadeAtivadaELiberada());
                   
                    }else{
                        frmProcessoconectividade.ocultarAnimacao();
                        
                        frmProcessoconectividade.btOK.setVisible(true);
                    }

                } catch (Exception e) {
                    LogDinnamus.Log(e, true);
                }
             
            }
        }.start();
    }//GEN-LAST:event_btBoletosDSW1ActionPerformed
    private boolean SimularAcordion(JXTaskPane pane ){
        boolean Ret = false;
        String Nome = pane.getTitle();
        try {
            if (!pane.isCollapsed()) {
                Component[] components = jXTPMenu.getComponents();
                for (int i = 0; i < components.length; i++) {
                    Component c = components[i];
                    if (c instanceof JXTaskPane) {
                        
                        JXTaskPane pane1 = (JXTaskPane) c;
                        //System.out.println( pane1.getTitle());
                        if (!pane1.getTitle().equalsIgnoreCase(Nome)) {
                            pane1.setCollapsed(true);
                            pane1.setSpecial(false);
                        }else{
                         pane1.setSpecial(true);
                        }
                    }
                }
            }

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean AcordionBloquearTudo(){
        boolean Ret = false;       
        try {
          
            Component[] components = jXTPMenu.getComponents();
            for (int i = 0; i < components.length; i++) {
                Component c = components[i];
                if (c instanceof JXTaskPane) {
                    JXTaskPane pane1 = (JXTaskPane) c;
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(pane1, false);
                    //pane1.setCollapsed(true);                       
                    //pane1.setEnabled(false);
                    
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean AcordionDesBloquearTudo(){
        boolean Ret = false;       
        try {
          
            Component[] components = jXTPMenu.getComponents();
            for (int i = 0; i < components.length; i++) {
                Component c = components[i];
                if (c instanceof JXTaskPane) {
                    JXTaskPane pane1 = (JXTaskPane) c;
                    MetodosUI_Auxiliares_1.BloquearDesbloquearComponentes(pane1, true);
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean AcordionContrairTudo(){
        boolean Ret = false;       
        try {
          
            Component[] components = jXTPMenu.getComponents();
            for (int i = 0; i < components.length; i++) {
                Component c = components[i];
                if (c instanceof JXTaskPane) {
                    JXTaskPane pane1 = (JXTaskPane) c;
                    pane1.setCollapsed(true);                       
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    public boolean IniciarLogoLoja() {
        try {
            /*'Blob Logo = Sistema.getDadosLojaAtualSistema().getBlob("logo");
            
             if(Logo!=null){
             if(Logo.length()>0){
                    
              lblLogoCliente.setIcon(ImagemTratamento.AjustarTamanho(Logo,  PainelLogoCliente.getWidth()/8, PainelLogoCliente.getHeight()));
             //lblLogoCliente.update(lblLogoCliente.getGraphics());
             }
             }*/

            
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private void ReducaoZ() {

        try {

            if (GerenciarCaixa.VerificarCaixaAberto()) {
                if (MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(null, "Confirma o encerramento do Dia?", "Redução Z", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    //if(!ECFAtual.isECFValido(false)){
                    if (!ECFAtual.Verificar(pdvgerenciar.CodigoPDV(), true, true, false, true)) {
                        return;
                    }
                    //}    
                    if(ECFAtual.getECF().FechamentoDoDia()==1){
                        br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("REDUÇÃO Z EMITIDA COM SUCESSO", "REDUÇÃO Z OK");
                    }
                }
            }

        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
    }

    private void LeituraX() {

        try {


            if (GerenciarCaixa.VerificarCaixaAberto()) {
                int nRet = MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes(null, "Essa é a 1ª Abertura do Dia ?", "Leitura X", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);
                if (nRet == JOptionPane.YES_OPTION || nRet == JOptionPane.NO_OPTION) {
                    //if(!ECFAtual.isECFValido(false)){
                    if (!ECFAtual.Verificar(pdvgerenciar.CodigoPDV(), true, true, true, true)) {
                        return;
                    }
                    //}                
                    if (nRet == JOptionPane.YES_OPTION) {
                        if(ECFAtual.getECF().VerificaDiaAberto(pdvgerenciar.CodigoPDV())==1){
                            br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Movimento do Dia já foi aberto", "Dia Fiscal Aberto");
                        }else{
                            if (ECFAtual.getECF().AberturaDoDia("0", "") == 1) {
                                br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Movimento do Dia Iniciado com sucesso", "Dia Fiscal OK");
                            } else {
                                br.com.ui.MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não foi possível iniciar o dia fiscal", "Procedimento não realizado");
                            }
                        }

                    } else {
                        ECFAtual.getECF().LeituraX();
                    }
                }
            }
        } catch (Exception e) {
            LogDinnamus.Log(e);
        }
    }

    public void Teclas(String e) {
        try {

            if (!TeclasFuncoes) {
                return;
            }
            if (e.equalsIgnoreCase("F10")) {            
                menuLogoutActionPerformed(null);
            } else if (e.equalsIgnoreCase("F2")) {
                menuAbrirCaixaActionPerformed(null);
            } else if (e.equalsIgnoreCase("F3")) {
                menuPDVActionPerformed(null);
            } else if (e.equalsIgnoreCase("F4")) {
                btResumoActionPerformed(null);
            } else if (e.equalsIgnoreCase("F5")) {
                menuFecharCaixaActionPerformed(null);
            } else if (e.equalsIgnoreCase("F6")) {
                LeituraX();
            } else if (e.equalsIgnoreCase("F7")) {
                ReducaoZ();
            } else if (e.equalsIgnoreCase("F8")) {
                btClientesActionPerformed(null);  
            } else if (e.equalsIgnoreCase("F9")) {
                jMenuItem7ActionPerformed(null);                            
            } else if (e.equalsIgnoreCase("ESCAPE")) {
                menuSairActionPerformed(null);
            }
        } catch (Exception ex) {
            LogDinnamus.Log(ex, true);
        }
    }
    //private Action ESCAPE = null, F1 = null, F2 = null, F3 = null, F4 = null, F5 = null, F6 = null, F7 = null, F8 = null, F9 = null, F10 = null, F11 = null, F12 = null;
      private boolean TeclasAtalhos_UI(){
        try {  
             AbstractAction TeclaAtalhos  = new AbstractAction() {
                public void actionPerformed(ActionEvent e) {
                       String Fonte = e.getSource().toString();                
                       Teclas(Fonte);
                       //txtProcurar.requestFocus();
                }
            };            
             
            String Teclas[] ={"F2" ,"F3","F4","F5","F6","F7","F8","F9","F10","ESCAPE"};  
            DefinirAtalhos2.Definir(PainelCompleto, Teclas, TeclaAtalhos);
            //DefinirAtalhos.Definir(PainelCorpo, TeclaAtalhos);
            return true;
       } catch (Exception e) {
           LogDinnamus.Log(e, true);
           return false;
       }
   }
    

    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AtivarDesativarAviso;
    private javax.swing.JButton BotaoMenu;
    private javax.swing.JMenuItem CancelarCupom;
    private javax.swing.JMenuItem ConfigNFCe;
    private javax.swing.JMenuItem Contingencia;
    private javax.swing.JMenu Fiscal;
    private javax.swing.JMenuItem LeituraX;
    private javax.swing.JPopupMenu MenuPrincipalPopup;
    private javax.swing.JMenu NFCe;
    private javax.swing.JMenuItem NFCeEmitidas;
    private javax.swing.JPanel PainelBarraStatus;
    private javax.swing.JPanel PainelBotoes;
    private javax.swing.JPanel PainelCompleto;
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelLogo;
    private javax.swing.JPanel PainelTopo;
    private javax.swing.JMenuItem ReducaoZ;
    private javax.swing.JMenuItem RepositorioLocalNFCe;
    private org.jdesktop.swingx.painter.AlphaPainter alphaPainter1;
    private javax.swing.JButton bReceberCadastro;
    private javax.swing.JButton btAbrirCaixa;
    private javax.swing.JButton btBoletosDSW;
    private javax.swing.JButton btBoletosDSW1;
    private javax.swing.JButton btClientes;
    private javax.swing.JButton btConectividade;
    private javax.swing.JButton btConfigImpressora;
    private javax.swing.JButton btConfigNFCe;
    private javax.swing.JButton btConfigPDV;
    private javax.swing.JButton btConfigurar;
    private javax.swing.JButton btDownloadNFCe;
    private javax.swing.JButton btDownloadNFe;
    private javax.swing.JButton btEnviarContigencia;
    private javax.swing.JButton btEnviarMov;
    private javax.swing.JButton btFecharCaixa;
    private javax.swing.JButton btHistContingencia;
    private javax.swing.JButton btLeituraX;
    private javax.swing.JButton btLogout;
    private javax.swing.JButton btNFCeEmitidas;
    private javax.swing.JButton btNFeEmitidas;
    private javax.swing.JButton btPDV;
    private javax.swing.JButton btPrevenda;
    private javax.swing.JButton btReducaoZ;
    private javax.swing.JButton btResumo;
    private javax.swing.JButton btResumoNFCE;
    private javax.swing.JButton btResumoNFe;
    private javax.swing.JButton btSair;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JScrollPane jScrollPane1;
    private org.jdesktop.swingx.JXTaskPaneContainer jXTPMenu;
    private javax.swing.JMenu jmSair;
    private javax.swing.JMenu jmSincronismo;
    private javax.swing.JMenu jmVenda;
    private org.jdesktop.swingx.JXTaskPane jtxpCaixa;
    private org.jdesktop.swingx.JXTaskPane jtxpConfiguracao;
    private org.jdesktop.swingx.JXTaskPane jtxpECF;
    private org.jdesktop.swingx.JXTaskPane jtxpNFCE;
    private org.jdesktop.swingx.JXTaskPane jtxpNFE;
    private org.jdesktop.swingx.JXTaskPane jtxpSincronismo;
    private org.jdesktop.swingx.JXTaskPane jtxpVenda;
    private org.jdesktop.swingx.JXTaskPane jxtpAvisos;
    private org.jdesktop.swingx.JXTaskPane jxtpDinnamus;
    private org.jdesktop.swingx.JXTaskPane jxtpRetaguardaWeb;
    private org.jdesktop.swingx.JXTaskPane jxtpUsuario;
    private javax.swing.JTextArea lblAvisosNFCe;
    private javax.swing.JLabel lblCaixa;
    private javax.swing.JLabel lblLogoApp;
    private javax.swing.JLabel lblLoja;
    private javax.swing.JLabel lblNomeHost;
    private javax.swing.JLabel lblPDV;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lbltitulo;
    private javax.swing.JMenuItem mGerarCargainicial;
    private javax.swing.JMenuItem menuAbrirCaixa;
    private javax.swing.JMenuItem menuFecharCaixa;
    private javax.swing.JMenuItem menuGerarArqCArga;
    private javax.swing.JMenuItem menuLogout;
    private javax.swing.JMenuItem menuPDV;
    private javax.swing.JMenuItem menuResumo;
    private javax.swing.JMenuItem menuSair;
    private javax.swing.JMenuItem miEnvioMov;
    private javax.swing.JMenuItem miRecepCadastros;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the ExecutarTarefa
     */
    public boolean isExecutarTarefa() {
        return ExecutarTarefa;
    }

    /**
     * @param ExecutarTarefa the ExecutarTarefa to set
     */
    public void setExecutarTarefa(boolean ExecutarTarefa) {
        this.ExecutarTarefa = ExecutarTarefa;
    }
    
    private boolean Iniciar_Menu(){
        boolean Ret = false;
        try {
            
        /*    jtxpCaixa.setTitle("Caixa");            
            ImageIcon icon1 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/img/calculator_edit.png"));
            jtxpCaixa.setIcon(icon1);
            jtxpCaixa.setCollapsed(true);
            jtxpVenda.setTitle("Venda");   
            jtxpVenda.setCollapsed(true);
            ImageIcon icon2 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/img/Shopping cart.png"));
            jtxpVenda.setIcon(icon2);
            jtxpECF.setTitle("ECF");
            jtxpECF.setCollapsed(true);
            ImageIcon icon3 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/img/impressoraFiscal.png"));
            jtxpECF.setIcon(icon3);
            jtxpNFCE.setTitle("NFC-e");
            jtxpNFCE.setCollapsed(true);
            ImageIcon icon4 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/InteracaoUsuario/nfce/logo-nfce-xs.png"));
            jtxpNFCE.setIcon(icon4);
            jtxpConfiguracao.setTitle("Configuração");
            jtxpConfiguracao.setCollapsed(true);
            ImageIcon icon5 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/img/gear.png"));
            jtxpConfiguracao.setIcon(icon5);
            //jtxpCaixa.setSpecial(true);
            jtxpSincronismo.setTitle("Sincronismo");
            jtxpSincronismo.setCollapsed(true);
            ImageIcon icon6 = new ImageIcon(this.getClass().getResource("/dinnamus/ui/img/Sync.gif"));
            jtxpSincronismo.setIcon(icon6);*/
            jXTPMenu.setAutoscrolls(true);
            jxtpAvisos.setVisible(false);
            jxtpRetaguardaWeb.setVisible(false);
            //jtxpNFE.setVisible(false);
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;    
    
    }
            
   
}
