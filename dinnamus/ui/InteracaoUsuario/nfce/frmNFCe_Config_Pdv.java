/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package dinnamus.ui.InteracaoUsuario.nfce;

import MetodosDeNegocio.Venda.pdvgerenciar;
import br.String.ManipulacaoString;
import br.TratamentoNulo.TratamentoNulos;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.ItemLista;
import br.com.ui.MetodosUI_Auxiliares_1;
import com.nfce.config.NFCE_Configurar;
import com.nfce.config.NFCeConfiguracaoPDV;
import java.sql.ResultSet;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Fernando
 */
public class frmNFCe_Config_Pdv extends javax.swing.JDialog {

    /**
     * Creates new form frmNFCe_Config_Pdv
     */
    private NFCeConfiguracaoPDV configpdv =null;
    private boolean CarregouOK=false;
    private int PK_NFCe_Config=0;
    private boolean Gravou = false;
    private int modelo ;
    public frmNFCe_Config_Pdv(java.awt.Frame parent, boolean modal, int PK_off_nfce_config, int modelo) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
         this.modelo = modelo;
        this.setPK_NFCe_Config(PK_off_nfce_config);
        configpdv= new NFCeConfiguracaoPDV();
        CarregouOK=IniciarUI();
       
        
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PainelPrincipal = new javax.swing.JPanel();
        PainelTitulo = new javax.swing.JPanel();
        btFechar1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        PainelInternoGe = new javax.swing.JLabel();
        PainelCorpo = new javax.swing.JPanel();
        PainelInterno = new javax.swing.JPanel();
        PainelConfigPDV = new javax.swing.JPanel();
        cbAmbiente = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtSerie = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        chkNFCeAtivada = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();
        cbVersao = new javax.swing.JComboBox();
        PainelBotoes = new javax.swing.JPanel();
        btAtualizarDadosPDV = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(384, 294));
        setSize(new java.awt.Dimension(384, 294));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelTitulo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTitulo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelTitulo.setLayout(new java.awt.GridBagLayout());

        btFechar1.setBackground(new java.awt.Color(0, 0, 0));
        btFechar1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btFechar1.setForeground(new java.awt.Color(255, 255, 255));
        btFechar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar1.setMnemonic('F');
        btFechar1.setText("FECHAR");
        btFechar1.setBorderPainted(false);
        btFechar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        PainelTitulo.add(btFechar1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.1;
        PainelTitulo.add(jLabel5, gridBagConstraints);

        PainelInternoGe.setBackground(new java.awt.Color(0, 0, 0));
        PainelInternoGe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        PainelInternoGe.setForeground(new java.awt.Color(255, 255, 255));
        PainelInternoGe.setText("Configurações do PDV");
        PainelInternoGe.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 4, 0, 0);
        PainelTitulo.add(PainelInternoGe, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        PainelPrincipal.add(PainelTitulo, gridBagConstraints);

        PainelCorpo.setBackground(new java.awt.Color(255, 255, 204));
        PainelCorpo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        PainelCorpo.setLayout(new java.awt.GridBagLayout());

        PainelInterno.setBackground(new java.awt.Color(255, 255, 255));
        PainelInterno.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelInterno.setLayout(new java.awt.GridBagLayout());

        PainelConfigPDV.setOpaque(false);
        PainelConfigPDV.setLayout(new java.awt.GridBagLayout());

        cbAmbiente.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 1);
        PainelConfigPDV.add(cbAmbiente, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(255, 255, 255));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("[2] Número");
        jLabel10.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PainelConfigPDV.add(jLabel10, gridBagConstraints);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("[1] Ambiente de Trabalho");
        jLabel11.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PainelConfigPDV.add(jLabel11, gridBagConstraints);

        txtNumero.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtNumero.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumero.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 45;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelConfigPDV.add(txtNumero, gridBagConstraints);

        txtSerie.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtSerie.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        PainelConfigPDV.add(txtSerie, gridBagConstraints);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setText("[4] Versão");
        jLabel13.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PainelConfigPDV.add(jLabel13, gridBagConstraints);

        chkNFCeAtivada.setBackground(new java.awt.Color(255, 255, 255));
        chkNFCeAtivada.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        chkNFCeAtivada.setText("ATIVADA");
        chkNFCeAtivada.setFocusable(false);
        chkNFCeAtivada.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        PainelConfigPDV.add(chkNFCeAtivada, gridBagConstraints);

        jLabel14.setBackground(new java.awt.Color(255, 255, 255));
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setText("[3] Série");
        jLabel14.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PainelConfigPDV.add(jLabel14, gridBagConstraints);

        cbVersao.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbVersao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "3.10", "4.00" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PainelConfigPDV.add(cbVersao, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 4);
        PainelInterno.add(PainelConfigPDV, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.BASELINE;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(5, 6, 6, 5);
        PainelCorpo.add(PainelInterno, gridBagConstraints);

        PainelBotoes.setBackground(new java.awt.Color(0, 0, 0));
        PainelBotoes.setLayout(new java.awt.GridBagLayout());

        btAtualizarDadosPDV.setBackground(new java.awt.Color(0, 0, 0));
        btAtualizarDadosPDV.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizarDadosPDV.setForeground(new java.awt.Color(255, 255, 255));
        btAtualizarDadosPDV.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Yes.png"))); // NOI18N
        btAtualizarDadosPDV.setMnemonic('G');
        btAtualizarDadosPDV.setText("Gravar");
        btAtualizarDadosPDV.setBorderPainted(false);
        btAtualizarDadosPDV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarDadosPDVActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 6, 0);
        PainelBotoes.add(btAtualizarDadosPDV, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        PainelCorpo.add(PainelBotoes, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.3;
        gridBagConstraints.weighty = 0.2;
        PainelPrincipal.add(PainelCorpo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btFechar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar1ActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_btFechar1ActionPerformed

    private boolean IniciarUI(){
        boolean Ret = false;
        try {
            DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel();
            ItemLista i = new ItemLista();
            i.setIndice(0);
            i.setDescricao("< NÃO DEFINIDO >");
            defaultComboBoxModel.addElement(i);
            i = new ItemLista();
            i.setIndice(1);
            i.setDescricao("PRODUÇÃO");
            defaultComboBoxModel.addElement(i);
            i = new ItemLista();
            i.setIndice(2);
            i.setDescricao("HOMOLOGAÇÃO");
            
            defaultComboBoxModel.addElement(i);
            
            cbAmbiente.setModel(defaultComboBoxModel);           
            
             if(modelo==NFCE_Configurar.NFCE_MODELO){
                      PainelInternoGe.setText(PainelInternoGe.getText() + " - NFCe");
                 }else{
                      PainelInternoGe.setText(PainelInternoGe.getText() + " - NFe");
                 }
            
            ResultSet rs = NFCE_Configurar.ListarConfiguracaoPDV_PorPDV(pdvgerenciar.CodigoPDV(),modelo);
            if(rs.next()){
                configpdv.setID( rs.getInt("id") );
                configpdv.setID_NFCe_Config(rs.getInt("id_nfce_config"));
                configpdv.setAmbiente( TratamentoNulos.getTratarInt().Tratar(rs.getInt("ambiente"),0));
                configpdv.setSerie(TratamentoNulos.getTratarInt().Tratar(rs.getInt("serie"),0) );
                configpdv.setNumero(TratamentoNulos.getTratarInt().Tratar(rs.getInt("numero"),0) );
                configpdv.setVersao(TratamentoNulos.getTratarString().Tratar(rs.getString("versao"),""));                                  
                configpdv.setContigencia(rs.getBoolean("contigencia"));                               
                configpdv.setAtivada(rs.getBoolean("ativada"));                               
                cbAmbiente.setSelectedIndex(configpdv.getAmbiente());
                chkNFCeAtivada.setSelected(configpdv.isAtivada());
                txtNumero.setText(configpdv.getNumero().toString());
                txtSerie.setText(configpdv.getSerie().toString());
                cbVersao.setSelectedItem(configpdv.getVersao().toString());
                
                
                //txtVersao.setText();
                //chkContigencia.setSelected(configpdv.isContigencia());
            }else{
                txtSerie.setText("1");
            }
            Ret=true;
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private void btAtualizarDadosPDVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarDadosPDVActionPerformed
        // TODO add your handling code here:
        try {

          GravaConfiguracoesPDV();

        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btAtualizarDadosPDVActionPerformed
    private boolean Validar(){
        boolean Ret = false;
        try {            
           String Numero =   txtNumero.getText();           
           if(!ManipulacaoString.DeixarSomenteNumeros(Numero).equalsIgnoreCase(Numero) || Numero.trim().equalsIgnoreCase("")){               
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O conteúdo do campo número é inválido :  Válido [1-99999]", "Campo Número Inválido");
                return false;
                     
           }  
           
           Integer num = Integer.valueOf(Numero);
           if(num<=0 || num >99999){
             MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O conteúdo do campo número é inválido :  Válido [1-99999]", "Campo Número Inválido");
             return false;
           }   
           
           String Serie =  txtSerie.getText();
           if(!ManipulacaoString.DeixarSomenteNumeros(Serie).equalsIgnoreCase(Serie) || Serie.trim().equalsIgnoreCase("")){                
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O conteúdo do campo série é inválido : Válido [1-99999]", "Campo Série Inválido");
                return false;
                          
           }
           num = Integer.valueOf(Serie);
           if(num<=0 || num >99999){
              MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("O conteúdo do campo série é inválido : Válido [1-99999]", "Campo Série Inválido");
              return false;
           }       
           
           Ret=true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    private boolean GravaConfiguracoesPDV(){
        boolean Ret = false;
        try {
            
            if(!Validar()){return false;}            
             
            if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma a configuração do PDV ?", "Configurar PDV NFCe")==MetodosUI_Auxiliares_1.Sim()){
                ItemLista i = (ItemLista) cbAmbiente.getSelectedItem();
                if(i!=null){
                    configpdv.setAmbiente(Integer.parseInt(i.getIndice().toString()));
                }
                configpdv.setID_NFCe_Config(getPK_NFCe_Config());
                configpdv.setPDV(pdvgerenciar.CodigoPDV());
                configpdv.setSerie(Integer.parseInt(txtSerie.getText()));
                configpdv.setNumero(Integer.parseInt(txtNumero.getText()));
                configpdv.setAtivada(chkNFCeAtivada.isSelected());
                configpdv.setVersao(cbVersao.getSelectedItem().toString());
                configpdv.setModelo(modelo);
                //configpdv.setContigencia(chkContigencia.isSelected());
                
                int CodigoCFGPDV = NFCE_Configurar.GravarConfigPDV(configpdv, Sistema.getLojaAtual());
                if(CodigoCFGPDV>0){
                   MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Configuração atualizada com sucesso", "Configuração NFCe no PDV - OK");                     
                   setGravou(true);
                   this.dispose();
                }else{
                   MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Não foi possível atualizar a configuração", "Configuração NFCe no PDV - Falhou");
                }
            }
            
            
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
        return Ret;
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if(!CarregouOK){
            this.dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelBotoes;
    private javax.swing.JPanel PainelConfigPDV;
    private javax.swing.JPanel PainelCorpo;
    private javax.swing.JPanel PainelInterno;
    private javax.swing.JLabel PainelInternoGe;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelTitulo;
    private javax.swing.JButton btAtualizarDadosPDV;
    private javax.swing.JButton btFechar1;
    private javax.swing.JComboBox cbAmbiente;
    private javax.swing.JComboBox cbVersao;
    private javax.swing.JCheckBox chkNFCeAtivada;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtSerie;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the PK_NFCe_Config
     */
    public int getPK_NFCe_Config() {
        return PK_NFCe_Config;
    }

    /**
     * @param PK_NFCe_Config the PK_NFCe_Config to set
     */
    public void setPK_NFCe_Config(int PK_NFCe_Config) {
        this.PK_NFCe_Config = PK_NFCe_Config;
    }

    /**
     * @return the Gravou
     */
    public boolean isGravou() {
        return Gravou;
    }

    /**
     * @param Gravou the Gravou to set
     */
    public void setGravou(boolean Gravou) {
        this.Gravou = Gravou;
    }
}

