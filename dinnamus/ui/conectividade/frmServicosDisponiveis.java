/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dinnamus.ui.conectividade;

import MetodosDeNegocio.Seguranca.UsuarioSistema;
import UI.Seguranca.ValidarAcessoAoProcesso;
import br.com.info.Sistema;
import br.com.log.LogDinnamus;
import br.com.ui.MetodosUI_Auxiliares_1;
import com.infra.RestInfraestrutura;
import com.lowagie.text.Font;
import java.sql.ResultSet;
import java.util.Hashtable;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author DSWM
 */
public class frmServicosDisponiveis extends javax.swing.JDialog {

    /**
     * Creates new form frmServicosDisponiveis
     */
    boolean iniciar = false;
   
    private RestInfraestrutura restInfraestrutura = new RestInfraestrutura();

    public frmServicosDisponiveis(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        iniciar = iniciarUI();
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PainelPrincipal = new javax.swing.JPanel();
        PainelEnderecoCentral = new javax.swing.JPanel();
        txtEnderecoNuvem1 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        chkNuvemAtivar1 = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        PainelServicosInfra = new javax.swing.JPanel();
        dbgServicosInfra = new br.com.ui.JTableDinnamuS();
        jLabel3 = new javax.swing.JLabel();
        slMAxConexao = new javax.swing.JSlider();
        slIntervaloConexao = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        tbtLog = new javax.swing.JToggleButton();
        PainelServicosApp = new javax.swing.JPanel();
        dbgServicosApp = new br.com.ui.JTableDinnamuS();
        jLabel2 = new javax.swing.JLabel();
        PainelHospedagem = new javax.swing.JPanel();
        dbgHospedagem = new br.com.ui.JTableDinnamuS();
        jLabel1 = new javax.swing.JLabel();
        PainelTitulo = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        btFechar2 = new javax.swing.JButton();
        Painelbotoes1 = new javax.swing.JPanel();
        btAtualizarDadosPDV1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(740, 580));
        setModal(true);
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(740, 580));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        PainelPrincipal.setBackground(new java.awt.Color(255, 255, 204));
        PainelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PainelPrincipal.setName(""); // NOI18N
        PainelPrincipal.setLayout(new java.awt.GridBagLayout());

        PainelEnderecoCentral.setBackground(new java.awt.Color(255, 255, 255));
        PainelEnderecoCentral.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        PainelEnderecoCentral.setLayout(new java.awt.GridBagLayout());

        txtEnderecoNuvem1.setEditable(false);
        txtEnderecoNuvem1.setBackground(new java.awt.Color(204, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 14;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 8, 0);
        PainelEnderecoCentral.add(txtEnderecoNuvem1, gridBagConstraints);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setText("Servidor DSW");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 3);
        PainelEnderecoCentral.add(jLabel30, gridBagConstraints);

        chkNuvemAtivar1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        chkNuvemAtivar1.setText("Ativar");
        chkNuvemAtivar1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkNuvemAtivar1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 17;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
        PainelEnderecoCentral.add(chkNuvemAtivar1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        PainelPrincipal.add(PainelEnderecoCentral, gridBagConstraints);

        PainelServicosInfra.setBackground(new java.awt.Color(255, 255, 255));
        PainelServicosInfra.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelServicosInfra.setLayout(new java.awt.GridBagLayout());

        dbgServicosInfra.setExibirBarra(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        PainelServicosInfra.add(dbgServicosInfra, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Serviços de Infra");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        PainelServicosInfra.add(jLabel3, gridBagConstraints);

        slMAxConexao.setMajorTickSpacing(5);
        slMAxConexao.setMaximum(50);
        slMAxConexao.setPaintLabels(true);
        slMAxConexao.setPaintTicks(true);
        slMAxConexao.setSnapToTicks(true);
        slMAxConexao.setToolTipText("");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(7, 13, 7, 13);
        PainelServicosInfra.add(slMAxConexao, gridBagConstraints);

        slIntervaloConexao.setMajorTickSpacing(5);
        slIntervaloConexao.setMaximum(30);
        slIntervaloConexao.setPaintLabels(true);
        slIntervaloConexao.setPaintTicks(true);
        slIntervaloConexao.setValue(0);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 6, 12);
        PainelServicosInfra.add(slIntervaloConexao, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Intervalo entre cada conexões(minutos)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        PainelServicosInfra.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText(" Número máximo conexões diarias");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        PainelServicosInfra.add(jLabel5, gridBagConstraints);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        PainelServicosInfra.add(jSeparator1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        PainelServicosInfra.add(jSeparator2, gridBagConstraints);

        jPanel1.setOpaque(false);

        tbtLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-ligar-52.png"))); // NOI18N
        tbtLog.setText("Enviar LOG ");
        tbtLog.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        tbtLog.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        tbtLog.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tbtLogItemStateChanged(evt);
            }
        });
        tbtLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbtLogActionPerformed(evt);
            }
        });
        jPanel1.add(tbtLog);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        PainelServicosInfra.add(jPanel1, gridBagConstraints);

        jTabbedPane1.addTab("Infraestrurura", PainelServicosInfra);

        PainelServicosApp.setBackground(new java.awt.Color(255, 255, 255));
        PainelServicosApp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelServicosApp.setLayout(new java.awt.GridBagLayout());

        dbgServicosApp.setExibirBarra(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        PainelServicosApp.add(dbgServicosApp, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Serviços de Aplicativo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        PainelServicosApp.add(jLabel2, gridBagConstraints);

        jTabbedPane1.addTab("Aplicação", PainelServicosApp);

        PainelHospedagem.setBackground(new java.awt.Color(255, 255, 255));
        PainelHospedagem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PainelHospedagem.setLayout(new java.awt.GridBagLayout());

        dbgHospedagem.setExibirBarra(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.2;
        PainelHospedagem.add(dbgHospedagem, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Hospedagem contrato");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        PainelHospedagem.add(jLabel1, gridBagConstraints);

        jTabbedPane1.addTab("Hospedagem", PainelHospedagem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(7, 7, 7, 7);
        PainelPrincipal.add(jTabbedPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(PainelPrincipal, gridBagConstraints);

        PainelTitulo.setBackground(new java.awt.Color(0, 0, 0));
        PainelTitulo.setLayout(new java.awt.GridBagLayout());

        jLabel19.setBackground(new java.awt.Color(0, 0, 0));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-trabalho-remoto-40.png"))); // NOI18N
        jLabel19.setText("Configurar Nuvem");
        jLabel19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel19.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        PainelTitulo.add(jLabel19, gridBagConstraints);

        btFechar2.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        btFechar2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Shut down_16x16.png"))); // NOI18N
        btFechar2.setMnemonic('x');
        btFechar2.setToolTipText("");
        btFechar2.setBorderPainted(false);
        btFechar2.setOpaque(false);
        btFechar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFechar2ActionPerformed(evt);
            }
        });
        btFechar2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btFechar2KeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        PainelTitulo.add(btFechar2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        getContentPane().add(PainelTitulo, gridBagConstraints);

        Painelbotoes1.setBackground(new java.awt.Color(0, 0, 0));
        Painelbotoes1.setLayout(new java.awt.GridBagLayout());

        btAtualizarDadosPDV1.setBackground(new java.awt.Color(0, 0, 0));
        btAtualizarDadosPDV1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btAtualizarDadosPDV1.setForeground(new java.awt.Color(255, 255, 255));
        btAtualizarDadosPDV1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/Yes.png"))); // NOI18N
        btAtualizarDadosPDV1.setMnemonic('G');
        btAtualizarDadosPDV1.setText("Gravar Configuração");
        btAtualizarDadosPDV1.setBorderPainted(false);
        btAtualizarDadosPDV1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAtualizarDadosPDV1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 313, 8, 313);
        Painelbotoes1.add(btAtualizarDadosPDV1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        getContentPane().add(Painelbotoes1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        if (!iniciar) {
            dispose();
        }
    }//GEN-LAST:event_formWindowOpened

    private void btFechar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFechar2ActionPerformed
        try {
            //--ValorFinalPosDesconto=  ValorVendaPDV - nDescontoLiberado - DescontoAtacadoLiberado + AcrescimoLiberado;  //FormatarNumero.FormatarNumero(txtValorFinal.getValue().toString());
            //DAO_RepositorioLocal.RollBack_Statment();
            dispose();
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
        }
    }//GEN-LAST:event_btFechar2ActionPerformed

    private void btFechar2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btFechar2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_btFechar2KeyPressed

    private void btAtualizarDadosPDV1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAtualizarDadosPDV1ActionPerformed
        // TODO add your handling code here:
        if(MetodosUI_Auxiliares_1.MensagemAoUsuarioOpcoes_Sim_e_Nao("Confirma operação ?", "Gravar configurações")==MetodosUI_Auxiliares_1.Sim()){
            if(restInfraestrutura.ativarProxy(chkNuvemAtivar1.isSelected(),slMAxConexao.getValue(),slIntervaloConexao.getValue(),!tbtLog.isSelected())){
                 MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Configurações atualizadas com sucesso", "Procedimento OK");
            
            }else{
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesINFO("Não foi possível gravar as configurações", "Procedimento não realizado");
            }
        }

    }//GEN-LAST:event_btAtualizarDadosPDV1ActionPerformed

    private void tbtLogItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tbtLogItemStateChanged
        // TODO add your handling code here:
        
        if(!tbtLog.isSelected()){
            tbtLog.setText("ENVIAR LOG");
             tbtLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-ligar-52.png"))); // NOI18N
       
        }else{
            tbtLog.setText("Não Enviar LOG");
             tbtLog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-desligar-52.png"))); // NOI18N
       
        }
     
    }//GEN-LAST:event_tbtLogItemStateChanged

    private void tbtLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbtLogActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbtLogActionPerformed

  
    private boolean iniciarUI() {
        try {

            
            Integer nCodigoUsuario =ValidarAcessoAoProcesso.Verificar(null , UsuarioSistema.getIdUsuarioLogado(), "PDV_CFGCON", Sistema.getLojaAtual(), true, "Configurar Conectividade");
            if(nCodigoUsuario==0){
                MetodosUI_Auxiliares_1.MensagemAoUsuarioSimplesAVISO("Usuário não possui permissão de acesso a este módulo", "Acesso não autorizado");
                return false;
            }
            if(!iniciarUIProxy()){return false;}
            
            if (!iniciarUI_DbgHospedagem()) {
                return false;
            }

            if (!iniciarUI_DbgServInfra()) {
                return false;
            }

            if (!iniciarUI_DbgServApp()) {
                return false;
            }

            Hashtable labelTable = new Hashtable();
           
            ImageIcon img =  new javax.swing.ImageIcon(getClass().getResource("/dinnamus/ui/img/icons8-infinito-24.png"));//  (ImageIcon)lblLogoCarregando.getIcon(); 
            JLabel jLabel = new JLabel(img);
            labelTable.put( new Integer(50), jLabel);
            for (Integer i = 1; i < 10; i++) {
                String label =  String.valueOf(i *5);
                labelTable.put( new Integer(i *5), new JLabel(label) );
            }
           
            slMAxConexao.setLabelTable(labelTable);
            
            Hashtable labelTable2 = new Hashtable();
             for (Integer i = 1; i <= 6; i++) {
                String label =  String.valueOf(i *5);
                labelTable2.put( new Integer(i *5), new JLabel(label) );
            }
              slIntervaloConexao.setLabelTable(labelTable2);
            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    public boolean iniciarUIProxy(){
        try {
            ResultSet rsProxy = null;// restInfraestrutura.getProxy();
            if(rsProxy!=null && rsProxy.next()){
               txtEnderecoNuvem1.setText(rsProxy.getString("endereco"));
               chkNuvemAtivar1.setSelected(rsProxy.getBoolean("ativo"));
               slIntervaloConexao.setValue(rsProxy.getInt("intervaloentreconexoes"));
               slMAxConexao.setValue(rsProxy.getInt("qtconexaodia"));
               tbtLog.setSelected(!rsProxy.getBoolean("enviarlog"));
            }
            
            return true;
        } catch (Exception e) {
             LogDinnamus.Log(e, true);
            return false;
        }
    }
    
   
    

    private boolean iniciarUI_DbgHospedagem() {
        try {

            //dbgHospedagem.setRsDados(restInfraestrutura.getHospedagem());
            dbgHospedagem.setAjustaColunaAoPainel(true);
            dbgHospedagem.setColunaComTamanhosEmPercentual(true);
            dbgHospedagem.addClColunas("servappip", "Serv. Aplicação", 50);
            dbgHospedagem.addClColunas("servinfraip", "Serv. Infraestrutura", 50);

            AtualizarUI_DbgHospedagem();

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private boolean iniciarUI_DbgServInfra() {
        try {
            dbgServicosInfra.DefinirFonte("Arial", Font.NORMAL, 9);
            //dbgServicosInfra.setRsDados(restInfraestrutura.getServicosInfra());
            dbgServicosInfra.setAjustaColunaAoPainel(true);
            dbgServicosInfra.setColunaComTamanhosEmPercentual(true);
            dbgServicosInfra.addClColunas("descricao", "Serviço", 30);
            dbgServicosInfra.addClColunas("uri", "URI", 40);
            dbgServicosInfra.addClColunas("ativo", "Ativo", 10);
            dbgServicosInfra.addClColunas("nomegrupo", "Versão", 20);

            AtualizarUI_DbgServInfra();

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private boolean iniciarUI_DbgServApp() {
        try {

            dbgServicosApp.DefinirFonte("Arial", Font.NORMAL, 9);
            //dbgServicosApp.setRsDados(restInfraestrutura.getServicosApp());
            dbgServicosApp.setAjustaColunaAoPainel(true);
            dbgServicosApp.setColunaComTamanhosEmPercentual(true);
            dbgServicosApp.addClColunas("descricao", "Serviço", 30);
            dbgServicosApp.addClColunas("uri", "URI", 40);
            dbgServicosApp.addClColunas("ativo", "Ativo", 10);
            dbgServicosApp.addClColunas("nomegrupo", "Versão", 20);

            AtualizarUI_DbgServApp();

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private boolean AtualizarUI_DbgServApp() {
        try {

           // dbgServicosApp.setRsDados(restInfraestrutura.getServicosApp());

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private boolean AtualizarUI_DbgServInfra() {
        try {

            //dbgServicosInfra.setRsDados(restInfraestrutura.getServicosInfra());

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }

    private boolean AtualizarUI_DbgHospedagem() {
        try {

           // dbgHospedagem.setRsDados(restInfraestrutura.getHospedagem());

            return true;
        } catch (Exception e) {
            LogDinnamus.Log(e, true);
            return false;
        }
    }
    private frmProcessamentoConectividade apresentacao = null;

    private void FecharMensagemProcessamento() {
        if (apresentacao != null) {
            apresentacao.dispose();
        }
    }
    private void iniciarUIProcessamento(){
        apresentacao = new frmProcessamentoConectividade(null, false);
        apresentacao.setLocationRelativeTo(null);
        apresentacao.setAlwaysOnTop(true);
        apresentacao.setVisible(true);
    }

    private void MensagemProcessamento(final String msg,final boolean erro, final boolean exibirBtnOk) {

        //final frmInicializacao _inicializacao=this;
        new Thread(new Runnable() {
            @Override
            public void run() {
                
                apresentacao.AtualizarMensagem(msg,erro,exibirBtnOk);
            }
        }).start();

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelEnderecoCentral;
    private javax.swing.JPanel PainelHospedagem;
    private javax.swing.JPanel PainelPrincipal;
    private javax.swing.JPanel PainelServicosApp;
    private javax.swing.JPanel PainelServicosInfra;
    private javax.swing.JPanel PainelTitulo;
    private javax.swing.JPanel Painelbotoes1;
    private javax.swing.JButton btAtualizarDadosPDV1;
    private javax.swing.JButton btFechar2;
    private javax.swing.JCheckBox chkNuvemAtivar1;
    private br.com.ui.JTableDinnamuS dbgHospedagem;
    private br.com.ui.JTableDinnamuS dbgServicosApp;
    private br.com.ui.JTableDinnamuS dbgServicosInfra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JSlider slIntervaloConexao;
    private javax.swing.JSlider slMAxConexao;
    private javax.swing.JToggleButton tbtLog;
    private javax.swing.JTextField txtEnderecoNuvem1;
    // End of variables declaration//GEN-END:variables
}
